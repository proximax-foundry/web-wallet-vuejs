import"./node-stdlib-browser-23a8bc7f.js";import{b as s}from"./buffer-6d367910.js";import{p as c}from"./process-2209b2b3.js";var p,y;function b(){if(y)return p;y=1;var i=s,f=i.Buffer,e={},t;for(t in i)i.hasOwnProperty(t)&&(t==="SlowBuffer"||t==="Buffer"||(e[t]=i[t]));var n=e.Buffer={};for(t in f)f.hasOwnProperty(t)&&(t==="allocUnsafe"||t==="allocUnsafeSlow"||(n[t]=f[t]));if(e.Buffer.prototype=f.prototype,(!n.from||n.from===Uint8Array.from)&&(n.from=function(r,o,a){if(typeof r=="number")throw new TypeError('The "value" argument must not be of type number. Received type '+typeof r);if(r&&typeof r.length>"u")throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof r);return f(r,o,a)}),n.alloc||(n.alloc=function(r,o,a){if(typeof r!="number")throw new TypeError('The "size" argument must be of type number. Received type '+typeof r);if(r<0||r>=2*(1<<30))throw new RangeError('The value "'+r+'" is invalid for option "size"');var u=f(r);return!o||o.length===0?u.fill(0):typeof a=="string"?u.fill(o,a):u.fill(o),u}),!e.kStringMaxLength)try{e.kStringMaxLength=c.binding("buffer").kStringMaxLength}catch{}return e.constants||(e.constants={MAX_LENGTH:e.kMaxLength},e.kStringMaxLength&&(e.constants.MAX_STRING_LENGTH=e.kStringMaxLength)),p=e,p}export{b as r};
