import{_ as oa,c as d,A as Ie,y as ia,k as ca,g as n,D as _e,w as h,H as r,bc as da,n as oe,r as T,o as _,f as C,e as t,s as u,h as g,t as o,i as R,l as b,O as ua,R as ma,b as va,W as pa}from"./index-2c45a7ef.js";import{_ as fa,S as wa,M as xa,a as ga}from"./SelectInputAccountOutgoingSwap-037ee358.js";import{S as ba,_ as ya}from"./icon-dots-b74f2e91.js";import{a as Sa}from"./functions-edc91899.js";import{S as m}from"./swapUtils-5d1d181a.js";import{_ as ha}from"./eth-aa063e38.js";import{_ as Ce}from"./icon-xpx-072deeab.js";import{g as Ta}from"./address-ae442d6a.js";import"./icon-info-8b4f1351.js";import"./jdenticon-module-eb1215b2.js";import"./delete-8b454e7f.js";import"./jspdf.es.min-59d0d4fd.js";import"./qrcode-c87bed80.js";const ka={name:"ViewServicesMainnetSwapSiriusToETH",components:{PasswordInputClean:fa,SwapInputClean:wa,MetamaskAddressInput:xa,SwapCertificateComponent:ba,SelectInputAccountOutgoingSwap:ga},setup(){const E=d(()=>Ie.nativeToken.label),a=ia(),Ee=ca(),e=n(!0),G=n(180),Ge=d(()=>G.value%60),ie=d(()=>Math.floor(G.value/60)),ce=setInterval(()=>{--G.value},1e3),de=_e(()=>G.value,s=>{s<=0&&(X(),O())}),X=()=>{de(),e.value=!1,clearInterval(ce)},O=()=>{Ee.push({name:"ViewServicesMainnetSwap"})},y=n(1),B=n(!1),i=n(""),N=n(""),ue=n(""),W=n(0),Ne=d(()=>{if(!h.currentLoggedInWallet)return[];let s=h.currentLoggedInWallet.accounts.map(l=>({name:l.name,balance:l.balance,balanceDisplay:r.toCurrencyFormat(l.balance,6),type:"",address:r.createAddress(l.address).pretty(),publicKey:l.publicKey,isMultisig:!!l.getDirectParentMultisig().length}));if(B.value){let l=h.currentLoggedInWallet.others.filter(c=>c.type==="MULTISIG").map(c=>({name:c.name,balance:c.balance,balanceDisplay:r.toCurrencyFormat(c.balance,6),type:"MULTISIG",address:r.createAddress(c.address).pretty(),publicKey:c.publicKey,isMultisig:!0}));return s.concat(l)}else return s}),M=d(()=>Ne.value.find(s=>s.name===i.value)),Me=n("");_e(Me,s=>{if(s){let l=h.currentLoggedInWallet.accounts.find(c=>c.address==s);l||(l=h.currentLoggedInWallet.others.find(c=>c.address==s)),i.value=l.name,N.value=l.address,W.value=l.balance,ue.value=l.publicKey,A.value=r.convertNumberMinimumFormat(l.balance-S.value-f.value,6)}else i.value="",N.value="",W.value="",ue.value=""});const me=1e9,ve=1.2,j=n(!1),v=n(!1),w=n(!1),ze=n(!1),K=n(""),He="^[^ ]{8,}$",H=n(!1),D=n(!1),pe=n(""),Q=n(""),Ye=d(()=>!(p.value>0&&K.value.match(He)&&Q.value!=""&&!w.value)),p=n(0),fe=Ie.nativeToken.fullNamespace,De=r.createAsset(r.createNamespaceId(fe).toHex(),1),Fe=Ie.buildTxn,J=Fe.transferBuilder(),Ue=Fe.aggregateCompleteBuilder();let we={type:"Swap-xpx-eth",remoteAddress:"0".repeat(42)};const Ze=()=>{we.remoteAddress=Q.value,Le()};let q={type:"Swap-xpx-eth-fees",gasPrice:20,gasLimit:57500},k=new da(oe.chainNetworkName);k.init();let xe=k.swap_XPX_ETH_URL,ge=k.ETHScanUrl,$e=oe.currentNetworkProfile.chainExplorer.url+"/"+oe.currentNetworkProfile.chainExplorer.hashRoute+"/",be,ye;(async()=>{try{const s=m.getServiceInfoURL(xe),l=await m.getOutgoingSwapServiceInfo(s);be=l.siriusInfo.sinkingFundAddress,ye=l.siriusInfo.sinkingFeeAddress,ea()}catch{P("Service unavailable","Unable to get sink address"),O()}})();let F,z,Y;const ea=()=>{z=J.mosaics([De]).recipient(r.createAddress(be)).message(r.createPlainMessage(JSON.stringify(we))).build(),Y=J.mosaics([De]).recipient(r.createAddress(ye)).message(r.createPlainMessage(JSON.stringify(q))).build(),F=Ue.innerTransactions(r.createInnerTransaction([z,Y],"0".repeat(64))).build(),S.value=r.convertToExact(F.maxFee.compact(),6)};let S=n(0);const aa=d(()=>r.toCurrencyFormat(S.value,6)),Le=()=>{let s;p.value<0?s=0:s=p.value;const l=r.createAsset(r.createNamespaceId(fe).toHex(),r.convertToAbsolute(s,6)),c=r.createAsset(r.createNamespaceId(fe).toHex(),r.convertToAbsolute(f.value,6));z=J.mosaics([l]).recipient(r.createAddress(be)).message(r.createPlainMessage(JSON.stringify(we))).build(),Y=J.mosaics([c]).recipient(r.createAddress(ye)).message(r.createPlainMessage(JSON.stringify(q))).build(),F=Ue.innerTransactions(r.createInnerTransaction([z,Y],ue.value)).build(),S.value=r.convertToExact(F.maxFee.compact(),6)},Ve=d(()=>Se.value*$.value/me),Re=d(()=>he.value*Te.value/me),Xe=d(()=>Z.value*ke.value/me),Oe=d(()=>r.convertNumberMinimumFormat(Ve.value*ae.value,2)),Be=d(()=>r.convertNumberMinimumFormat(Re.value*ae.value,2)),We=d(()=>r.convertNumberMinimumFormat(Xe.value*ae.value,2)),je=d(()=>r.convertNumberMinimumFormat(Oe.value/ee.value*ve,6)),Ke=d(()=>r.convertNumberMinimumFormat(Be.value/ee.value*ve,6)),Qe=d(()=>r.convertNumberMinimumFormat(We.value/ee.value*ve,6)),Se=n(0),he=n(0),Z=n(0),$=n(55e3),Te=n(55e3),ke=n(55e3);(async()=>{let s=await m.getETH_SafeGwei(k.gasPriceConsultURL);if(s.status===0)console.log("Error, no data found. Please try again later");else{let l=s.result;Se.value=l.ProposeGasPrice,Z.value=l.FastGasPrice,he.value=Math.ceil(Z.value*1.1)}})(),(async()=>{const s=await m.getETH_GasLimit(k.gasPriceConsultURL);s.status===0?console.log("Error, no data found. Please try again later"):($.value=s.standardGasLimit,ke.value=s.fastGasLimit,Te.value=s.rapidGasLimit)})();const ee=n(0),ae=n(0);(async()=>{let s=await Sa(m.checkSwapPrice(k.priceConsultURL));ee.value=s.xpx,ae.value=s.eth})();const ta=()=>{p.value=A.value},sa=n(!1),Ae=n("");let U=n(0),L=n(0),f=n(0);const A=n(0),V=n(0),Je=s=>{Ae.value=s,s==="rapid"?(U.value=Te.value,L.value=he.value,f.value=Ke.value):s==="fast"?(U.value=ke.value,L.value=Z.value,f.value=Qe.value):(U.value=$.value,L.value=Se.value,f.value=je.value),q.gasPrice=L.value,q.gasLimit=U.value,A.value=r.convertNumberMinimumFormat(W.value-S.value-f.value,6),V.value=r.convertNumberMinimumFormat(S.value+f.value,6),p.value>A.value&&(p.value=A.value),M.value.balance<=V.value&&(p.value=0),M.value.balance<=V.value?(D.value=!0,H.value=!0):(D.value=!1,H.value=!1),Le()};_e($,()=>{y.value==2&&(M.value.balance<=V.value?(D.value=!0,H.value=!0):(D.value=!1,H.value=!1))});const te=n(""),na=()=>{w.value=!0,v.value=!0;try{Ta(Q.value)&&(j.value=!1)}catch{j.value=!0,w.value=!1,v.value=!1}if(!j.value)if(pa.verifyWalletPassword(h.currentLoggedInWallet.name,oe.chainNetworkName,K.value)){if(pe.value="",Ze(),Je(Ae.value),p.value+f.value+S.value>M.value.balance){P("Insufficient amount","Insufficient amount to perform swap",5e3);return}X();let s=m.signTransaction(N.value,K.value,F);te.value=s.hash,ra(s.payload)}else pe.value="Wallet password is incorrect",w.value=!1,v.value=!1},ra=async s=>{let c=JSON.stringify({txnInfo:{network:"eth",siriusTxnPayload:s}});try{const x=await fetch(m.getOutgoing_SwapTransfer_URL(xe),{method:"POST",headers:{"Content-Type":"application/json"},body:c});if(x.ok){const I=await x.json();re.value=I.data.txHash,qe.value=ge+I.data.txHash,se.value="",ne.value=I.data.swapId,le.value=m.generateQRCode(ge+I.data.txHash),y.value=2}else if(x.status==400){const I=await x.json();P("Swap operation failed",I.data.message),w.value=!1,v.value=!1}else x.status==409?(Pe.value=!0,v.value=!1):x.status==503?(a.add({severity:"warn",summary:"Service is unavailable",detail:"Please try again later",group:"br-custom"}),w.value=!1,v.value=!1):x.status==504&&(P("Swap request timed-out","Please check the status again"),v.value=!1,Pe.value=!0)}catch{P("Network error","Swap Server not found"),w.value=!1,v.value=!1}},la=async()=>{const s=await fetch(m.getOutgoing_SwapCheckByTxID_URL(xe,te.value));if(s.status==200){const l=await s.json();re.value=l.fulfillTransaction,se.value="",ne.value=l.data._id,le.value=m.generateQRCode(ge+l.fulfillTransaction),y.value=2}else P("Swap not found","Swap not found for the current transaction ID")},P=(s,l,c=void 0)=>{a.add({severity:"error",summary:s,detail:l,group:"br-custom",life:c})},qe=n(""),se=n(""),ne=n(""),re=n(""),le=n(""),Pe=n(!1);return{selectedAccountBalance:W,minBalanceAmount:V,includeMultisig:B,timerSecondsDisplay:Ge,timerMinutes:ie,currentPage:y,ethAddress:Q,showAddressErr:j,showPasswdError:ze,walletPasswd:K,passwdPattern:He,showAmountErr:H,amount:p,disableAmount:D,updateAmountToMax:ta,ethGasStrategy:Ae,isDisabledSwap:Ye,err:pe,swap:na,savedCheck:sa,allAvailableAccounts:Ne,selectedAccount:M,selectedAccountName:i,selectedGasPriceInGwei:L,selectedGasLimit:U,standardGasPrice:Ve,rapidGasPrice:Re,fastGasPrice:Xe,standardGasPriceInUSD:Oe,rapidGasPriceInUSD:Be,fastGasPriceInUSD:We,xpxAmountInStandardGasPrice:je,xpxAmountInRapidGasPrice:Ke,xpxAmountInFastGasPrice:Qe,txFeeDisplay:aa,gasPriceInXPX:f,maxSwapAmount:A,changeGasStrategy:Je,swapInProgress:w,certTransactionHash:re,swapLink:qe,swapTimestamp:se,swapId:ne,swapQr:le,saveCertificate:()=>{m.generateoutgoingPdfCert("ETH",se.value,N.value,ne.value,re.value,le.value,te.value)},selectedAccountAddress:N,isDisabledCancel:v,canCheckStatus:Pe,callTocheckSwapStatus:la,siriusTransactionHash:te,xpxExplorerUrl:$e,currentNativeTokenName:E,siriusAddress:Me,walletState:h,Helper:r}}},Aa={class:"lg:w-9/12 ml-2 mr-2 lg:ml-auto lg:mr-auto mt-5"},Pa={class:"mt-6 p-6 border filter shadow-lg text-center"},Ia={class:"flex my-10"},_a={class:"flex-none"},Ca={class:"flex border border-gray-300 rounded-md filter shadow-md"},Ea={class:"px-4 sm:px-10 self-center text-xxs sm:text-xs hidden md:inline-block lg:hidden xl:inline-block"},Ga={class:"flex-none"},Na={class:"flex border border-gray-300 rounded-md filter shadow-md"},Ma={class:"px-4 sm:px-10 self-center text-xxs sm:text-xs hidden md:inline-block lg:hidden xl:inline-block"},Ha={key:0},Da={key:0,class:"error error_box mb-5"},Fa={class:"relative"},Ua={key:0,class:"opacity-90 w-full h-full absolute z-10 bg-white"},La={class:"md:grid md:grid-cols-3 mb-4"},Va={class:"md:col-span-1 mb-3"},Ra={class:"mb-1"},Xa={class:"md:col-span-1 mb-3"},Oa={class:"mb-1"},Ba={class:"md:col-span-1 mb-3"},Wa={class:"mb-1"},ja={class:"text-tsm text-center mb-2 sm:mb-10"},Ka={class:"rounded bg-gray-100 p-5 mb-5"},Qa={class:"inline-block mr-4 text-xs"},Ja={class:"bg-blue-50 border border-blue-primary h-20 mt-5 rounded flex items-center justify-center"},qa={class:"mt-10 text-center"},za=["disabled"],Ya=["disabled"],Za={key:1},$a={class:"mt-5"},et=["href"],at=["href"],tt={class:"md:mx-20 lg:mx-10 xl:mx-40 border-2 border-gray-200 mt-4 p-5 text-xs font-bold filter shadow-lg"},st={class:"text-blue-primary mb-1"},nt={class:"break-all"},rt={class:"mt-1"},lt={class:"mt-1"},ot={class:"inline-flex items-center mb-5"},it={class:"sm:mt-5 text-center"};function ct(E,a,Ee,e,G,Ge){const ie=T("SelectInputAccountOutgoingSwap"),ce=T("SwapInputClean"),de=T("MetamaskAddressInput"),X=T("PasswordInputClean"),O=T("swap-certificate-component"),y=T("font-awesome-icon"),B=T("router-link");return _(),C("div",null,[t("div",Aa,[t("div",Pa,[a[36]||(a[36]=t("div",{class:"text-md"},"Main Network Swap",-1)),a[37]||(a[37]=t("div",{class:"text-xs my-3 mb-5 sm:mb-10"},[t("img",{src:ha,class:"mr-2 h-5 inline-block"}),u("Swap from ETH to Proximax Sirius Chain")],-1)),t("div",Ia,[t("div",_a,[t("div",Ca,[t("div",{class:g(["flex w-6 h-6 sm:w-10 sm:h-10",`${e.currentPage>=1?"bg-yellow-500":"bg-gray-300"}`])},[t("div",{class:g(["self-center inline-block text-center w-full text-txs sm:text-sm font-bold",`${e.currentPage>=1?"text-white":"text-gray-400"}`])},"1",2)],2),t("div",Ea,o(E.$t("swap.transaction")),1)])]),a[13]||(a[13]=t("div",{class:"flex-grow self-center md:mx-4 h-0.5 bg-gray-100"},null,-1)),t("div",Ga,[t("div",Na,[t("div",{class:g(["flex w-6 h-6 sm:w-10 sm:h-10",`${e.currentPage>=2?"bg-yellow-500":"bg-gray-300"}`])},[t("div",{class:g(["self-center inline-block text-center w-full text-txs sm:text-sm font-bold",`${e.currentPage>=2?"text-white":"text-gray-400"}`])},"2",2)],2),t("div",Ma,o(E.$t("swap.certificate")),1)])])]),e.currentPage==1?(_(),C("div",Ha,[a[23]||(a[23]=t("div",{class:"text-sm my-5 font-bold"},"Transaction Details",-1)),e.err!=""?(_(),C("div",Da,o(e.err),1)):R("",!0),b(ie,{modelValue:e.siriusAddress,"onUpdate:modelValue":a[0]||(a[0]=i=>e.siriusAddress=i),placeholder:"From Sirius Chain Account",selectDefault:e.walletState.currentLoggedInWallet.selectDefaultAccount().address},null,8,["modelValue","selectDefault"]),t("div",Fa,[e.siriusAddress?R("",!0):(_(),C("div",Ua)),b(ce,{class:"mt-5",disabled:e.disableAmount,modelValue:e.amount,"onUpdate:modelValue":a[1]||(a[1]=i=>e.amount=i),balance:e.selectedAccountBalance,placeholder:e.currentNativeTokenName+" Amount",type:"text",showError:e.showAmountErr,errorMessage:e.selectedAccountBalance>=e.minBalanceAmount?"Insufficient balance":"Balance is insufficient to cover transaction fee.",emptyErrorMessage:"Amount is empty",maxAmount:e.maxSwapAmount,gasFee:e.gasPriceInXPX,transactionFee:e.txFeeDisplay,onClickedMaxAvailable:a[2]||(a[2]=i=>e.updateAmountToMax()),remarkOption:!0,toolTip:"XPX amount to swap to ERC20"},null,8,["disabled","modelValue","balance","placeholder","showError","errorMessage","maxAmount","gasFee","transactionFee"]),b(de,{placeholder:"ETH address receiving your swap",errorMessage:"Valid ETH address is required",class:"mt-5",showError:e.showAddressErr,modelValue:e.ethAddress,"onUpdate:modelValue":a[3]||(a[3]=i=>e.ethAddress=i)},null,8,["showError","modelValue"]),a[20]||(a[20]=t("div",{class:"tex-center font-bold text-sm my-5"},"Transaction Fee (ETH Network):",-1)),t("div",La,[t("div",Va,[t("div",{class:g(["ethGasStrategy md:mr-6",`${e.ethGasStrategy=="standard"?"selected":"option"}`]),onClick:a[4]||(a[4]=i=>e.changeGasStrategy("standard"))},[a[14]||(a[14]=t("p",{class:"font-bold text-tsm mb-2"},"Standard",-1)),t("div",Ra,"ETH "+o(e.standardGasPrice),1),t("div",null,[u(o(e.currentNativeTokenName)+" ",1),t("b",null,o(e.xpxAmountInStandardGasPrice),1),u(" = USD "+o(e.standardGasPriceInUSD),1)])],2)]),t("div",Xa,[t("div",{class:g(["ethGasStrategy md:mx-3",`${e.ethGasStrategy=="fast"?"selected":"option"}`]),onClick:a[5]||(a[5]=i=>e.changeGasStrategy("fast"))},[a[15]||(a[15]=t("p",{class:"font-bold text-tsm mb-2"},"Fast",-1)),t("div",Oa,"ETH "+o(e.fastGasPrice),1),t("div",null,[u(o(e.currentNativeTokenName)+" ",1),t("b",null,o(e.xpxAmountInFastGasPrice),1),u(" = USD "+o(e.fastGasPriceInUSD),1)])],2)]),t("div",Ba,[t("div",{class:g(["ethGasStrategy md:ml-6",`${e.ethGasStrategy=="rapid"?"selected":"option"}`]),onClick:a[6]||(a[6]=i=>e.changeGasStrategy("rapid"))},[a[16]||(a[16]=t("p",{class:"font-bold text-tsm mb-2"},"Rapid",-1)),t("div",Wa,"ETH "+o(e.rapidGasPrice),1),t("div",null,[u(o(e.currentNativeTokenName)+" ",1),t("b",null,o(e.xpxAmountInRapidGasPrice),1),u(" = USD "+o(e.rapidGasPriceInUSD),1)])],2)])]),t("div",ja,"Fees are valid for: "+o(e.timerMinutes)+":"+o(e.timerSecondsDisplay>=10?e.timerSecondsDisplay:"0"+e.timerSecondsDisplay),1),a[21]||(a[21]=t("div",{class:"tex-center font-bold text-sm mb-5"},"Transaction Fee (Sirius Network):",-1)),t("div",Ka,[t("div",Qa,[a[17]||(a[17]=t("img",{src:Ce,class:"w-3 inline mr-2 text-gray-500 relative",style:{top:"-2px"}},null,-1)),a[18]||(a[18]=u("Transaction Fee: ")),t("span",null,o(e.txFeeDisplay),1),u(" "+o(e.currentNativeTokenName),1)])]),b(X,{placeholder:"Insert wallet password",errorMessage:"Wallet password required",showError:e.showPasswdError,modelValue:e.walletPasswd,"onUpdate:modelValue":a[7]||(a[7]=i=>e.walletPasswd=i)},null,8,["showError","modelValue"]),t("div",Ja,[u(o(e.amount)+" "+o(e.currentNativeTokenName)+" ",1),a[19]||(a[19]=t("img",{src:Ce,class:"w-5 h-5 ml-4"},null,-1))]),a[22]||(a[22]=t("div",{class:"flex justify-center mt-3"},[t("div",{class:"text-xs text-gray-600 mt-2 max-w-screen-md"},"Swap completion time will vary depending on the performance of the ETH network. The more ETH transaction fees you pay, the faster your swap will occur. Displayed ETH fees are valid for only three minutes due to the ETH network's fluctuating rates.")],-1)),t("div",qa,[t("button",{onClick:a[8]||(a[8]=i=>E.$router.push({name:"ViewServicesMainnetSwap"})),class:"text-black font-bold text-xs mr-1 sm:mr-5 mt-2 focus:outline-none disabled:opacity-50",disabled:e.isDisabledCancel},"Maybe Later",8,za),t("button",{type:"button",class:"default-btn focus:outline-none disabled:opacity-50 mt-2",disabled:e.isDisabledSwap,onClick:a[9]||(a[9]=(...i)=>e.swap&&e.swap(...i))},o(e.swapInProgress?"Swap in progress. Please wait...":"Yes, Swap"),9,Ya),e.canCheckStatus?(_(),C("button",{key:0,class:"default-btn focus:outline-none disabled:opacity-50 mt-2",onClick:a[10]||(a[10]=(...i)=>e.callTocheckSwapStatus&&e.callTocheckSwapStatus(...i))},"Check Swap Status")):R("",!0)])])])):R("",!0),e.currentPage==2?(_(),C("div",Za,[t("div",null,[a[32]||(a[32]=t("h1",{class:"default-title font-bold mt-5 mb-2"},"Congratulations!",-1)),a[33]||(a[33]=t("div",{class:"text-sm mb-7"},"The swap process has already started!",-1)),b(O,{networkTerm:"ETH",swapType:"Out",swapId:e.swapId,swapTimestamp:e.swapTimestamp,transactionHash:e.certTransactionHash,swapQr:e.swapQr,swapLink:e.swapLink,siriusName:e.selectedAccountName,swappedAmount:e.amount,siriusAddress:e.Helper.createAddress(e.selectedAccountAddress).pretty(),siriusTransactionHash:e.siriusTransactionHash,xpxExplorer:e.xpxExplorerUrl},null,8,["swapId","swapTimestamp","transactionHash","swapQr","swapLink","siriusName","swappedAmount","siriusAddress","siriusTransactionHash","xpxExplorer"]),t("button",{type:"button",class:"w-40 hover:shadow-lg bg-blue-primary text-white text-xs hover:opacity-50 rounded font-bold px-4 py-3 border border-blue-primary outline-none mr-4 mt-6",onClick:a[11]||(a[11]=(...i)=>e.saveCertificate&&e.saveCertificate(...i))},"Download Certificate"),t("div",$a,[t("a",{href:e.swapLink,target:"_new",class:"underline self-center text-xs font-bold text-blue-primary"},[a[24]||(a[24]=u("View Transaction in Ether Scan")),b(y,{icon:"external-link-alt",class:"ml-2 text-blue-500 w-3 h-3 self-center inline-block"})],8,et),a[26]||(a[26]=t("br",null,null,-1)),t("a",{href:e.xpxExplorerUrl,target:"_new",class:"underline self-center text-xs font-bold text-blue-primary"},[a[25]||(a[25]=u("View Transaction in Explorer")),b(y,{icon:"external-link-alt",class:"ml-2 text-blue-500 w-3 h-3 self-center inline-block"})],8,at)]),a[34]||(a[34]=t("div",{class:"md:mx-20 lg:mx-40 font-bold text-center text-tsm py-5 sm:py-10 mt-5 sm:mt-10 border-t border-gray-200"},"Swap Details",-1)),t("div",tt,[t("div",st,"From: "+o(e.selectedAccountName),1),t("div",nt,o(e.Helper.createAddress(e.selectedAccountAddress).pretty()),1),t("div",rt,[u("Swap Amount "+o(e.amount)+" "+o(e.currentNativeTokenName)+" ",1),a[27]||(a[27]=t("img",{src:Ce,class:"w-3 h-3 ml-2 inline relative",style:{top:"-2px"}},null,-1))]),a[28]||(a[28]=t("div",null,[t("img",{src:ya,class:"inline-block h-8 my-2"})],-1)),a[29]||(a[29]=t("div",{class:"text-blue-primary mb-1"},"To: MetaMask Account",-1)),t("div",null,o(e.ethAddress),1),t("div",lt,"Equivalent to "+o(e.amount)+" ERC20 XPX",1)]),a[35]||(a[35]=t("div",{class:"my-5 sm:my-7 text-gray-500 text-xs md:mx-20 lg:mx-10 xl:mx-40"},"Please download the certificate. It is needed in the event of an error. You can search the status of your ETH transaction using the above ETH Transaction Hash.",-1)),t("label",ot,[ua(t("input",{type:"checkbox",class:"h-5 w-5 bg-blue-primary",value:"true","onUpdate:modelValue":a[12]||(a[12]=i=>e.savedCheck=i)},null,512),[[ma,e.savedCheck]]),a[30]||(a[30]=t("span",{class:"ml-2 cursor-pointer text-xs font-bold"},"I confirm that I have downloaded a copy of my certificate.",-1))]),t("div",it,[b(B,{to:{name:"ViewServicesMainnetSwap"},class:g(["default-btn mr-5 focus:outline-none w-40 inline-block mt-1",e.savedCheck?"":"opacity-50"]),is:e.savedCheck?"router-link":"span",tag:"button"},{default:va(()=>a[31]||(a[31]=[u("Done")])),_:1},8,["class","is"])])])])):R("",!0)])])])}const _t=oa(ka,[["render",ct],["__scopeId","data-v-9c011a52"]]);export{_t as default};
