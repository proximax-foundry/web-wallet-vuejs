import{_ as ia,c as u,E as Ie,D as ca,q as da,r as s,a as Ce,w as T,H as n,bc as ua,n as ie,k,o as E,b as G,e as a,l as g,t as l,f as X,s as _,B as m,Q as ma,X as va,z as pa,W as fa,p as wa,j as ha}from"./index-4955abbe.js";import{_ as ba,S as xa,M as ga,a as _a}from"./SelectInputAccountOutgoingSwap-9d56fd2e.js";import{S as ya,_ as Sa}from"./icon-dots-f616ff80.js";import{a as Ta}from"./functions-8cea86e2.js";import{S as v}from"./swapUtils-94fbfa00.js";import{_ as ka}from"./eth-aa063e38.js";import{_ as Ee}from"./icon-xpx-072deeab.js";import{g as Aa}from"./index-e39ae659.js";import"./icon-info-8b4f1351.js";import"./jdenticon-module-48612ad9.js";import"./jspdf.es.min-a66d4a8b.js";import"./qrcode-a2383e73.js";const Pa={name:"ViewServicesMainnetSwapSiriusToETH",components:{PasswordInputClean:ba,SwapInputClean:xa,MetamaskAddressInput:ga,SwapCertificateComponent:ya,SelectInputAccountOutgoingSwap:_a},setup(){const p=u(()=>Ie.nativeToken.label),o=ca(),Ge=da(),e=s(!0),N=s(180),Ne=u(()=>N.value%60),ce=u(()=>Math.floor(N.value/60)),de=setInterval(()=>{--N.value},1e3),ue=Ce(()=>N.value,t=>{t<=0&&(B(),O())}),B=()=>{ue(),e.value=!1,clearInterval(de)},O=()=>{Ge.push({name:"ViewServicesMainnetSwap"})},y=s(1),W=s(!1),i=s(""),M=s(""),me=s(""),j=s(0),Me=u(()=>{if(!T.currentLoggedInWallet)return[];let t=T.currentLoggedInWallet.accounts.map(r=>({name:r.name,balance:r.balance,balanceDisplay:n.toCurrencyFormat(r.balance,6),type:"",address:n.createAddress(r.address).pretty(),publicKey:r.publicKey,isMultisig:!!r.getDirectParentMultisig().length}));if(W.value){let r=T.currentLoggedInWallet.others.filter(d=>d.type==="MULTISIG").map(d=>({name:d.name,balance:d.balance,balanceDisplay:n.toCurrencyFormat(d.balance,6),type:"MULTISIG",address:n.createAddress(d.address).pretty(),publicKey:d.publicKey,isMultisig:!0}));return t.concat(r)}else return t}),H=u(()=>Me.value.find(t=>t.name===i.value)),He=s("");Ce(He,t=>{if(t){let r=T.currentLoggedInWallet.accounts.find(d=>d.address==t);r||(r=T.currentLoggedInWallet.others.find(d=>d.address==t)),i.value=r.name,M.value=r.address,j.value=r.balance,me.value=r.publicKey,P.value=n.convertNumberMinimumFormat(r.balance-S.value-h.value,6)}else i.value="",M.value="",j.value="",me.value=""});const ve=1e9,pe=1.2,Q=s(!1),f=s(!1),b=s(!1),Ye=s(!1),K=s(""),De="^[^ ]{8,}$",D=s(!1),F=s(!1),fe=s(""),q=s(""),Ze=u(()=>!(w.value>0&&K.value.match(De)&&q.value!=""&&!b.value)),w=s(0),we=Ie.nativeToken.fullNamespace,Fe=n.createAsset(n.createNamespaceId(we).toHex(),1),Ue=Ie.buildTxn,J=Ue.transferBuilder(),Le=Ue.aggregateCompleteBuilder();let he={type:"Swap-xpx-eth",remoteAddress:"0".repeat(42)};const $e=()=>{he.remoteAddress=q.value,Ve()};let z={type:"Swap-xpx-eth-fees",gasPrice:20,gasLimit:57500},A=new ua(ie.chainNetworkName);A.init();let be=A.swap_XPX_ETH_URL,xe=A.ETHScanUrl,ea=ie.currentNetworkProfile.chainExplorer.url+"/"+ie.currentNetworkProfile.chainExplorer.hashRoute+"/",ge,_e;(async()=>{try{const t=v.getServiceInfoURL(be),r=await v.getOutgoingSwapServiceInfo(t);ge=r.siriusInfo.sinkingFundAddress,_e=r.siriusInfo.sinkingFeeAddress,aa()}catch{I("Service unavailable","Unable to get sink address"),O()}})();let U,Y,Z;const aa=()=>{Y=J.mosaics([Fe]).recipient(n.createAddress(ge)).message(n.createPlainMessage(JSON.stringify(he))).build(),Z=J.mosaics([Fe]).recipient(n.createAddress(_e)).message(n.createPlainMessage(JSON.stringify(z))).build(),U=Le.innerTransactions(n.createInnerTransaction([Y,Z],"0".repeat(64))).build(),S.value=n.convertToExact(U.maxFee.compact(),6)};let S=s(0);const ta=u(()=>n.toCurrencyFormat(S.value,6)),Ve=()=>{let t;w.value<0?t=0:t=w.value;const r=n.createAsset(n.createNamespaceId(we).toHex(),n.convertToAbsolute(t,6)),d=n.createAsset(n.createNamespaceId(we).toHex(),n.convertToAbsolute(h.value,6));Y=J.mosaics([r]).recipient(n.createAddress(ge)).message(n.createPlainMessage(JSON.stringify(he))).build(),Z=J.mosaics([d]).recipient(n.createAddress(_e)).message(n.createPlainMessage(JSON.stringify(z))).build(),U=Le.innerTransactions(n.createInnerTransaction([Y,Z],me.value)).build(),S.value=n.convertToExact(U.maxFee.compact(),6)},Re=u(()=>ye.value*ee.value/ve),Xe=u(()=>Se.value*Te.value/ve),Be=u(()=>$.value*ke.value/ve),Oe=u(()=>n.convertNumberMinimumFormat(Re.value*te.value,2)),We=u(()=>n.convertNumberMinimumFormat(Xe.value*te.value,2)),je=u(()=>n.convertNumberMinimumFormat(Be.value*te.value,2)),Qe=u(()=>n.convertNumberMinimumFormat(Oe.value/ae.value*pe,6)),Ke=u(()=>n.convertNumberMinimumFormat(We.value/ae.value*pe,6)),qe=u(()=>n.convertNumberMinimumFormat(je.value/ae.value*pe,6)),ye=s(0),Se=s(0),$=s(0),ee=s(55e3),Te=s(55e3),ke=s(55e3);(async()=>{let t=await v.getETH_SafeGwei(A.gasPriceConsultURL);if(t.status===0)console.log("Error, no data found. Please try again later");else{let r=t.result;ye.value=r.ProposeGasPrice,$.value=r.FastGasPrice,Se.value=Math.ceil($.value*1.1)}})(),(async()=>{const t=await v.getETH_GasLimit(A.gasPriceConsultURL);t.status===0?console.log("Error, no data found. Please try again later"):(ee.value=t.standardGasLimit,ke.value=t.fastGasLimit,Te.value=t.rapidGasLimit)})();const ae=s(0),te=s(0);(async()=>{let t=await Ta(v.checkSwapPrice(A.priceConsultURL));ae.value=t.xpx,te.value=t.eth})();const sa=()=>{w.value=P.value},na=s(!1),Ae=s("");let L=s(0),V=s(0),h=s(0);const P=s(0),R=s(0),Je=t=>{Ae.value=t,t==="rapid"?(L.value=Te.value,V.value=Se.value,h.value=Ke.value):t==="fast"?(L.value=ke.value,V.value=$.value,h.value=qe.value):(L.value=ee.value,V.value=ye.value,h.value=Qe.value),z.gasPrice=V.value,z.gasLimit=L.value,P.value=n.convertNumberMinimumFormat(j.value-S.value-h.value,6),R.value=n.convertNumberMinimumFormat(S.value+h.value,6),w.value>P.value&&(w.value=P.value),H.value.balance<=R.value&&(w.value=0),H.value.balance<=R.value?(F.value=!0,D.value=!0):(F.value=!1,D.value=!1),Ve()};Ce(ee,()=>{y.value==2&&(H.value.balance<=R.value?(F.value=!0,D.value=!0):(F.value=!1,D.value=!1))});const se=s(""),ra=()=>{b.value=!0,f.value=!0;try{Aa(q.value)&&(Q.value=!1)}catch{Q.value=!0,b.value=!1,f.value=!1}if(!Q.value)if(fa.verifyWalletPassword(T.currentLoggedInWallet.name,ie.chainNetworkName,K.value)){if(fe.value="",$e(),Je(Ae.value),w.value+h.value+S.value>H.value.balance){I("Insufficient amount","Insufficient amount to perform swap",5e3);return}B();let t=v.signTransaction(M.value,K.value,U);se.value=t.hash,oa(t.payload)}else fe.value="Wallet password is incorrect",b.value=!1,f.value=!1},oa=async t=>{let d=JSON.stringify({txnInfo:{network:"eth",siriusTxnPayload:t}});try{const x=await fetch(v.getOutgoing_SwapTransfer_URL(be),{method:"POST",headers:{"Content-Type":"application/json"},body:d});if(x.ok){const C=await x.json();oe.value=C.data.txHash,ze.value=xe+C.data.txHash,ne.value="",re.value=C.data.swapId,le.value=v.generateQRCode(xe+C.data.txHash),y.value=2}else if(x.status==400){const C=await x.json();I("Swap operation failed",C.data.message),b.value=!1,f.value=!1}else x.status==409?(Pe.value=!0,f.value=!1):x.status==503?(o.add({severity:"warn",summary:"Service is unavailable",detail:"Please try again later",group:"br-custom"}),b.value=!1,f.value=!1):x.status==504&&(I("Swap request timed-out","Please check the status again"),f.value=!1,Pe.value=!0)}catch{I("Network error","Swap Server not found"),b.value=!1,f.value=!1}},la=async()=>{const t=await fetch(v.getOutgoing_SwapCheckByTxID_URL(be,se.value));if(t.status==200){const r=await t.json();oe.value=r.fulfillTransaction,ne.value="",re.value=r.data._id,le.value=v.generateQRCode(xe+r.fulfillTransaction),y.value=2}else I("Swap not found","Swap not found for the current transaction ID")},I=(t,r,d=void 0)=>{o.add({severity:"error",summary:t,detail:r,group:"br-custom",life:d})},ze=s(""),ne=s(""),re=s(""),oe=s(""),le=s(""),Pe=s(!1);return{selectedAccountBalance:j,minBalanceAmount:R,includeMultisig:W,timerSecondsDisplay:Ne,timerMinutes:ce,currentPage:y,ethAddress:q,showAddressErr:Q,showPasswdError:Ye,walletPasswd:K,passwdPattern:De,showAmountErr:D,amount:w,disableAmount:F,updateAmountToMax:sa,ethGasStrategy:Ae,isDisabledSwap:Ze,err:fe,swap:ra,savedCheck:na,allAvailableAccounts:Me,selectedAccount:H,selectedAccountName:i,selectedGasPriceInGwei:V,selectedGasLimit:L,standardGasPrice:Re,rapidGasPrice:Xe,fastGasPrice:Be,standardGasPriceInUSD:Oe,rapidGasPriceInUSD:We,fastGasPriceInUSD:je,xpxAmountInStandardGasPrice:Qe,xpxAmountInRapidGasPrice:Ke,xpxAmountInFastGasPrice:qe,txFeeDisplay:ta,gasPriceInXPX:h,maxSwapAmount:P,changeGasStrategy:Je,swapInProgress:b,certTransactionHash:oe,swapLink:ze,swapTimestamp:ne,swapId:re,swapQr:le,saveCertificate:()=>{v.generateoutgoingPdfCert("ETH",ne.value,M.value,re.value,oe.value,le.value,se.value)},selectedAccountAddress:M,isDisabledCancel:f,canCheckStatus:Pe,callTocheckSwapStatus:la,siriusTransactionHash:se,xpxExplorerUrl:ea,currentNativeTokenName:p,siriusAddress:He,walletState:T,Helper:n}}},c=p=>(wa("data-v-53edbae3"),p=p(),ha(),p),Ia={class:"lg:w-9/12 ml-2 mr-2 lg:ml-auto lg:mr-auto mt-5"},Ca={class:"mt-6 p-6 border filter shadow-lg text-center"},Ea=c(()=>a("div",{class:"text-md"},"Main Network Swap",-1)),Ga=c(()=>a("div",{class:"text-xs my-3 mb-5 sm:mb-10"},[a("img",{src:ka,class:"mr-2 h-5 inline-block"}),m("Swap from ETH to Proximax Sirius Chain")],-1)),Na={class:"flex my-10"},Ma={class:"flex-none"},Ha={class:"flex border border-gray-300 rounded-md filter shadow-md"},Da={class:"px-4 sm:px-10 self-center text-xxs sm:text-xs hidden md:inline-block lg:hidden xl:inline-block"},Fa=c(()=>a("div",{class:"flex-grow self-center md:mx-4 h-0.5 bg-gray-100"},null,-1)),Ua={class:"flex-none"},La={class:"flex border border-gray-300 rounded-md filter shadow-md"},Va={class:"px-4 sm:px-10 self-center text-xxs sm:text-xs hidden md:inline-block lg:hidden xl:inline-block"},Ra={key:0},Xa=c(()=>a("div",{class:"text-sm my-5 font-bold"},"Transaction Details",-1)),Ba={key:0,class:"error error_box mb-5"},Oa={class:"relative"},Wa={key:0,class:"opacity-90 w-full h-full absolute z-10 bg-white"},ja=c(()=>a("div",{class:"tex-center font-bold text-sm my-5"},"Transaction Fee (ETH Network):",-1)),Qa={class:"md:grid md:grid-cols-3 mb-4"},Ka={class:"md:col-span-1 mb-3"},qa=c(()=>a("p",{class:"font-bold text-tsm mb-2"},"Standard",-1)),Ja={class:"mb-1"},za={class:"md:col-span-1 mb-3"},Ya=c(()=>a("p",{class:"font-bold text-tsm mb-2"},"Fast",-1)),Za={class:"mb-1"},$a={class:"md:col-span-1 mb-3"},et=c(()=>a("p",{class:"font-bold text-tsm mb-2"},"Rapid",-1)),at={class:"mb-1"},tt={class:"text-tsm text-center mb-2 sm:mb-10"},st=c(()=>a("div",{class:"tex-center font-bold text-sm mb-5"},"Transaction Fee (Sirius Network):",-1)),nt={class:"rounded bg-gray-100 p-5 mb-5"},rt={class:"inline-block mr-4 text-xs"},ot=c(()=>a("img",{src:Ee,class:"w-3 inline mr-2 text-gray-500 relative",style:{top:"-2px"}},null,-1)),lt={class:"bg-blue-50 border border-blue-primary h-20 mt-5 rounded flex items-center justify-center"},it=c(()=>a("img",{src:Ee,class:"w-5 h-5 ml-4"},null,-1)),ct=c(()=>a("div",{class:"flex justify-center mt-3"},[a("div",{class:"text-xs text-gray-600 mt-2 max-w-screen-md"},"Swap completion time will vary depending on the performance of the ETH network. The more ETH transaction fees you pay, the faster your swap will occur. Displayed ETH fees are valid for only three minutes due to the ETH network's fluctuating rates.")],-1)),dt={class:"mt-10 text-center"},ut=["disabled"],mt=["disabled"],vt={key:1},pt=c(()=>a("h1",{class:"default-title font-bold mt-5 mb-2"},"Congratulations!",-1)),ft=c(()=>a("div",{class:"text-sm mb-7"},"The swap process has already started!",-1)),wt={class:"mt-5"},ht=["href"],bt=c(()=>a("br",null,null,-1)),xt=["href"],gt=c(()=>a("div",{class:"md:mx-20 lg:mx-40 font-bold text-center text-tsm py-5 sm:py-10 mt-5 sm:mt-10 border-t border-gray-200"},"Swap Details",-1)),_t={class:"md:mx-20 lg:mx-10 xl:mx-40 border-2 border-gray-200 mt-4 p-5 text-xs font-bold filter shadow-lg"},yt={class:"text-blue-primary mb-1"},St={class:"break-all"},Tt={class:"mt-1"},kt=c(()=>a("img",{src:Ee,class:"w-3 h-3 ml-2 inline relative",style:{top:"-2px"}},null,-1)),At=c(()=>a("div",null,[a("img",{src:Sa,class:"inline-block h-8 my-2"})],-1)),Pt=c(()=>a("div",{class:"text-blue-primary mb-1"},"To: MetaMask Account",-1)),It={class:"mt-1"},Ct=c(()=>a("div",{class:"my-5 sm:my-7 text-gray-500 text-xs md:mx-20 lg:mx-10 xl:mx-40"},"Please download the certificate. It is needed in the event of an error. You can search the status of your ETH transaction using the above ETH Transaction Hash.",-1)),Et={class:"inline-flex items-center mb-5"},Gt=c(()=>a("span",{class:"ml-2 cursor-pointer text-xs font-bold"},"I confirm that I have downloaded a copy of my certificate.",-1)),Nt={class:"sm:mt-5 text-center"};function Mt(p,o,Ge,e,N,Ne){const ce=k("SelectInputAccountOutgoingSwap"),de=k("SwapInputClean"),ue=k("MetamaskAddressInput"),B=k("PasswordInputClean"),O=k("swap-certificate-component"),y=k("font-awesome-icon"),W=k("router-link");return E(),G("div",null,[a("div",Ia,[a("div",Ca,[Ea,Ga,a("div",Na,[a("div",Ma,[a("div",Ha,[a("div",{class:g(["flex w-6 h-6 sm:w-10 sm:h-10",`${e.currentPage>=1?"bg-yellow-500":"bg-gray-300"}`])},[a("div",{class:g(["self-center inline-block text-center w-full text-txs sm:text-sm font-bold",`${e.currentPage>=1?"text-white":"text-gray-400"}`])},"1",2)],2),a("div",Da,l(p.$t("swap.transaction")),1)])]),Fa,a("div",Ua,[a("div",La,[a("div",{class:g(["flex w-6 h-6 sm:w-10 sm:h-10",`${e.currentPage>=2?"bg-yellow-500":"bg-gray-300"}`])},[a("div",{class:g(["self-center inline-block text-center w-full text-txs sm:text-sm font-bold",`${e.currentPage>=2?"text-white":"text-gray-400"}`])},"2",2)],2),a("div",Va,l(p.$t("swap.certificate")),1)])])]),e.currentPage==1?(E(),G("div",Ra,[Xa,e.err!=""?(E(),G("div",Ba,l(e.err),1)):X("",!0),_(ce,{modelValue:e.siriusAddress,"onUpdate:modelValue":o[0]||(o[0]=i=>e.siriusAddress=i),placeholder:"From Sirius Chain Account",selectDefault:e.walletState.currentLoggedInWallet.selectDefaultAccount().address},null,8,["modelValue","selectDefault"]),a("div",Oa,[e.siriusAddress?X("",!0):(E(),G("div",Wa)),_(de,{class:"mt-5",disabled:e.disableAmount,modelValue:e.amount,"onUpdate:modelValue":o[1]||(o[1]=i=>e.amount=i),balance:e.selectedAccountBalance,placeholder:e.currentNativeTokenName+" Amount",type:"text",showError:e.showAmountErr,errorMessage:e.selectedAccountBalance>=e.minBalanceAmount?"Insufficient balance":"Balance is insufficient to cover transaction fee.",emptyErrorMessage:"Amount is empty",maxAmount:e.maxSwapAmount,gasFee:e.gasPriceInXPX,transactionFee:e.txFeeDisplay,onClickedMaxAvailable:o[2]||(o[2]=i=>e.updateAmountToMax()),remarkOption:!0,toolTip:"XPX amount to swap to ERC20"},null,8,["disabled","modelValue","balance","placeholder","showError","errorMessage","maxAmount","gasFee","transactionFee"]),_(ue,{placeholder:"ETH address receiving your swap",errorMessage:"Valid ETH address is required",class:"mt-5",showError:e.showAddressErr,modelValue:e.ethAddress,"onUpdate:modelValue":o[3]||(o[3]=i=>e.ethAddress=i)},null,8,["showError","modelValue"]),ja,a("div",Qa,[a("div",Ka,[a("div",{class:g(["ethGasStrategy md:mr-6",`${e.ethGasStrategy=="standard"?"selected":"option"}`]),onClick:o[4]||(o[4]=i=>e.changeGasStrategy("standard"))},[qa,a("div",Ja,"ETH "+l(e.standardGasPrice),1),a("div",null,[m(l(e.currentNativeTokenName)+" ",1),a("b",null,l(e.xpxAmountInStandardGasPrice),1),m(" = USD "+l(e.standardGasPriceInUSD),1)])],2)]),a("div",za,[a("div",{class:g(["ethGasStrategy md:mx-3",`${e.ethGasStrategy=="fast"?"selected":"option"}`]),onClick:o[5]||(o[5]=i=>e.changeGasStrategy("fast"))},[Ya,a("div",Za,"ETH "+l(e.fastGasPrice),1),a("div",null,[m(l(e.currentNativeTokenName)+" ",1),a("b",null,l(e.xpxAmountInFastGasPrice),1),m(" = USD "+l(e.fastGasPriceInUSD),1)])],2)]),a("div",$a,[a("div",{class:g(["ethGasStrategy md:ml-6",`${e.ethGasStrategy=="rapid"?"selected":"option"}`]),onClick:o[6]||(o[6]=i=>e.changeGasStrategy("rapid"))},[et,a("div",at,"ETH "+l(e.rapidGasPrice),1),a("div",null,[m(l(e.currentNativeTokenName)+" ",1),a("b",null,l(e.xpxAmountInRapidGasPrice),1),m(" = USD "+l(e.rapidGasPriceInUSD),1)])],2)])]),a("div",tt,"Fees are valid for: "+l(e.timerMinutes)+":"+l(e.timerSecondsDisplay>=10?e.timerSecondsDisplay:"0"+e.timerSecondsDisplay),1),st,a("div",nt,[a("div",rt,[ot,m("Transaction Fee: "),a("span",null,l(e.txFeeDisplay),1),m(" "+l(e.currentNativeTokenName),1)])]),_(B,{placeholder:"Insert wallet password",errorMessage:"Wallet password required",showError:e.showPasswdError,modelValue:e.walletPasswd,"onUpdate:modelValue":o[7]||(o[7]=i=>e.walletPasswd=i)},null,8,["showError","modelValue"]),a("div",lt,[m(l(e.amount)+" "+l(e.currentNativeTokenName)+" ",1),it]),ct,a("div",dt,[a("button",{onClick:o[8]||(o[8]=i=>p.$router.push({name:"ViewServicesMainnetSwap"})),class:"text-black font-bold text-xs mr-1 sm:mr-5 mt-2 focus:outline-none disabled:opacity-50",disabled:e.isDisabledCancel},"Maybe Later",8,ut),a("button",{type:"button",class:"default-btn focus:outline-none disabled:opacity-50 mt-2",disabled:e.isDisabledSwap,onClick:o[9]||(o[9]=(...i)=>e.swap&&e.swap(...i))},l(e.swapInProgress?"Swap in progress. Please wait...":"Yes, Swap"),9,mt),e.canCheckStatus?(E(),G("button",{key:0,class:"default-btn focus:outline-none disabled:opacity-50 mt-2",onClick:o[10]||(o[10]=(...i)=>e.callTocheckSwapStatus&&e.callTocheckSwapStatus(...i))},"Check Swap Status")):X("",!0)])])])):X("",!0),e.currentPage==2?(E(),G("div",vt,[a("div",null,[pt,ft,_(O,{networkTerm:"ETH",swapType:"Out",swapId:e.swapId,swapTimestamp:e.swapTimestamp,transactionHash:e.certTransactionHash,swapQr:e.swapQr,swapLink:e.swapLink,siriusName:e.selectedAccountName,swappedAmount:e.amount,siriusAddress:e.Helper.createAddress(e.selectedAccountAddress).pretty(),siriusTransactionHash:e.siriusTransactionHash,xpxExplorer:e.xpxExplorerUrl},null,8,["swapId","swapTimestamp","transactionHash","swapQr","swapLink","siriusName","swappedAmount","siriusAddress","siriusTransactionHash","xpxExplorer"]),a("button",{type:"button",class:"w-40 hover:shadow-lg bg-blue-primary text-white text-xs hover:opacity-50 rounded font-bold px-4 py-3 border border-blue-primary outline-none mr-4 mt-6",onClick:o[11]||(o[11]=(...i)=>e.saveCertificate&&e.saveCertificate(...i))},"Download Certificate"),a("div",wt,[a("a",{href:e.swapLink,target:"_new",class:"underline self-center text-xs font-bold text-blue-primary"},[m("View Transaction in Ether Scan"),_(y,{icon:"external-link-alt",class:"ml-2 text-blue-500 w-3 h-3 self-center inline-block"})],8,ht),bt,a("a",{href:e.xpxExplorerUrl,target:"_new",class:"underline self-center text-xs font-bold text-blue-primary"},[m("View Transaction in Explorer"),_(y,{icon:"external-link-alt",class:"ml-2 text-blue-500 w-3 h-3 self-center inline-block"})],8,xt)]),gt,a("div",_t,[a("div",yt,"From: "+l(e.selectedAccountName),1),a("div",St,l(e.Helper.createAddress(e.selectedAccountAddress).pretty()),1),a("div",Tt,[m("Swap Amount "+l(e.amount)+" "+l(e.currentNativeTokenName)+" ",1),kt]),At,Pt,a("div",null,l(e.ethAddress),1),a("div",It,"Equivalent to "+l(e.amount)+" ERC20 XPX",1)]),Ct,a("label",Et,[ma(a("input",{type:"checkbox",class:"h-5 w-5 bg-blue-primary",value:"true","onUpdate:modelValue":o[12]||(o[12]=i=>e.savedCheck=i)},null,512),[[va,e.savedCheck]]),Gt]),a("div",Nt,[_(W,{to:{name:"ViewServicesMainnetSwap"},class:g(["default-btn mr-5 focus:outline-none w-40 inline-block mt-1",e.savedCheck?"":"opacity-50"]),is:e.savedCheck?"router-link":"span",tag:"button"},{default:pa(()=>[m("Done")]),_:1},8,["class","is"])])])])):X("",!0)])])])}const Yt=ia(Pa,[["render",Mt],["__scopeId","data-v-53edbae3"]]);export{Yt as default};
