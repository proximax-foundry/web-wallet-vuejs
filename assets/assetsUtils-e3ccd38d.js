import{E as T,A as u,af as H,n as x,w as A,H as I,W as v,V as k}from"./index-ac5f7446.js";const r=class r{static addZeros(c,a=0){let t;if(c>0){let n;if(a===0)n=this.addDecimals(c),t=`0${n}`;else{const i=a.toString().replace(/,/g,"").split(".");if(i.length<2)n=this.addDecimals(c);else{const s=i[1].split("");n=this.addDecimals(c-s.length,i[1])}t=`${i[0]}${n}`}}else t=a;return t}static addDecimals(c,a="0"){const t="0";if(a==="0")for(let n=0;n<c-1;n++)a+=t;else for(let n=0;n<c;n++)a+=t;return a}};r.createAssetTransaction=(c,a,t,n,i,s)=>{const e=T.buildTxn.mosaicDefinition(c,t,n,i,s?u.UInt64.fromUint(r.calculateDuration(s)):void 0),l=e.toAggregateV1(c);let d=u.MosaicSupplyType.Increase;const g=T.buildTxn.buildMosaicSupplyChange(e.mosaicId,d,u.UInt64.fromUint(r.addZeros(i,a))).toAggregateV1(c);return T.buildTxn.aggregateComplete([l,g])},r.assetSupplyChangeTransaction=(c,a,t,n)=>{const i=T.buildTxn;let s=a=="increase"?u.MosaicSupplyType.Increase:u.MosaicSupplyType.Decrease;return i.buildMosaicSupplyChange(new u.MosaicId(c),s,u.UInt64.fromUint(r.addZeros(n,t)))},r.linkAssetToNamespaceTransaction=(c,a,t)=>{const n=T.buildTxn;let i;return i=t=="link"?u.AliasActionType.Link:u.AliasActionType.Unlink,n.assetAlias(i,new u.NamespaceId(a),new u.MosaicId(c))},r.createAssetTransactionFee=(c,a,t,n,i,s)=>r.createAssetTransaction(c,a,t,n,i,s).maxFee.compact(),r.getMosaicSupplyChangeTransactionFee=(c,a,t,n)=>r.assetSupplyChangeTransaction(c,a,t,n).maxFee.compact(),r.getLinkAssetToNamespaceTransactionFee=(c,a,t)=>r.linkAssetToNamespaceTransaction(c,a,t).maxFee.compact(),r.calculateDuration=c=>{let a=new H(x.chainNetworkName);a.init();let t=parseInt(a.blockGenerationTargetTime),n=60*60*24/t;return Math.floor(c*n)},r.getOwnedAssets=c=>{const a=[],t=A.currentLoggedInWallet.accounts.find(e=>e.address===c),n=A.currentLoggedInWallet.others.find(e=>e.address===c),i=t?t.assets.filter(e=>e.creator===t.publicKey):[],s=n?n.assets.filter(e=>e.creator===n.publicKey):[];return i.length>0&&i.forEach(e=>{a.push({label:e.idHex+" > "+I.amountFormatterSimple(e.amount,e.divisibility),value:e.idHex})}),s.length>0&&s.forEach(e=>{a.push({label:e.idHex+" > "+I.amountFormatterSimple(e.amount,e.divisibility),value:e.idHex})}),a},r.getOwnedAssetsPermutable=c=>{const a=[],t=A.currentLoggedInWallet.accounts.find(e=>e.address===c),n=A.currentLoggedInWallet.others.find(e=>e.address===c),i=t?t.assets.filter(e=>e.creator===t.publicKey&&e.supplyMutable===!0):[],s=n?n.assets.filter(e=>e.creator===n.publicKey&&e.supplyMutable===!0):[];return i.length>0&&i.forEach(e=>{a.push({label:e.idHex+" > "+I.amountFormatterSimple(e.amount,e.divisibility),value:e.idHex})}),s.length>0&&s.forEach(e=>{a.push({label:e.idHex+" > "+I.amountFormatterSimple(e.amount,e.divisibility),value:e.idHex})}),a},r.getSenderAccount=(c,a)=>{const t=u.Address.createFromRawAddress(c),n=A.currentLoggedInWallet.accounts.find(l=>l.address==t.plain()),i=v.createPassword(a);let s=v.decryptPrivateKey(i,n.encrypted,n.iv);return u.Account.createFromPrivateKey(s,T.networkType,1)},r.createAsset=(c,a,t,n,i,s,e,l)=>{let d=r.createAssetTransaction(t,n,i,s,e,l),o=r.getSenderAccount(c,a).preV2Sign(d,x.currentNetworkProfile.generationHash);k.announceTransaction(o)},r.createAssetMultiSig=(c,a,t,n,i,s,e,l)=>{const d=T.buildTxn.mosaicDefinition(t,i,s,e,l?u.UInt64.fromUint(r.calculateDuration(l)):void 0),g=d.toAggregateV1(t);let o;o=u.MosaicSupplyType.Increase;const p=T.buildTxn.buildMosaicSupplyChange(d.mosaicId,o,u.UInt64.fromUint(r.addZeros(e,n))).toAggregateV1(t),h=r.getSenderAccount(c,a),m=[g,p],y=T.buildTxn.aggregateBonded(m),f=h.preV2Sign(y,x.currentNetworkProfile.generationHash);let b=k.lockFundTx(f),S=h.preV2Sign(b,x.currentNetworkProfile.generationHash);k.announceLF_AND_addAutoAnnounceABT(S,f)},r.changeAssetSupply=(c,a,t,n,i,s)=>{let e=r.assetSupplyChangeTransaction(t,n,i,s),d=r.getSenderAccount(c,a).preV2Sign(e,x.currentNetworkProfile.generationHash);k.announceTransaction(d)},r.changeAssetSupplyMultiSig=(c,a,t,n,i,s,e)=>{let l=T.buildTxn,d=r.assetSupplyChangeTransaction(t,n,i,s);const g=r.getSenderAccount(c,a),o=A.currentLoggedInWallet.accounts.find(P=>P.address===e),p=A.currentLoggedInWallet.others.find(P=>P.address===e),h=o?o.publicKey:p.publicKey,m=u.PublicAccount.createFromPublicKey(h,T.networkType),y=[d.toAggregateV1(m)],f=l.aggregateBonded(y),b=g.preV2Sign(f,x.currentNetworkProfile.generationHash);let S=k.lockFundTx(b),N=g.preV2Sign(S,x.currentNetworkProfile.generationHash);k.announceLF_AND_addAutoAnnounceABT(N,b)},r.linkedNamespaceToAsset=(c,a,t,n,i)=>{const s=r.linkAssetToNamespaceTransaction(t,n,i);let l=r.getSenderAccount(c,a).preV2Sign(s,x.currentNetworkProfile.generationHash);k.announceTransaction(l)},r.linkedNamespaceToAssetMultiSig=(c,a,t,n,i,s)=>{let e=T.buildTxn;const l=r.linkAssetToNamespaceTransaction(t,n,i),d=r.getSenderAccount(c,a),g=A.currentLoggedInWallet.accounts.find(N=>N.address===s),o=A.currentLoggedInWallet.others.find(N=>N.address===s),p=g?g.publicKey:o.publicKey,h=u.PublicAccount.createFromPublicKey(p,T.networkType),m=[l.toAggregateV1(h)],y=e.aggregateBonded(m),f=d.preV2Sign(y,x.currentNetworkProfile.generationHash);let b=k.lockFundTx(f),S=d.preV2Sign(b,x.currentNetworkProfile.generationHash);k.announceLF_AND_addAutoAnnounceABT(S,f)},r.listActiveNamespacesToLink=(c,a,t)=>{const n=A.currentLoggedInWallet.accounts.find(o=>o.address===a),i=n?n.namespaces.filter(o=>o.active===!0):[],s=A.currentLoggedInWallet.others.find(o=>o.address===a),e=s?s.namespaces.filter(o=>o.active===!0):[];let l,d;i.length>0?(l=i.length,d=i):(l=e.length,d=e);let g=[];return l>0&&(d.forEach(o=>{console.log(o);const p=o.name.split(".");let h,m="",y="";if(o.linkedId!=""){let f,b;switch(o.linkType){case 1:f="Asset",b=o.linkedId,h=t=="link";break;case 2:f="Address",b=I.createAddress(o.linkedId).pretty(),h=!0;break}m=o.name+" (Linked to "+f+") - "+b,y=o.name}else h=t!="link",m=o.name,y=o.name;t=="link"&&g.push({value:y,label:m,disabled:h,level:p}),t=="unlink"&&o.linkedId==c&&g.push({value:y,label:m,disabled:h,level:p})}),g.sort((o,p)=>o.label>p.label?1:o.label<p.label?-1:0),g.sort((o,p)=>o.level>p.level?1:o.level<p.level?-1:0)),g};let w=r;export{w as A};
