import{E as A,B as u,ae as H,n as k,w as m,H as P,W as w,P as S}from"./index-4bc58919.js";const i=class{static addZeros(s,a=0){let t;if(s>0){let n;if(a===0)n=this.addDecimals(s),t=`0${n}`;else{const c=a.toString().replace(/,/g,"").split(".");if(c.length<2)n=this.addDecimals(s);else{const r=c[1].split("");n=this.addDecimals(s-r.length,c[1])}t=`${c[0]}${n}`}}else t=a;return t}static addDecimals(s,a="0"){const t="0";if(a==="0")for(let n=0;n<s-1;n++)a+=t;else for(let n=0;n<s;n++)a+=t;return a}};let g=i;g.createAssetTransaction=(s,a,t,n,c,r)=>{const e=A.buildTxn.mosaicDefinition(s,t,n,c,r?u.UInt64.fromUint(i.calculateDuration(r)):void 0),l=e.toAggregateV1(s);let d=u.MosaicSupplyType.Increase;const p=A.buildTxn.buildMosaicSupplyChange(e.mosaicId,d,u.UInt64.fromUint(i.addZeros(c,a))).toAggregateV1(s);return A.buildTxn.aggregateComplete([l,p])};g.assetSupplyChangeTransaction=(s,a,t,n)=>{const c=A.buildTxn;let r=a=="increase"?u.MosaicSupplyType.Increase:u.MosaicSupplyType.Decrease;return c.buildMosaicSupplyChange(new u.MosaicId(s),r,u.UInt64.fromUint(i.addZeros(n,t)))};g.linkAssetToNamespaceTransaction=(s,a,t)=>{const n=A.buildTxn;let c;return c=t=="link"?u.AliasActionType.Link:u.AliasActionType.Unlink,n.assetAlias(c,new u.NamespaceId(a),new u.MosaicId(s))};g.createAssetTransactionFee=(s,a,t,n,c,r)=>i.createAssetTransaction(s,a,t,n,c,r).maxFee.compact();g.getMosaicSupplyChangeTransactionFee=(s,a,t,n)=>i.assetSupplyChangeTransaction(s,a,t,n).maxFee.compact();g.getLinkAssetToNamespaceTransactionFee=(s,a,t)=>i.linkAssetToNamespaceTransaction(s,a,t).maxFee.compact();g.calculateDuration=s=>{let a=new H(k.chainNetworkName);a.init();let t=parseInt(a.blockGenerationTargetTime),n=60*60*24/t;return Math.floor(s*n)};g.getOwnedAssets=s=>{const a=[],t=m.currentLoggedInWallet.accounts.find(e=>e.address===s),n=m.currentLoggedInWallet.others.find(e=>e.address===s),c=t?t.assets.filter(e=>e.creator===t.publicKey):[],r=n?n.assets.filter(e=>e.creator===n.publicKey):[];return c.length>0&&c.forEach(e=>{a.push({label:e.idHex+" > "+P.amountFormatterSimple(e.amount,e.divisibility),value:e.idHex})}),r.length>0&&r.forEach(e=>{a.push({label:e.idHex+" > "+P.amountFormatterSimple(e.amount,e.divisibility),value:e.idHex})}),a};g.getOwnedAssetsPermutable=s=>{const a=[],t=m.currentLoggedInWallet.accounts.find(e=>e.address===s),n=m.currentLoggedInWallet.others.find(e=>e.address===s),c=t?t.assets.filter(e=>e.creator===t.publicKey&&e.supplyMutable===!0):[],r=n?n.assets.filter(e=>e.creator===n.publicKey&&e.supplyMutable===!0):[];return c.length>0&&c.forEach(e=>{a.push({label:e.idHex+" > "+P.amountFormatterSimple(e.amount,e.divisibility),value:e.idHex})}),r.length>0&&r.forEach(e=>{a.push({label:e.idHex+" > "+P.amountFormatterSimple(e.amount,e.divisibility),value:e.idHex})}),a};g.getSenderAccount=(s,a)=>{const t=u.Address.createFromRawAddress(s),n=m.currentLoggedInWallet.accounts.find(l=>l.address==t.plain()),c=w.createPassword(a);let r=w.decryptPrivateKey(c,n.encrypted,n.iv);return u.Account.createFromPrivateKey(r,A.networkType,1)};g.createAsset=(s,a,t,n,c,r,e,l)=>{let d=i.createAssetTransaction(t,n,c,r,e,l),o=i.getSenderAccount(s,a).preV2Sign(d,k.currentNetworkProfile.generationHash);S.announceTransaction(o)};g.createAssetMultiSig=(s,a,t,n,c,r,e,l)=>{const d=A.buildTxn.mosaicDefinition(t,c,r,e,l?u.UInt64.fromUint(i.calculateDuration(l)):void 0),p=d.toAggregateV1(t);let o;o=u.MosaicSupplyType.Increase;const T=A.buildTxn.buildMosaicSupplyChange(d.mosaicId,o,u.UInt64.fromUint(i.addZeros(e,n))).toAggregateV1(t),h=i.getSenderAccount(s,a),y=[p,T],b=A.buildTxn.aggregateBonded(y),f=h.preV2Sign(b,k.currentNetworkProfile.generationHash);let x=S.lockFundTx(f),N=h.preV2Sign(x,k.currentNetworkProfile.generationHash);S.announceLF_AND_addAutoAnnounceABT(N,f)};g.changeAssetSupply=(s,a,t,n,c,r)=>{let e=i.assetSupplyChangeTransaction(t,n,c,r),d=i.getSenderAccount(s,a).preV2Sign(e,k.currentNetworkProfile.generationHash);S.announceTransaction(d)};g.changeAssetSupplyMultiSig=(s,a,t,n,c,r,e)=>{let l=A.buildTxn,d=i.assetSupplyChangeTransaction(t,n,c,r);const p=i.getSenderAccount(s,a),o=m.currentLoggedInWallet.accounts.find(v=>v.address===e),T=m.currentLoggedInWallet.others.find(v=>v.address===e),h=o?o.publicKey:T.publicKey,y=u.PublicAccount.createFromPublicKey(h,A.networkType),b=[d.toAggregateV1(y)],f=l.aggregateBonded(b),x=p.preV2Sign(f,k.currentNetworkProfile.generationHash);let N=S.lockFundTx(x),I=p.preV2Sign(N,k.currentNetworkProfile.generationHash);S.announceLF_AND_addAutoAnnounceABT(I,x)};g.linkedNamespaceToAsset=(s,a,t,n,c)=>{const r=i.linkAssetToNamespaceTransaction(t,n,c);let l=i.getSenderAccount(s,a).preV2Sign(r,k.currentNetworkProfile.generationHash);S.announceTransaction(l)};g.linkedNamespaceToAssetMultiSig=(s,a,t,n,c,r)=>{let e=A.buildTxn;const l=i.linkAssetToNamespaceTransaction(t,n,c),d=i.getSenderAccount(s,a),p=m.currentLoggedInWallet.accounts.find(I=>I.address===r),o=m.currentLoggedInWallet.others.find(I=>I.address===r),T=p?p.publicKey:o.publicKey,h=u.PublicAccount.createFromPublicKey(T,A.networkType),y=[l.toAggregateV1(h)],b=e.aggregateBonded(y),f=d.preV2Sign(b,k.currentNetworkProfile.generationHash);let x=S.lockFundTx(f),N=d.preV2Sign(x,k.currentNetworkProfile.generationHash);S.announceLF_AND_addAutoAnnounceABT(N,f)};g.listActiveNamespacesToLink=(s,a,t)=>{const n=m.currentLoggedInWallet.accounts.find(o=>o.address===a),c=n?n.namespaces.filter(o=>o.active===!0):[],r=m.currentLoggedInWallet.others.find(o=>o.address===a),e=r?r.namespaces.filter(o=>o.active===!0):[];let l,d;c.length>0?(l=c.length,d=c):(l=e.length,d=e);let p=[];return l>0&&(d.forEach(o=>{console.log(o);const T=o.name.split(".");let h,y="",b="";if(o.linkedId!=""){let f,x;switch(o.linkType){case 1:f="Asset",x=o.linkedId,h=t=="link";break;case 2:f="Address",x=P.createAddress(o.linkedId).pretty(),h=!0;break}y=o.name+" (Linked to "+f+") - "+x,b=o.name}else h=t!="link",y=o.name,b=o.name;t=="link"&&p.push({value:b,label:y,disabled:h,level:T}),t=="unlink"&&o.linkedId==s&&p.push({value:b,label:y,disabled:h,level:T})}),p.sort((o,T)=>o.label>T.label?1:o.label<T.label?-1:0),p.sort((o,T)=>o.level>T.level?1:o.level<T.level?-1:0)),p};export{g as A};
