import{A as f,x as N,aj as w,n as b,w as d,z as v,W as y,B as h,b3 as L}from"./index-aa0744c5.js";const c=class{static async getLinkedMosaic(t,n){return await new L(n).namespaceAPI.getLinkedMosaicId(t)}static async getLinkedAddress(t,n){return await new L(n).namespaceAPI.getLinkedAddress(t)}static getCosignerList(t){const n=d.currentLoggedInWallet.accounts.find(i=>i.address==t),s=d.currentLoggedInWallet.others.find(i=>i.address==t);let o=n?n.getDirectParentMultisig():[],u=s?s.getDirectParentMultisig():[];if(o.length>0||u.length>0){const i=d.currentLoggedInWallet.accounts.filter(e=>{if(o.indexOf(e.publicKey)>=0||u.indexOf(e.publicKey)>=0)return!0});let l=[];return i.length>0&&i.forEach(e=>{l.push({name:e.name,address:e.address,balance:e.balance})}),{list:l}}else return{list:[]}}};c.rootNamespaceTransaction=(r,t)=>f.buildTxn.registerRootNamespace(r,N.UInt64.fromUint(c.calculateDuration(t)));c.subNamespaceTransaction=(r,t)=>f.buildTxn.registersubNamespace(r,t);c.getRootNamespaceTransactionFee=r=>c.rootNamespaceTransaction(r,10).maxFee.compact();c.getSubNamespaceTransactionFee=(r,t)=>c.subNamespaceTransaction(t,r).maxFee.compact();c.calculateDuration=r=>{let t=new w(b.chainNetworkName);t.init();let n=parseInt(t.blockGenerationTargetTime),s=60*60*24/n;return Math.floor(r*s)};c.listNamespaces=r=>{const t=d.currentLoggedInWallet.accounts.find(e=>e.address===r),n=t?t.namespaces.filter(e=>e.active===!0):[],s=d.currentLoggedInWallet.others.find(e=>e.address===r),o=s?s.namespaces.filter(e=>e.active===!0):[],u=n.length,i=o.length;let l=[];return u+i>0&&(u>0&&n.forEach(e=>{const a=e.name.split(".");let g;if(a.length>2?g=!0:g=!1,typeof e.endHeight=="string"){l.push({value:e.name,label:e.name,disabled:g,level:a});return}e.endHeight-f.readBlockHeight>0&&l.push({value:e.name,label:e.name,disabled:g,level:a})}),i>0&&o.forEach(e=>{const a=e.name.split(".");let g;if(a.length>2?g=!0:g=!1,typeof e.endHeight=="string"){l.push({value:e.name,label:e.name,disabled:g,level:a});return}e.endHeight-v.currentBlock>0&&l.push({value:e.name,label:e.name,disabled:g,level:a})}),l.sort((e,a)=>e.label>a.label?1:e.label<a.label?-1:0),l.sort((e,a)=>e.level>a.level?1:e.level<a.level?-1:0)),l};c.listRootNamespaces=r=>{const t=d.currentLoggedInWallet.accounts.find(e=>e.address===r),n=t?t.namespaces.filter(e=>e.active===!0):[],s=d.currentLoggedInWallet.others.find(e=>e.address===r),o=s?s.namespaces.filter(e=>e.active===!0):[],u=n.length,i=o.length;let l=[];return u+i>0&&(u>0&&n.forEach(e=>{const a=e.name.split(".");let g=!1;a.length==1&&l.push({value:e.name,label:e.name,disabled:g,level:a})}),i>0&&o.forEach(e=>{const a=e.name.split(".");let g=!1;a.length==1&&l.push({value:e.name,label:e.name,disabled:g,level:a})}),l.sort((e,a)=>e.label>a.label?1:e.label<a.label?-1:0)),l};c.getSenderAccount=(r,t)=>{const n=N.Address.createFromRawAddress(r),s=d.currentLoggedInWallet.accounts.find(l=>l.address==n.plain()),o=y.createPassword(t);let u=y.decryptPrivateKey(o,s.encrypted,s.iv);return N.Account.createFromPrivateKey(u,f.networkType,1)};c.createRootNamespace=(r,t,n,s)=>{let o=c.rootNamespaceTransaction(n,s),i=c.getSenderAccount(r,t).preV2Sign(o,b.currentNetworkProfile.generationHash);return h.announceTransaction(i),i.hash};c.createSubNamespace=(r,t,n,s)=>{let o=c.subNamespaceTransaction(s,n),i=c.getSenderAccount(r,t).preV2Sign(o,b.currentNetworkProfile.generationHash);h.announceTransaction(i)};c.createRootNamespaceMultisig=(r,t,n,s,o,u)=>{let i=f.buildTxn,l=c.rootNamespaceTransaction(n,s);const e=c.getSenderAccount(r,t),a=d.currentLoggedInWallet.accounts.find(p=>p.address===o),g=d.currentLoggedInWallet.others.find(p=>p.address===o),T=a?a.publicKey:g.publicKey,A=N.PublicAccount.createFromPublicKey(T,f.networkType),k=[l.toAggregateV1(A)],x=i.aggregateBonded(k,u),m=e.preV2Sign(x,b.currentNetworkProfile.generationHash);let S=h.lockFundTx(m),P=e.preV2Sign(S,b.currentNetworkProfile.generationHash);h.announceLF_AND_addAutoAnnounceABT(P,m)};c.createSubNamespaceMultisig=(r,t,n,s,o,u)=>{let i=f.buildTxn,l=c.subNamespaceTransaction(s,n);const e=c.getSenderAccount(r,t),a=d.currentLoggedInWallet.accounts.find(p=>p.address===o),g=d.currentLoggedInWallet.others.find(p=>p.address===o),T=a?a.publicKey:g.publicKey,A=N.PublicAccount.createFromPublicKey(T,f.networkType),k=[l.toAggregateV1(A)],x=i.aggregateBonded(k,u),m=e.preV2Sign(x,b.currentNetworkProfile.generationHash);let S=h.lockFundTx(m),P=e.preV2Sign(S,b.currentNetworkProfile.generationHash);h.announceLF_AND_addAutoAnnounceABT(P,m)};c.extendNamespace=(r,t,n,s)=>{let o=c.rootNamespaceTransaction(n,s),i=c.getSenderAccount(r,t).preV2Sign(o,b.currentNetworkProfile.generationHash);h.announceTransaction(i)};c.extendNamespaceMultisig=(r,t,n,s,o,u)=>{let i=f.buildTxn,l=c.rootNamespaceTransaction(n,s);const e=c.getSenderAccount(r,t),a=d.currentLoggedInWallet.accounts.find(p=>p.address===o),g=d.currentLoggedInWallet.others.find(p=>p.address===o),T=a?a.publicKey:g.publicKey,A=N.PublicAccount.createFromPublicKey(T,f.networkType),k=[l.toAggregateV1(A)],x=i.aggregateBonded(k,u),m=e.preV2Sign(x,b.currentNetworkProfile.generationHash);let S=h.lockFundTx(m),P=e.preV2Sign(S,b.currentNetworkProfile.generationHash);h.announceLF_AND_addAutoAnnounceABT(P,m)};let H=c;export{H as N};
