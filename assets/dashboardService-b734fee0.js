import{c as D,z as r,B as g,H as E,S as N}from"./index-7aba74d6.js";class F{constructor(t){this.type="",this.maxFee=0,this.signer="",this.signerAddress="",this.signerName="",this.deadline=null,this.initiator=null,this.hash=t}}class I extends F{constructor(t){super(t),this.timestamp="",this.block=0,this.fee=0,this.groupType="confirmed"}static convertToSubClass(t,a){let s=new t(a.hash);return Object.assign(s,a),s}}class B extends I{constructor(t){super(t),this.aliasName="",this.aliasType=0,this.aliasTypeName="",this.address="",this.assetId=""}}class z extends I{constructor(t){super(t),this.metadataType=0,this.metadataTypeName="",this.scopedMetadataKey="",this.targetPublicKey="",this.targetId="",this.targetIdName="",this.sizeChanged=0,this.valueChange="",this.oldValue="",this.newValue=""}}class W extends I{constructor(t){super(t),this.in_out=null,this.sender=null,this.recipient=null,this.recipientNamespaceId=null,this.recipientNamespaceName=null,this.sda=[],this.amountTransfer=0,this.message=null,this.messageType=null}}class Y extends I{constructor(t){super(t),this.aggregateLength=0,this.txnList=[],this.cosigners=[]}}class $ extends I{constructor(t){super(t),this.assetId="",this.nonce=null,this.namespaceName=null,this.levyAssetId=null,this.levyAssetAmount=null,this.levyAssetAmountIsRaw=null,this.levyType=null,this.levyRecipient=null,this.levyAssetName=null,this.supplyDelta=null,this.supplyDeltaIsRaw=null,this.divisibility=null,this.transferable=null,this.supplyMutable=null,this.duration=null}}class X extends I{constructor(t){super(t),this.applyHeightDelta=null,this.networkConfig=null,this.supportedEntityVersions=null,this.newVersion=null,this.upgradePeriod=null}}class Q extends I{constructor(t){super(t),this.namespaceId="",this.namespaceName="",this.registerType=0,this.registerTypeName="",this.isExtend=!1,this.duration=0,this.parentId="",this.parentName=""}}class j extends I{constructor(t){super(t),this.lockHash="",this.duration=0,this.expired=null,this.isRefunded=null,this.amountLocking=0}}class _ extends I{constructor(t){super(t),this.approvalDelta=0,this.removalDelta=0,this.oldApprovalNumber=null,this.oldRemovalNumber=null,this.addedCosigner=[],this.removedCosigner=[],this.modifyingAccountPublicKey=""}}class q extends I{constructor(t){super(t),this.secret="",this.hashType="",this.proof="",this.recipient="",this.assetId=null,this.namespaceName="",this.isSendWithNamespace=!1,this.amount=0,this.amountIsRaw=!0,this.duration=0}}class J extends I{constructor(t){super(t),this.restrictionTypeOutput="",this.restrictionType=0,this.modification=[]}}class Z extends I{constructor(t){super(t),this.remotePublicKey="",this.action=""}}class ee extends I{constructor(t){super(t),this.exchangeOffers=[],this.isTakingOffer=!1}}class te extends I{constructor(t){super(t),this.sdaExchange=[]}}class w extends F{constructor(t){super(t),this.groupType="unconfirmed"}static convertToSubClass(t,a){let s=new t(a.hash);return Object.assign(s,a),s}}class ae extends w{constructor(t){super(t),this.aliasName="",this.aliasType=0,this.aliasTypeName="",this.address="",this.assetId=""}}class se extends w{constructor(t){super(t),this.metadataType=0,this.metadataTypeName="",this.scopedMetadataKey="",this.targetPublicKey="",this.targetId="",this.targetIdName="",this.sizeChanged=0,this.valueChange="",this.oldValue="",this.newValue=""}}class ie extends w{constructor(t){super(t),this.in_out=null,this.sender=null,this.recipient=null,this.recipientNamespaceId=null,this.recipientNamespaceName=null,this.sda=[],this.amountTransfer=0,this.message=null,this.messageType=null}}class ne extends w{constructor(t){super(t),this.aggregateLength=0,this.txnList=[],this.cosigners=[]}}class re extends w{constructor(t){super(t),this.assetId="",this.nonce=null,this.namespaceName=null,this.levyAssetId=null,this.levyAssetAmount=null,this.levyAssetAmountIsRaw=null,this.levyType=null,this.levyRecipient=null,this.levyAssetName=null,this.supplyDelta=null,this.supplyDeltaIsRaw=null,this.divisibility=null,this.transferable=null,this.supplyMutable=null,this.duration=null}}class oe extends w{constructor(t){super(t),this.applyHeightDelta=null,this.networkConfig=null,this.supportedEntityVersions=null,this.newVersion=null,this.upgradePeriod=null}}class le extends w{constructor(t){super(t),this.namespaceId="",this.namespaceName="",this.registerType=0,this.registerTypeName="",this.isExtend=!1,this.duration=0,this.parentId="",this.parentName=""}}class ce extends w{constructor(t){super(t),this.lockHash="",this.duration=0,this.expired=null,this.isRefunded=null,this.amountLocking=0}}class pe extends w{constructor(t){super(t),this.approvalDelta=0,this.removalDelta=0,this.oldApprovalNumber=null,this.oldRemovalNumber=null,this.addedCosigner=[],this.removedCosigner=[],this.modifyingAccountPublicKey=""}}class me extends w{constructor(t){super(t),this.secret="",this.hashType="",this.proof="",this.recipient="",this.assetId=null,this.namespaceName="",this.isSendWithNamespace=!1,this.amount=0,this.amountIsRaw=!0,this.duration=0}}class de extends w{constructor(t){super(t),this.restrictionTypeOutput="",this.restrictionType=0,this.modification=[]}}class ue extends w{constructor(t){super(t),this.remotePublicKey="",this.action=""}}class ye extends w{constructor(t){super(t),this.exchangeOffers=[],this.isTakingOffer=!1}}class v extends F{constructor(t){super(t),this.cosignedPublickKey=[],this.allCosignerPublicKey=[],this.pendingCosignPublicKey=[],this.groupType="partial"}static convertToSubClass(t,a){let s=new t(a.hash);return Object.assign(s,a),s}}class ge extends v{constructor(t){super(t),this.aliasName="",this.aliasType=0,this.aliasTypeName="",this.address="",this.assetId=""}}class fe extends v{constructor(t){super(t),this.metadataType=0,this.metadataTypeName="",this.scopedMetadataKey="",this.targetPublicKey="",this.targetId="",this.targetIdName="",this.sizeChanged=0,this.valueChange="",this.oldValue="",this.newValue=""}}class Te extends v{constructor(t){super(t),this.in_out=null,this.sender=null,this.recipient=null,this.recipientNamespaceId=null,this.recipientNamespaceName=null,this.sda=[],this.amountTransfer=0,this.message=null,this.messageType=null}}class he extends v{constructor(t){super(t),this.aggregateLength=0,this.txnList=[],this.cosigners=[]}}class Ae extends v{constructor(t){super(t),this.assetId="",this.nonce=null,this.namespaceName=null,this.levyAssetId=null,this.levyAssetAmount=null,this.levyAssetAmountIsRaw=null,this.levyType=null,this.levyRecipient=null,this.levyAssetName=null,this.supplyDelta=null,this.supplyDeltaIsRaw=null,this.divisibility=null,this.transferable=null,this.supplyMutable=null,this.duration=null}}class Ne extends v{constructor(t){super(t),this.applyHeightDelta=null,this.networkConfig=null,this.supportedEntityVersions=null,this.newVersion=null,this.upgradePeriod=null}}class Ie extends v{constructor(t){super(t),this.namespaceId="",this.namespaceName="",this.registerType=0,this.registerTypeName="",this.isExtend=!1,this.duration=0,this.parentId="",this.parentName=""}}class we extends v{constructor(t){super(t),this.lockHash="",this.duration=0,this.expired=null,this.isRefunded=null,this.amountLocking=0}}class ve extends v{constructor(t){super(t),this.approvalDelta=0,this.removalDelta=0,this.oldApprovalNumber=null,this.oldRemovalNumber=null,this.addedCosigner=[],this.removedCosigner=[],this.modifyingAccountPublicKey=""}}class Ce extends v{constructor(t){super(t),this.secret="",this.hashType="",this.proof="",this.recipient="",this.assetId=null,this.namespaceName="",this.isSendWithNamespace=!1,this.amount=0,this.amountIsRaw=!0,this.duration=0}}class Ee extends v{constructor(t){super(t),this.restrictionTypeOutput="",this.restrictionType=0,this.modification=[]}}class Re extends v{constructor(t){super(t),this.remotePublicKey="",this.action=""}}class Pe extends v{constructor(t){super(t),this.exchangeOffers=[],this.isTakingOffer=!1}}class R{constructor(){this.uniqueHash="",this.type="",this.signer="",this.signerAddress="",this.signerName=""}}class L extends R{constructor(){super(),this.aliasName="",this.aliasType=0,this.aliasTypeName="",this.address="",this.assetId=""}}class x extends R{constructor(){super(),this.metadataType=0,this.metadataTypeName="",this.scopedMetadataKey="",this.targetPublicKey="",this.targetId="",this.targetIdName="",this.sizeChanged=0,this.valueChange="",this.oldValue="",this.newValue=""}}class V extends R{constructor(){super(),this.in_out=null,this.sender=null,this.recipient=null,this.recipientNamespaceId=null,this.recipientNamespaceName=null,this.sda=[],this.amountTransfer=0,this.message=null,this.messageType=null}}class b extends R{constructor(){super(),this.assetId="",this.nonce=null,this.namespaceName=null,this.levyAssetId=null,this.levyAssetAmount=null,this.levyAssetAmountIsRaw=null,this.levyType=null,this.levyRecipient=null,this.levyAssetName=null,this.supplyDelta=null,this.supplyDeltaIsRaw=null,this.divisibility=null,this.transferable=null,this.supplyMutable=null,this.duration=null}}class U extends R{constructor(){super(),this.applyHeightDelta=null,this.networkConfig=null,this.supportedEntityVersions=null,this.newVersion=null,this.upgradePeriod=null}}class Me extends R{constructor(){super(),this.namespaceId="",this.namespaceName="",this.registerType=0,this.registerTypeName="",this.isExtend=!1,this.duration=0,this.parentId="",this.parentName=""}}class G extends R{constructor(){super(),this.lockHash="",this.duration=0,this.expired=null,this.isRefunded=null,this.amountLocking=0}}class S extends R{constructor(){super(),this.approvalDelta=0,this.removalDelta=0,this.oldApprovalNumber=null,this.oldRemovalNumber=null,this.addedCosigner=[],this.removedCosigner=[],this.modifyingAccountPublicKey=""}}class H extends R{constructor(){super(),this.secret="",this.hashType="",this.proof="",this.recipient="",this.assetId=null,this.namespaceName="",this.isSendWithNamespace=!1,this.amount=0,this.amountIsRaw=!0,this.duration=0}}class k extends R{constructor(){super(),this.restrictionTypeOutput="",this.restrictionType=0,this.modification=[]}}class xe extends R{constructor(){super(),this.remotePublicKey="",this.action=""}}class K extends R{constructor(){super(),this.exchangeOffers=[],this.isTakingOffer=!1}}var M=(f=>(f[f.Sha3_256=0]="Sha3_256",f[f.Keccak_256=1]="Keccak_256",f[f.Hash_160=2]="Hash_160",f[f.Hash_256=3]="Hash_256",f))(M||{});const Oe="89ABCDEF",O=D(()=>new r.NamespaceId(g.nativeToken.fullNamespace).toHex());var be=(f=>(f[f.NONE=0]="NONE",f[f.GREEN=1]="GREEN",f[f.RED=2]="RED",f[f.INFO=3]="INFO",f))(be||{}),He=(f=>(f[f.NONE=0]="NONE",f[f.ADD_REMOVE=1]="ADD_REMOVE",f[f.TRUE_FALSE=2]="TRUE_FALSE",f[f.BUY_SELL=3]="BUY_SELL",f[f.ALLOW_BLOCK=4]="ALLOW_BLOCK",f))(He||{});class m{constructor(t,a){this.savedAggregateTxn=[],this.wallet=t,this.selectedAccount=a}async searchTxns(t,a){return await g.chainAPI.transactionAPI.searchTransactions(t,a)}async formatPartialMixedTxns(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatPartialTransaction(t[s]),e=v.convertToSubClass(Te,l),i=[];if(t[s].type===r.TransactionType.TRANSFER){let n=t[s];switch(e.message=n.message.payload,e.messageType=n.message.type,e.messageType){case r.MessageType.PlainMessage:e.messageTypeTitle="Plain Message";break;case r.MessageType.EncryptedMessage:e.messageTypeTitle="Encrypted Message";break;case r.MessageType.HexadecimalMessage:e.messageTypeTitle="Hexadecimal Message";break}n.recipient instanceof r.NamespaceId;let o;if(n.recipient instanceof r.NamespaceId){e.recipientNamespaceId=n.recipient.toHex(),o=await m.getAddressAlias(n.recipient);let c=await m.getNamespacesName([n.recipient]);e.recipientNamespaceName=c[0].name}else o=n.recipient;e.recipient=o.plain(),e.sender=n.signer.address.plain(),e.in_out=this.selectedAccount.address!==e.sender;for(let c=0;c<n.mosaics.length;++c){let y=n.mosaics[c].amount.compact(),T=y,u,h=m.isNamespace(n.mosaics[c].id);if(h){let A=new r.NamespaceId(n.mosaics[c].id.toDTO().id);u=await m.getAssetAlias(A)}else u=n.mosaics[c].id;let P=u.toHex();if([g.nativeToken.assetId,O.value].includes(P)){e.amountTransfer+=m.convertToExactNativeAmount(T);continue}let C={amount:y,divisibility:0,id:P,amountIsRaw:!0,sendWithNamespace:h};if(h){let A=n.mosaics[c].id;C.sendWithAlias={idHex:A.toHex(),id:A.toDTO().id}}i.push(C)}let p=i.filter(c=>c.sendWithNamespace).map(c=>E.createNamespaceId(c.sendWithAlias.id)),d=i.filter(c=>c.amountIsRaw).map(c=>E.createAssetId(c.id));if(p.length||d.length){let c=[];c=await g.chainAPI.namespaceAPI.getNamespacesName(p);let y=await g.chainAPI.assetAPI.getMosaics(d),T=await g.chainAPI.assetAPI.getMosaicsNames(d);for(let u=0;u<i.length;++u){let h=y.filter(A=>A.mosaicId.toHex()===i[u].id)[0];i[u].divisibility=h.divisibility,i[u].amount=m.convertToExactAmount(i[u].amount,h.divisibility),i[u].amountIsRaw=!1;let C=T.filter(A=>A.mosaicId.toHex()===i[u].id)[0].names;i[u].currentAlias=C.map(A=>({name:A.name,id:A.namespaceId.toDTO().id,idHex:A.namespaceId.toHex()})),i[u].sendWithAlias&&(i[u].sendWithAlias.name=c.filter(A=>A.namespaceId.toHex()===i[u].sendWithAlias.idHex).map(A=>A.name)[0])}}}e.sda=i,a.push(e)}return a}async formatUnconfirmedMixedTxns(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatUnconfirmedTransaction(t[s]),e=w.convertToSubClass(ie,l),i=[];if(t[s].type===r.TransactionType.TRANSFER){let n=t[s];if(e.message=n.message.payload,e.messageType=n.message.type,e.messageType===r.MessageType.PlainMessage){let c=this.convertToSwapType(e.message);c&&(e.type=c)}switch(e.messageType){case r.MessageType.PlainMessage:e.messageTypeTitle="Plain Message";break;case r.MessageType.EncryptedMessage:e.messageTypeTitle="Encrypted Message";break;case r.MessageType.HexadecimalMessage:e.messageTypeTitle="Hexadecimal Message";break}n.recipient instanceof r.NamespaceId;let o;if(n.recipient instanceof r.NamespaceId){e.recipientNamespaceId=n.recipient.toHex(),o=await m.getAddressAlias(n.recipient);let c=await m.getNamespacesName([n.recipient]);e.recipientNamespaceName=c[0].name}else o=n.recipient;e.recipient=o.plain(),e.sender=n.signer.address.plain(),e.in_out=this.selectedAccount.address!==e.sender;for(let c=0;c<n.mosaics.length;++c){let y=n.mosaics[c].amount.compact(),T=y,u,h=m.isNamespace(n.mosaics[c].id);if(h){let A=new r.NamespaceId(n.mosaics[c].id.toDTO().id);u=await m.getAssetAlias(A)}else u=n.mosaics[c].id;let P=u.toHex();if([g.nativeToken.assetId,O.value].includes(P)){e.amountTransfer+=m.convertToExactNativeAmount(T);continue}let C={amount:y,divisibility:0,id:P,amountIsRaw:!0,sendWithNamespace:h};if(h){let A=n.mosaics[c].id;C.sendWithAlias={idHex:A.toHex(),id:A.toDTO().id}}i.push(C)}let p=i.filter(c=>c.sendWithNamespace).map(c=>E.createNamespaceId(c.sendWithAlias.id)),d=i.filter(c=>c.amountIsRaw).map(c=>E.createAssetId(c.id));if(p.length||d.length){let c=[];c=await g.chainAPI.namespaceAPI.getNamespacesName(p);let y=await g.chainAPI.assetAPI.getMosaics(d),T=await g.chainAPI.assetAPI.getMosaicsNames(d);for(let u=0;u<i.length;++u){let h=y.filter(A=>A.mosaicId.toHex()===i[u].id)[0];i[u].divisibility=h.divisibility,i[u].amount=m.convertToExactAmount(i[u].amount,h.divisibility),i[u].amountIsRaw=!1;let C=T.filter(A=>A.mosaicId.toHex()===i[u].id)[0].names;i[u].currentAlias=C.map(A=>({name:A.name,id:A.namespaceId.toDTO().id,idHex:A.namespaceId.toHex()})),i[u].sendWithAlias&&(i[u].sendWithAlias.name=c.filter(A=>A.namespaceId.toHex()===i[u].sendWithAlias.idHex).map(A=>A.name)[0])}}}e.sda=i,a.push(e)}return a}async formatConfirmedMixedTxns(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatConfirmedTransaction(t[s]),e=I.convertToSubClass(W,l),i=[];if(t[s].type===r.TransactionType.TRANSFER){let n=t[s];if(e.message=n.message.payload,e.messageType=n.message.type,e.messageType===r.MessageType.PlainMessage){let c=this.convertToSwapType(e.message);c&&(e.type=c)}switch(e.messageType){case r.MessageType.PlainMessage:e.messageTypeTitle="Plain Message";break;case r.MessageType.EncryptedMessage:e.messageTypeTitle="Encrypted Message";break;case r.MessageType.HexadecimalMessage:e.messageTypeTitle="Hexadecimal Message";break}if(n.recipient instanceof r.NamespaceId,n.recipient instanceof r.NamespaceId){e.recipientNamespaceId=n.recipient.toHex();let c=await m.getNamespacesName([n.recipient]);e.recipientNamespaceName=c[0].name}let o=await m.getRecipient(n,e.block);e.recipient=o.plain(),e.sender=n.signer.address.plain(),e.in_out=this.selectedAccount.address!==e.sender;for(let c=0;c<n.mosaics.length;++c){let y=n.mosaics[c].amount.compact(),T=y,u=m.isNamespace(n.mosaics[c].id),P=(await m.getResolvedAsset(n.mosaics[c].id,e.block)).toHex();if([g.nativeToken.assetId,O.value].includes(P)){e.amountTransfer+=m.convertToExactNativeAmount(T);continue}let C={amount:y,divisibility:0,id:P,amountIsRaw:!0,sendWithNamespace:u};if(u){let A=n.mosaics[c].id;C.sendWithAlias={idHex:A.toHex(),id:A.toDTO().id}}i.push(C)}let p=i.filter(c=>c.sendWithNamespace).map(c=>E.createNamespaceId(c.sendWithAlias.id)),d=i.filter(c=>c.amountIsRaw).map(c=>E.createAssetId(c.id));if(p.length||d.length){let c=[];c=await g.chainAPI.namespaceAPI.getNamespacesName(p);let y=await g.chainAPI.assetAPI.getMosaics(d),T=await g.chainAPI.assetAPI.getMosaicsNames(d);for(let u=0;u<i.length;++u){let h=y.filter(A=>A.mosaicId.toHex()===i[u].id)[0];i[u].divisibility=h.divisibility,i[u].amount=m.convertToExactAmount(i[u].amount,h.divisibility),i[u].amountIsRaw=!1;let C=T.filter(A=>A.mosaicId.toHex()===i[u].id)[0].names;i[u].currentAlias=C.map(A=>({name:A.name,id:A.namespaceId.toDTO().id,idHex:A.namespaceId.toHex()})),i[u].sendWithAlias&&(i[u].sendWithAlias.name=c.filter(A=>A.namespaceId.toHex()===i[u].sendWithAlias.idHex).map(A=>A.name)[0])}}}e.sda=i,a.push(e)}return a}async formatUnconfirmedAccountTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatUnconfirmedTransaction(t[s]),e=w.convertToSubClass(pe,l);if(t[s].type===r.TransactionType.MODIFY_MULTISIG_ACCOUNT){let i=t[s];e.approvalDelta=i.minApprovalDelta,e.removalDelta=i.minRemovalDelta,e.addedCosigner=i.modifications.filter(n=>n.type===r.MultisigCosignatoryModificationType.Add).map(n=>n.cosignatoryPublicAccount.publicKey),e.removedCosigner=i.modifications.filter(n=>n.type===r.MultisigCosignatoryModificationType.Remove).map(n=>n.cosignatoryPublicAccount.publicKey);try{let n=await g.chainAPI.accountAPI.getMultisigAccountInfo(i.signer.address);n&&(e.oldApprovalNumber=n.minApproval,e.oldRemovalNumber=n.minRemoval)}catch{e.oldApprovalNumber=0,e.oldRemovalNumber=0}}a.push(e)}return a}async formatConfirmedAccountTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatConfirmedTransaction(t[s]),e=I.convertToSubClass(_,l);if(t[s].type===r.TransactionType.MODIFY_MULTISIG_ACCOUNT){let i=t[s];e.approvalDelta=i.minApprovalDelta,e.removalDelta=i.minRemovalDelta,e.addedCosigner=i.modifications.filter(n=>n.type===r.MultisigCosignatoryModificationType.Add).map(n=>n.cosignatoryPublicAccount.publicKey),e.removedCosigner=i.modifications.filter(n=>n.type===r.MultisigCosignatoryModificationType.Remove).map(n=>n.cosignatoryPublicAccount.publicKey)}a.push(e)}return a}async formatPartialAccountTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatPartialTransaction(t[s]),e=v.convertToSubClass(ve,l);if(t[s].type===r.TransactionType.MODIFY_MULTISIG_ACCOUNT){let i=t[s];e.approvalDelta=i.minApprovalDelta,e.removalDelta=i.minRemovalDelta,e.addedCosigner=i.modifications.filter(n=>n.type===r.MultisigCosignatoryModificationType.Add).map(n=>n.cosignatoryPublicAccount.publicKey),e.removedCosigner=i.modifications.filter(n=>n.type===r.MultisigCosignatoryModificationType.Remove).map(n=>n.cosignatoryPublicAccount.publicKey);try{let n=await g.chainAPI.accountAPI.getMultisigAccountInfo(i.signer.address);n&&(e.oldApprovalNumber=n.minApproval,e.oldRemovalNumber=n.minRemoval)}catch{e.oldApprovalNumber=0,e.oldRemovalNumber=0}}a.push(e)}return a}async formatUnconfirmedAliasTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatUnconfirmedTransaction(t[s]),e=w.convertToSubClass(ae,l);if(t[s].type===r.TransactionType.ADDRESS_ALIAS){let i=t[s];e.address=i.address.plain(),e.aliasType=i.actionType,e.aliasTypeName=i.actionType===r.AliasActionType.Link?"Link":"Unlink";let n=i.namespaceId;try{let o=await m.getNamespacesName([n]);e.aliasName=o[0].name}catch{}}else if(t[s].type===r.TransactionType.MOSAIC_ALIAS){let i=t[s];e.assetId=i.mosaicId.toHex(),e.aliasType=i.actionType,e.aliasTypeName=i.actionType===r.AliasActionType.Link?"Link":"Unlink";let n=i.namespaceId;try{let o=await m.getNamespacesName([n]);e.aliasName=o[0].name}catch{}}a.push(e)}return a}async formatConfirmedAliasTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatConfirmedTransaction(t[s]),e=I.convertToSubClass(B,l);if(t[s].type===r.TransactionType.ADDRESS_ALIAS){let i=t[s];e.address=i.address.plain(),e.aliasType=i.actionType,e.aliasTypeName=i.actionType===r.AliasActionType.Link?"Link":"Unlink";let n=i.namespaceId;try{let o=await m.getNamespacesName([n]);e.aliasName=o[0].name}catch{}}else if(t[s].type===r.TransactionType.MOSAIC_ALIAS){let i=t[s];e.assetId=i.mosaicId.toHex(),e.aliasType=i.actionType,e.aliasTypeName=i.actionType===r.AliasActionType.Link?"Link":"Unlink";let n=i.namespaceId;try{let o=await m.getNamespacesName([n]);e.aliasName=o[0].name}catch{}}a.push(e)}return a}async formatPartialAliasTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatPartialTransaction(t[s]),e=v.convertToSubClass(ge,l);if(t[s].type===r.TransactionType.ADDRESS_ALIAS){let i=t[s];e.address=i.address.plain(),e.aliasType=i.actionType,e.aliasTypeName=i.actionType===r.AliasActionType.Link?"Link":"Unlink";let n=i.namespaceId;try{let o=await m.getNamespacesName([n]);e.aliasName=o[0].name}catch{}}else if(t[s].type===r.TransactionType.MOSAIC_ALIAS){let i=t[s];e.assetId=i.mosaicId.toHex(),e.aliasType=i.actionType,e.aliasTypeName=i.actionType===r.AliasActionType.Link?"Link":"Unlink";let n=i.namespaceId;try{let o=await m.getNamespacesName([n]);e.aliasName=o[0].name}catch{}}a.push(e)}return a}async formatUnconfirmedMetadataTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatUnconfirmedTransaction(t[s]),e=w.convertToSubClass(se,l);if(t[s].type===r.TransactionType.MOSAIC_METADATA_V2){let i=t[s],n=i.targetMosaicId.toHex();e.metadataType=r.MetadataType.MOSAIC,e.metadataTypeName="Asset",e.scopedMetadataKey=i.scopedMetadataKey.toHex(),e.targetId=n,e.targetPublicKey=i.targetPublicKey.publicKey,e.sizeChanged=i.valueSizeDelta,e.valueChange=r.Convert.uint8ArrayToHex(i.valueDifferences);try{let o=await m.getAssetName(n);o.names.length&&(e.targetIdName=o.names[0].name);let p=await m.getAssetMetadata(i.targetMosaicId,i.scopedMetadataKey);p?(e.oldValue=p.value,e.newValue=m.applyValueChange(e.oldValue,e.valueChange,e.sizeChanged)):e.newValue=m.applyValueChange("",e.valueChange,e.sizeChanged)}catch{}}else if(t[s].type===r.TransactionType.NAMESPACE_METADATA_V2){let i=t[s],n=i.targetNamespaceId.toHex();e.metadataType=r.MetadataType.NAMESPACE,e.metadataTypeName="Namespace",e.scopedMetadataKey=i.scopedMetadataKey.toHex(),e.targetId=n,e.targetPublicKey=i.targetPublicKey.publicKey,e.sizeChanged=i.valueSizeDelta,e.valueChange=r.Convert.uint8ArrayToHex(i.valueDifferences);try{let o=await m.getNamespacesName([r.NamespaceId.createFromEncoded(n)]);o.length&&(e.targetIdName=o[0].name);let p=await m.getNamespaceMetadata(i.targetNamespaceId,i.scopedMetadataKey);p?(e.oldValue=p.value,e.newValue=m.applyValueChange(e.oldValue,e.valueChange,e.sizeChanged)):e.newValue=m.applyValueChange("",e.valueChange,e.sizeChanged)}catch{}}else if(t[s].type===r.TransactionType.ACCOUNT_METADATA_V2){let i=t[s];e.metadataType=r.MetadataType.ACCOUNT,e.metadataTypeName="Account",e.scopedMetadataKey=i.scopedMetadataKey.toHex(),e.targetPublicKey=i.targetPublicKey.publicKey,e.sizeChanged=i.valueSizeDelta,e.valueChange=r.Convert.uint8ArrayToHex(i.valueDifferences);try{let n=await m.getAccountMetadata(i.targetPublicKey,i.scopedMetadataKey);n?(e.oldValue=n.value,e.newValue=m.applyValueChange(e.oldValue,e.valueChange,e.sizeChanged)):e.newValue=m.applyValueChange("",e.valueChange,e.sizeChanged)}catch{}}a.push(e)}return a}async formatConfirmedMetadataTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatConfirmedTransaction(t[s]),e=I.convertToSubClass(z,l);if(t[s].type===r.TransactionType.MOSAIC_METADATA_V2){let i=t[s],n=i.targetMosaicId.toHex();e.metadataType=r.MetadataType.MOSAIC,e.metadataTypeName="Asset",e.scopedMetadataKey=i.scopedMetadataKey.toHex(),e.targetId=n,e.targetPublicKey=i.targetPublicKey.publicKey,e.sizeChanged=i.valueSizeDelta;try{let o=await m.getAssetName(n);o.names.length&&(e.targetIdName=o.names[0].name)}catch{}}else if(t[s].type===r.TransactionType.NAMESPACE_METADATA_V2){let i=t[s],n=i.targetNamespaceId.toHex();e.metadataType=r.MetadataType.NAMESPACE,e.metadataTypeName="Namespace",e.scopedMetadataKey=i.scopedMetadataKey.toHex(),e.targetId=n,e.targetPublicKey=i.targetPublicKey.publicKey,e.sizeChanged=i.valueSizeDelta;try{let o=await m.getNamespacesName([r.NamespaceId.createFromEncoded(n)]);o.length&&(e.targetIdName=o[0].name)}catch{}}else if(t[s].type===r.TransactionType.ACCOUNT_METADATA_V2){let i=t[s];e.metadataType=r.MetadataType.ACCOUNT,e.metadataTypeName="Account",e.scopedMetadataKey=i.scopedMetadataKey.toHex(),e.targetPublicKey=i.targetPublicKey.publicKey,e.sizeChanged=i.valueSizeDelta}a.push(e)}return a}async formatPartialMetadataTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatPartialTransaction(t[s]),e=v.convertToSubClass(fe,l);if(t[s].type===r.TransactionType.MOSAIC_METADATA_V2){let i=t[s],n=i.targetMosaicId.toHex();e.metadataType=r.MetadataType.MOSAIC,e.metadataTypeName="Asset",e.scopedMetadataKey=i.scopedMetadataKey.toHex(),e.targetId=n,e.targetPublicKey=i.targetPublicKey.publicKey,e.sizeChanged=i.valueSizeDelta,e.valueChange=r.Convert.uint8ArrayToHex(i.valueDifferences);try{let o=await m.getAssetName(n);o.names.length&&(e.targetIdName=o.names[0].name);let p=await m.getAssetMetadata(i.targetMosaicId,i.scopedMetadataKey);p?(e.oldValue=p.value,e.newValue=m.applyValueChange(e.oldValue,e.valueChange,e.sizeChanged)):e.newValue=m.applyValueChange("",e.valueChange,e.sizeChanged)}catch{}}else if(t[s].type===r.TransactionType.NAMESPACE_METADATA_V2){let i=t[s],n=i.targetNamespaceId.toHex();e.metadataType=r.MetadataType.NAMESPACE,e.metadataTypeName="Namespace",e.scopedMetadataKey=i.scopedMetadataKey.toHex(),e.targetId=n,e.targetPublicKey=i.targetPublicKey.publicKey,e.sizeChanged=i.valueSizeDelta,e.valueChange=r.Convert.uint8ArrayToHex(i.valueDifferences);try{let o=await m.getNamespacesName([r.NamespaceId.createFromEncoded(n)]);o.length&&(e.targetIdName=o[0].name);let p=await m.getNamespaceMetadata(i.targetNamespaceId,i.scopedMetadataKey);p?(e.oldValue=p.value,e.newValue=m.applyValueChange(e.oldValue,e.valueChange,e.sizeChanged)):e.newValue=m.applyValueChange("",e.valueChange,e.sizeChanged)}catch{}}else if(t[s].type===r.TransactionType.ACCOUNT_METADATA_V2){let i=t[s];e.metadataType=r.MetadataType.ACCOUNT,e.metadataTypeName="Account",e.scopedMetadataKey=i.scopedMetadataKey.toHex(),e.targetPublicKey=i.targetPublicKey.publicKey,e.sizeChanged=i.valueSizeDelta,e.valueChange=r.Convert.uint8ArrayToHex(i.valueDifferences);try{let n=await m.getAccountMetadata(i.targetPublicKey,i.scopedMetadataKey);n?(e.oldValue=n.value,e.newValue=m.applyValueChange(e.oldValue,e.valueChange,e.sizeChanged)):e.newValue=m.applyValueChange("",e.valueChange,e.sizeChanged)}catch{}}a.push(e)}return a}async formatUnconfirmedAggregateTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatUnconfirmedTransaction(t[s]),e=w.convertToSubClass(ne,l);if(t[s].type===r.TransactionType.AGGREGATE_BONDED_V1||t[s].type===r.TransactionType.AGGREGATE_COMPLETE_V1){let i=t[s];i.innerTransactions.length===0&&(i=await this.autoFindAggregateTransaction(e.hash)),e.aggregateLength=i.innerTransactions.length,e.cosigners=i.cosignatures.map(n=>n.signer.publicKey);for(let n=0;n<i.innerTransactions.length;++n){let o=i.innerTransactions[n].type,p=e.txnList.find(d=>d.type===o);if(p)p.total+=1;else{let d={type:o,name:N.getTransactionTypeName(o),total:1};e.txnList.push(d)}}}a.push(e)}return a}async formatConfirmedAggregateTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatConfirmedTransaction(t[s]),e=I.convertToSubClass(Y,l);if(t[s].type===r.TransactionType.AGGREGATE_BONDED_V1||t[s].type===r.TransactionType.AGGREGATE_COMPLETE_V1){let i=t[s];i.innerTransactions.length===0&&(i=await this.autoFindAggregateTransaction(e.hash)),e.aggregateLength=i.innerTransactions.length,e.cosigners=i.cosignatures.map(n=>n.signer.publicKey);for(let n=0;n<i.innerTransactions.length;++n){let o=i.innerTransactions[n].type,p=e.txnList.find(d=>d.type===o);if(p)p.total+=1;else{let d={type:o,name:N.getTransactionTypeName(o),total:1};e.txnList.push(d)}}}a.push(e)}return a}async formatPartialAggregateTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatPartialTransaction(t[s]),e=v.convertToSubClass(he,l);if(t[s].type===r.TransactionType.AGGREGATE_BONDED_V1||t[s].type===r.TransactionType.AGGREGATE_COMPLETE_V1){let i=t[s];i.innerTransactions.length===0&&(i=await this.autoFindAggregateTransaction(e.hash)),e.aggregateLength=i.innerTransactions.length,e.cosigners=i.cosignatures.map(n=>n.signer.publicKey);for(let n=0;n<i.innerTransactions.length;++n){let o=i.innerTransactions[n].type,p=e.txnList.find(d=>d.type===o);if(p)p.total+=1;else{let d={type:o,name:N.getTransactionTypeName(o),total:1};e.txnList.push(d)}}}a.push(e)}return a}async formatUnconfirmedAssetTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatUnconfirmedTransaction(t[s]),e=w.convertToSubClass(re,l);if(t[s].type===r.TransactionType.MOSAIC_DEFINITION){let i=t[s];e.assetId=i.mosaicId.toHex(),e.divisibility=i.mosaicProperties.divisibility,e.duration=i.mosaicProperties.duration?i.mosaicProperties.duration.compact():void 0,e.transferable=i.mosaicProperties.transferable,e.supplyMutable=i.mosaicProperties.supplyMutable,e.nonce=i.mosaicNonce.toNumber()}else if(t[s].type===r.TransactionType.MOSAIC_SUPPLY_CHANGE){let i=t[s],n=i.mosaicId.toHex();e.assetId=n,e.supplyDelta=i.delta.compact(),e.supplyDeltaIsRaw=!0,i.direction===r.MosaicSupplyType.Decrease&&(e.supplyDelta=-e.supplyDelta);try{let o=await m.getAssetInfo(n);e.supplyDelta=m.convertToExactAmount(e.supplyDelta,o.divisibility),e.supplyDeltaIsRaw=!1}catch{}}else if(t[s].type===r.TransactionType.MODIFY_MOSAIC_LEVY){let i=t[s],n=i.mosaicId.toHex(),o=i.mosaicLevy.mosaicId.toHex(),p=i.mosaicLevy.fee.compact();e.assetId=n,e.levyAssetId=o,e.levyAssetAmount=p,e.levyAssetAmountIsRaw=!0,e.levyType=i.mosaicLevy.type,e.levyRecipient=i.mosaicLevy.recipient.plain();try{let d=await m.getAssetName(n);d.names.length&&(e.namespaceName=d.names[0].name);let c=await m.getAssetInfo(o);e.levyAssetAmount=m.convertToExactAmount(p,c.divisibility),e.levyAssetAmountIsRaw=!1;let y=await m.getAssetName(o);y.names.length&&(e.levyAssetName=y.names[0].name)}catch{}}else if(t[s].type===r.TransactionType.REMOVE_MOSAIC_LEVY){let n=t[s].mosaicId.toHex();e.assetId=n;try{let o=await m.getAssetName(n);o.names.length&&(e.namespaceName=o.names[0].name)}catch{}}a.push(e)}return a}async formatConfirmedAssetTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatConfirmedTransaction(t[s]),e=I.convertToSubClass($,l);if(t[s].type===r.TransactionType.MOSAIC_DEFINITION){let i=t[s];e.assetId=i.mosaicId.toHex(),e.divisibility=i.mosaicProperties.divisibility,e.duration=i.mosaicProperties.duration?i.mosaicProperties.duration.compact():void 0,e.transferable=i.mosaicProperties.transferable,e.supplyMutable=i.mosaicProperties.supplyMutable,e.nonce=i.mosaicNonce.toNumber()}else if(t[s].type===r.TransactionType.MOSAIC_SUPPLY_CHANGE){let i=t[s],n=i.mosaicId.toHex();e.assetId=n,e.supplyDelta=i.delta.compact(),e.supplyDeltaIsRaw=!0,i.direction===r.MosaicSupplyType.Decrease&&(e.supplyDelta=-e.supplyDelta);try{let o=await m.getAssetInfo(n);e.supplyDelta=m.convertToExactAmount(e.supplyDelta,o.divisibility),e.supplyDeltaIsRaw=!1}catch{}}else if(t[s].type===r.TransactionType.MODIFY_MOSAIC_LEVY){let i=t[s],n=i.mosaicId.toHex(),o=i.mosaicLevy.mosaicId.toHex(),p=i.mosaicLevy.fee.compact();e.assetId=n,e.levyAssetId=o,e.levyAssetAmount=p,e.levyAssetAmountIsRaw=!0,e.levyType=i.mosaicLevy.type,e.levyRecipient=i.mosaicLevy.recipient.plain();try{let d=await m.getAssetName(n);d.names.length&&(e.namespaceName=d.names[0].name);let c=await m.getAssetInfo(o);e.levyAssetAmount=m.convertToExactAmount(p,c.divisibility),e.levyAssetAmountIsRaw=!1;let y=await m.getAssetName(o);y.names.length&&(e.levyAssetName=y.names[0].name)}catch{}}else if(t[s].type===r.TransactionType.REMOVE_MOSAIC_LEVY){let n=t[s].mosaicId.toHex();e.assetId=n;try{let o=await m.getAssetName(n);o.names.length&&(e.namespaceName=o.names[0].name)}catch{}}a.push(e)}return a}async formatPartialAssetTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatPartialTransaction(t[s]),e=v.convertToSubClass(Ae,l);if(t[s].type===r.TransactionType.MOSAIC_DEFINITION){let i=t[s];e.assetId=i.mosaicId.toHex(),e.divisibility=i.mosaicProperties.divisibility,e.duration=i.mosaicProperties.duration?i.mosaicProperties.duration.compact():void 0,e.transferable=i.mosaicProperties.transferable,e.supplyMutable=i.mosaicProperties.supplyMutable,e.nonce=i.mosaicNonce.toNumber()}else if(t[s].type===r.TransactionType.MOSAIC_SUPPLY_CHANGE){let i=t[s],n=i.mosaicId.toHex();e.assetId=n,e.supplyDelta=i.delta.compact(),e.supplyDeltaIsRaw=!0,i.direction===r.MosaicSupplyType.Decrease&&(e.supplyDelta=-e.supplyDelta);try{let o=await m.getAssetInfo(n);e.supplyDelta=m.convertToExactAmount(e.supplyDelta,o.divisibility),e.supplyDeltaIsRaw=!1}catch{}}else if(t[s].type===r.TransactionType.MODIFY_MOSAIC_LEVY){let i=t[s],n=i.mosaicId.toHex(),o=i.mosaicLevy.mosaicId.toHex(),p=i.mosaicLevy.fee.compact();e.assetId=n,e.levyAssetId=o,e.levyAssetAmount=p,e.levyAssetAmountIsRaw=!0,e.levyType=i.mosaicLevy.type,e.levyRecipient=i.mosaicLevy.recipient.plain();try{let d=await m.getAssetName(n);d.names.length&&(e.namespaceName=d.names[0].name);let c=await m.getAssetInfo(o);e.levyAssetAmount=m.convertToExactAmount(p,c.divisibility),e.levyAssetAmountIsRaw=!1;let y=await m.getAssetName(o);y.names.length&&(e.levyAssetName=y.names[0].name)}catch{}}else if(t[s].type===r.TransactionType.REMOVE_MOSAIC_LEVY){let n=t[s].mosaicId.toHex();e.assetId=n;try{let o=await m.getAssetName(n);o.names.length&&(e.namespaceName=o.names[0].name)}catch{}}a.push(e)}return a}async formatUnconfirmedChainTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatUnconfirmedTransaction(t[s]),e=w.convertToSubClass(oe,l);if(t[s].type===r.TransactionType.CHAIN_CONFIGURE){let i=t[s];e.applyHeightDelta=i.applyHeightDelta.compact()}else if(t[s].type===r.TransactionType.CHAIN_UPGRADE){let i=t[s];e.upgradePeriod=i.upgradePeriod.compact(),e.newVersion=i.newBlockchainVersion.toHex()}a.push(e)}return a}async formatConfirmedChainTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatConfirmedTransaction(t[s]),e=I.convertToSubClass(X,l);if(t[s].type===r.TransactionType.CHAIN_CONFIGURE){let i=t[s];e.applyHeightDelta=i.applyHeightDelta.compact()}else if(t[s].type===r.TransactionType.CHAIN_UPGRADE){let i=t[s];e.upgradePeriod=i.upgradePeriod.compact(),e.newVersion=i.newBlockchainVersion.toHex()}a.push(e)}return a}async formatPartialChainTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatPartialTransaction(t[s]),e=v.convertToSubClass(Ne,l);if(t[s].type===r.TransactionType.CHAIN_CONFIGURE){let i=t[s];e.applyHeightDelta=i.applyHeightDelta.compact()}else if(t[s].type===r.TransactionType.CHAIN_UPGRADE){let i=t[s];e.upgradePeriod=i.upgradePeriod.compact(),e.newVersion=i.newBlockchainVersion.toHex()}a.push(e)}return a}async formatUnconfirmedExchangeTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatUnconfirmedTransaction(t[s]),e=w.convertToSubClass(ye,l);if(t[s].type===r.TransactionType.EXCHANGE_OFFER){e.isTakingOffer=!0;let o=t[s];for(let p=0;p<o.offers.length;++p){let d=o.offers[p],c=d.mosaicId.toHex(),y=d.mosaicAmount.compact(),T={amount:y,amountIsRaw:!0,assetId:c,cost:m.convertToExactNativeAmount(d.cost.compact()),owner:d.owner.publicKey,type:d.type===r.ExchangeOfferType.SELL_OFFER?"Sell":"Buy"};try{let u=await m.getAssetInfo(c);T.amountIsRaw=!1,T.amount=m.convertToExactAmount(y,u.divisibility);let h=await m.getAssetName(c);h.names.length&&(T.assetNamespace=h.names[0].name)}catch{}e.exchangeOffers.push(T)}}else if(t[s].type===r.TransactionType.ADD_EXCHANGE_OFFER){let o=t[s];for(let p=0;p<o.offers.length;++p){let d=o.offers[p],c=d.mosaicId.toHex(),y=d.mosaicAmount.compact(),T={amount:y,amountIsRaw:!0,assetId:c,cost:m.convertToExactNativeAmount(d.cost.compact()),duration:d.duration.compact(),type:d.type===r.ExchangeOfferType.SELL_OFFER?"Sell":"Buy"};try{let u=await m.getAssetInfo(c);T.amountIsRaw=!1,T.amount=m.convertToExactAmount(y,u.divisibility);let h=await m.getAssetName(c);h.names.length&&(T.assetNamespace=h.names[0].name)}catch{}e.exchangeOffers.push(T)}}else if(t[s].type===r.TransactionType.REMOVE_EXCHANGE_OFFER){let o=t[s];for(let p=0;p<o.offers.length;++p){let d=o.offers[p],c=d.mosaicId.toHex(),y={assetId:c,type:d.offerType===r.ExchangeOfferType.SELL_OFFER?"Sell":"Buy"};try{let T=await m.getAssetName(c);T.names.length&&(y.assetNamespace=T.names[0].name)}catch{}e.exchangeOffers.push(y)}}let i=e.exchangeOffers.filter(o=>o.type==="Buy"),n=e.exchangeOffers.filter(o=>o.type==="Sell");e.exchangeOffers=e.isTakingOffer?n.concat(i):i.concat(n),a.push(e)}return a}async formatConfirmedExchangeTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatConfirmedTransaction(t[s]),e=I.convertToSubClass(ee,l);if(t[s].type===r.TransactionType.EXCHANGE_OFFER){e.isTakingOffer=!0;let o=t[s];for(let p=0;p<o.offers.length;++p){let d=o.offers[p],c=d.mosaicId.toHex(),y=d.mosaicAmount.compact(),T={amount:y,amountIsRaw:!0,assetId:c,cost:m.convertToExactNativeAmount(d.cost.compact()),owner:d.owner.publicKey,type:d.type===r.ExchangeOfferType.SELL_OFFER?"Sell":"Buy"};try{let u=await m.getAssetInfo(c);T.amountIsRaw=!1,T.amount=m.convertToExactAmount(y,u.divisibility);let h=await m.getAssetName(c);h.names.length&&(T.assetNamespace=h.names[0].name)}catch{}e.exchangeOffers.push(T)}}else if(t[s].type===r.TransactionType.ADD_EXCHANGE_OFFER){let o=t[s];for(let p=0;p<o.offers.length;++p){let d=o.offers[p],c=d.mosaicId.toHex(),y=d.mosaicAmount.compact(),T={amount:y,amountIsRaw:!0,assetId:c,cost:m.convertToExactNativeAmount(d.cost.compact()),duration:d.duration.compact(),type:d.type===r.ExchangeOfferType.SELL_OFFER?"Sell":"Buy"};try{let u=await m.getAssetInfo(c);T.amountIsRaw=!1,T.amount=m.convertToExactAmount(y,u.divisibility);let h=await m.getAssetName(c);h.names.length&&(T.assetNamespace=h.names[0].name)}catch{}e.exchangeOffers.push(T)}}else if(t[s].type===r.TransactionType.REMOVE_EXCHANGE_OFFER){let o=t[s];for(let p=0;p<o.offers.length;++p){let d=o.offers[p],c=d.mosaicId.toHex(),y={assetId:c,type:d.offerType===r.ExchangeOfferType.SELL_OFFER?"Sell":"Buy"};try{let T=await m.getAssetName(c);T.names.length&&(y.assetNamespace=T.names[0].name)}catch{}e.exchangeOffers.push(y)}}let i=e.exchangeOffers.filter(o=>o.type==="Buy"),n=e.exchangeOffers.filter(o=>o.type==="Sell");e.exchangeOffers=e.isTakingOffer?n.concat(i):i.concat(n),a.push(e)}return a}async formatPartialExchangeTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatPartialTransaction(t[s]),e=v.convertToSubClass(Pe,l);if(t[s].type===r.TransactionType.EXCHANGE_OFFER){e.isTakingOffer=!0;let o=t[s];for(let p=0;p<o.offers.length;++p){let d=o.offers[p],c=d.mosaicId.toHex(),y=d.mosaicAmount.compact(),T={amount:y,amountIsRaw:!0,assetId:c,cost:m.convertToExactNativeAmount(d.cost.compact()),owner:d.owner.publicKey,type:d.type===r.ExchangeOfferType.SELL_OFFER?"Sell":"Buy"};try{let u=await m.getAssetInfo(c);T.amountIsRaw=!1,T.amount=m.convertToExactAmount(y,u.divisibility);let h=await m.getAssetName(c);h.names.length&&(T.assetNamespace=h.names[0].name)}catch{}e.exchangeOffers.push(T)}}else if(t[s].type===r.TransactionType.ADD_EXCHANGE_OFFER){let o=t[s];for(let p=0;p<o.offers.length;++p){let d=o.offers[p],c=d.mosaicId.toHex(),y=d.mosaicAmount.compact(),T={amount:y,amountIsRaw:!0,assetId:c,cost:m.convertToExactNativeAmount(d.cost.compact()),duration:d.duration.compact(),type:d.type===r.ExchangeOfferType.SELL_OFFER?"Sell":"Buy"};try{let u=await m.getAssetInfo(c);T.amountIsRaw=!1,T.amount=m.convertToExactAmount(y,u.divisibility);let h=await m.getAssetName(c);h.names.length&&(T.assetNamespace=h.names[0].name)}catch{}e.exchangeOffers.push(T)}}else if(t[s].type===r.TransactionType.REMOVE_EXCHANGE_OFFER){let o=t[s];for(let p=0;p<o.offers.length;++p){let d=o.offers[p],c=d.mosaicId.toHex(),y={assetId:c,type:d.offerType===r.ExchangeOfferType.SELL_OFFER?"Sell":"Buy"};try{let T=await m.getAssetName(c);T.names.length&&(y.assetNamespace=T.names[0].name)}catch{}e.exchangeOffers.push(y)}}let i=e.exchangeOffers.filter(o=>o.type==="Buy"),n=e.exchangeOffers.filter(o=>o.type==="Sell");e.exchangeOffers=e.isTakingOffer?n.concat(i):i.concat(n),a.push(e)}return a}async formatUnconfirmedLinkTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatUnconfirmedTransaction(t[s]),e=w.convertToSubClass(ue,l);if(t[s].type===r.TransactionType.LINK_ACCOUNT){let i=t[s];e.action=i.linkAction===r.LinkAction.Link?"Link":"Unlink",e.remotePublicKey=i.remoteAccountKey}a.push(e)}return a}async formatConfirmedLinkTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatConfirmedTransaction(t[s]),e=I.convertToSubClass(Z,l);if(t[s].type===r.TransactionType.LINK_ACCOUNT){let i=t[s];e.action=i.linkAction===r.LinkAction.Link?"Link":"Unlink",e.remotePublicKey=i.remoteAccountKey}a.push(e)}return a}async formatPartialLinkTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatPartialTransaction(t[s]),e=v.convertToSubClass(Re,l);if(t[s].type===r.TransactionType.LINK_ACCOUNT){let i=t[s];e.action=i.linkAction===r.LinkAction.Link?"Link":"Unlink",e.remotePublicKey=i.remoteAccountKey}a.push(e)}return a}async formatUnconfirmedLockTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatUnconfirmedTransaction(t[s]),e=w.convertToSubClass(ce,l),i=t[s];e.lockHash=i.hash,e.duration=i.duration.compact();let n=i.mosaic.amount.compact();e.amountLocking=g.nativeToken.divisibility?n/Math.pow(10,g.nativeToken.divisibility):n,a.push(e)}return a}async formatConfirmedLockTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatConfirmedTransaction(t[s]),e=I.convertToSubClass(j,l),i=t[s];e.lockHash=i.hash,e.duration=i.duration.compact();let n=i.mosaic.amount.compact();e.amountLocking=g.nativeToken.divisibility?n/Math.pow(10,g.nativeToken.divisibility):n;try{let o=await g.chainAPI.transactionAPI.getTransactionStatus(i.hash);e.isRefunded=o.group===r.TransactionGroupType.CONFIRMED}catch{e.isRefunded=!1}a.push(e)}return a}async formatPartialLockTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatPartialTransaction(t[s]),e=v.convertToSubClass(we,l),i=t[s];e.lockHash=i.hash,e.duration=i.duration.compact();let n=i.mosaic.amount.compact();e.amountLocking=g.nativeToken.divisibility?n/Math.pow(10,g.nativeToken.divisibility):n,a.push(e)}return a}async formatUnconfirmedNamespaceTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatUnconfirmedTransaction(t[s]),e=w.convertToSubClass(le,l);if(t[s].type===r.TransactionType.REGISTER_NAMESPACE){let i=t[s];if(e.namespaceName=i.namespaceName,i.namespaceType===r.NamespaceType.RootNamespace)e.duration=i.duration.compact(),e.registerType=r.NamespaceType.RootNamespace,e.registerTypeName="Root namespace";else{e.registerType=r.NamespaceType.SubNamespace,e.registerTypeName="Sub namespace",e.parentId=i.parentId.toHex();let n=await m.getNamespacesName([i.parentId]);e.parentName=n[0].name}e.namespaceId=i.namespaceId.toHex()}a.push(e)}return a}async formatConfirmedNamespaceTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatConfirmedTransaction(t[s]),e=I.convertToSubClass(Q,l);if(t[s].type===r.TransactionType.REGISTER_NAMESPACE){let i=t[s];if(e.namespaceName=i.namespaceName,i.namespaceType===r.NamespaceType.RootNamespace)e.duration=i.duration.compact(),e.registerType=r.NamespaceType.RootNamespace,e.registerTypeName="Root namespace";else{e.registerType=r.NamespaceType.SubNamespace,e.registerTypeName="Sub namespace",e.parentId=i.parentId.toHex();let n=await m.getNamespacesName([i.parentId]);e.parentName=n[0].name}e.namespaceId=i.namespaceId.toHex()}a.push(e)}return a}async formatConfirmedSdaExchangeTransaction(t){var s,l,e,i;let a=[];for(let n=0;n<t.length;++n){let o=await this.formatConfirmedTransaction(t[n]),p=I.convertToSubClass(te,o);if(t[n].type===r.TransactionType.PLACE_SDA_EXCHANGE_OFFER){let d=t[n];p.sdaExchange=d.offers.map(c=>({sdaIdGet:c.mosaicIdGet.toHex(),sdaIdGive:c.mosaicIdGive.toHex(),sdaGetNamespace:"",sdaGiveNamespace:"",amountGet:c.mosaicAmountGet.compact(),amountGive:c.mosaicAmountGive.compact(),duration:c.duration.compact()}));for(let c=0;c<p.sdaExchange.length;c++){const y=await m.getAssetsName([d.offers[c].mosaicIdGet,d.offers[c].mosaicIdGive]);p.sdaExchange[c].sdaGetNamespace=(s=y[0].names[0])==null?void 0:s.name,p.sdaExchange[c].sdaGiveNamespace=(l=y[1].names[0])==null?void 0:l.name;const T=(await m.getAssetInfo(p.sdaExchange[c].sdaIdGet)).divisibility,u=(await m.getAssetInfo(p.sdaExchange[c].sdaIdGive)).divisibility;p.sdaExchange[c].amountGet=p.sdaExchange[c].amountGet/Math.pow(10,T),p.sdaExchange[c].amountGive=p.sdaExchange[c].amountGive/Math.pow(10,u)}}else if(t[n].type===r.TransactionType.REMOVE_SDA_EXCHANGE_OFFER){let d=t[n];p.sdaExchange=d.offers.map(c=>({sdaIdGet:c.mosaicIdGet.toHex(),sdaIdGive:c.mosaicIdGive.toHex(),sdaGetNamespace:"",sdaGiveNamespace:""}));for(let c=0;c<p.sdaExchange.length;c++){const y=await m.getAssetsName([d.offers[c].mosaicIdGet,d.offers[c].mosaicIdGive]);p.sdaExchange[c].sdaGetNamespace=(e=y[0].names[0])==null?void 0:e.name,p.sdaExchange[c].sdaGiveNamespace=(i=y[1].names[0])==null?void 0:i.name}}a.push(p)}return a}async formatPartialNamespaceTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatPartialTransaction(t[s]),e=v.convertToSubClass(Ie,l);if(t[s].type===r.TransactionType.REGISTER_NAMESPACE){let i=t[s];if(e.namespaceName=i.namespaceName,i.namespaceType===r.NamespaceType.RootNamespace)e.duration=i.duration.compact(),e.registerType=r.NamespaceType.RootNamespace,e.registerTypeName="Root namespace";else{e.registerType=r.NamespaceType.SubNamespace,e.registerTypeName="Sub namespace",e.parentId=i.parentId.toHex();let n=await m.getNamespacesName([i.parentId]);e.parentName=n[0].name}e.namespaceId=i.namespaceId.toHex()}a.push(e)}return a}async formatUnconfirmedRestrictionTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatUnconfirmedTransaction(t[s]),e=w.convertToSubClass(de,l);if(t[s].type===r.TransactionType.MODIFY_ACCOUNT_RESTRICTION_ADDRESS){let o=t[s];e.restrictionTypeOutput=m.getRestrictionTypeName(o.restrictionType).action;for(let p=0;p<o.modifications.length;++p){let d=o.modifications[p],c={action:d.modificationType===r.RestrictionModificationType.Add?"Add":"Remove",value:d.value};e.modification.push(c)}}else if(t[s].type===r.TransactionType.MODIFY_ACCOUNT_RESTRICTION_MOSAIC){let o=t[s];e.restrictionTypeOutput=m.getRestrictionTypeName(o.restrictionType).action;for(let p=0;p<o.modifications.length;++p){let d=o.modifications[p],c={action:d.modificationType===r.RestrictionModificationType.Add?"Add":"Remove",value:new r.MosaicId(d.value).toHex()};try{let y=c.value;if(y===g.nativeToken.assetId)c.name=g.nativeToken.label;else{let T=await m.getAssetName(y);T.names.length&&(c.name=T.names[0].name)}}catch{}e.modification.push(c)}}else if(t[s].type===r.TransactionType.MODIFY_ACCOUNT_RESTRICTION_OPERATION){let o=t[s];e.restrictionTypeOutput=m.getRestrictionTypeName(o.restrictionType).action;for(let p=0;p<o.modifications.length;++p){let d=o.modifications[p],c={action:d.modificationType===r.RestrictionModificationType.Add?"Add":"Remove",value:N.getTransactionTypeNameByEnum(d.value)};e.modification.push(c)}}let i=e.modification.filter(o=>o.action==="Add"),n=e.modification.filter(o=>o.action==="Remove");e.modification=i.concat(n),a.push(e)}return a}async formatConfirmedRestrictionTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatConfirmedTransaction(t[s]),e=I.convertToSubClass(J,l);if(t[s].type===r.TransactionType.MODIFY_ACCOUNT_RESTRICTION_ADDRESS){let o=t[s];e.restrictionTypeOutput=m.getRestrictionTypeName(o.restrictionType).action;for(let p=0;p<o.modifications.length;++p){let d=o.modifications[p],c={action:d.modificationType===r.RestrictionModificationType.Add?"Add":"Remove",value:d.value};e.modification.push(c)}}else if(t[s].type===r.TransactionType.MODIFY_ACCOUNT_RESTRICTION_MOSAIC){let o=t[s];e.restrictionTypeOutput=m.getRestrictionTypeName(o.restrictionType).action;for(let p=0;p<o.modifications.length;++p){let d=o.modifications[p],c={action:d.modificationType===r.RestrictionModificationType.Add?"Add":"Remove",value:new r.MosaicId(d.value).toHex()};try{let y=c.value;if(y===g.nativeToken.assetId)c.name=g.nativeToken.label;else{let T=await m.getAssetName(y);T.names.length&&(c.name=T.names[0].name)}}catch{}e.modification.push(c)}}else if(t[s].type===r.TransactionType.MODIFY_ACCOUNT_RESTRICTION_OPERATION){let o=t[s];e.restrictionTypeOutput=m.getRestrictionTypeName(o.restrictionType).action;for(let p=0;p<o.modifications.length;++p){let d=o.modifications[p],c={action:d.modificationType===r.RestrictionModificationType.Add?"Add":"Remove",value:N.getTransactionTypeNameByEnum(d.value)};e.modification.push(c)}}let i=e.modification.filter(o=>o.action==="Add"),n=e.modification.filter(o=>o.action==="Remove");e.modification=i.concat(n),a.push(e)}return a}async formatPartialRestrictionTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatPartialTransaction(t[s]),e=v.convertToSubClass(Ee,l);if(t[s].type===r.TransactionType.MODIFY_ACCOUNT_RESTRICTION_ADDRESS){let o=t[s];e.restrictionTypeOutput=m.getRestrictionTypeName(o.restrictionType).action;for(let p=0;p<o.modifications.length;++p){let d=o.modifications[p],c={action:d.modificationType===r.RestrictionModificationType.Add?"Add":"Remove",value:d.value};e.modification.push(c)}}else if(t[s].type===r.TransactionType.MODIFY_ACCOUNT_RESTRICTION_MOSAIC){let o=t[s];e.restrictionTypeOutput=m.getRestrictionTypeName(o.restrictionType).action;for(let p=0;p<o.modifications.length;++p){let d=o.modifications[p],c={action:d.modificationType===r.RestrictionModificationType.Add?"Add":"Remove",value:new r.MosaicId(d.value).toHex()};try{let y=c.value;if(y===g.nativeToken.assetId)c.name=g.nativeToken.label;else{let T=await m.getAssetName(y);T.names.length&&(c.name=T.names[0].name)}}catch{}e.modification.push(c)}}else if(t[s].type===r.TransactionType.MODIFY_ACCOUNT_RESTRICTION_OPERATION){let o=t[s];e.restrictionTypeOutput=m.getRestrictionTypeName(o.restrictionType).action;for(let p=0;p<o.modifications.length;++p){let d=o.modifications[p],c={action:d.modificationType===r.RestrictionModificationType.Add?"Add":"Remove",value:N.getTransactionTypeNameByEnum(d.value)};e.modification.push(c)}}let i=e.modification.filter(o=>o.action==="Add"),n=e.modification.filter(o=>o.action==="Remove");e.modification=i.concat(n),a.push(e)}return a}async formatUnconfirmedSecretTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatUnconfirmedTransaction(t[s]),e=w.convertToSubClass(me,l);if(t[s].type===r.TransactionType.SECRET_LOCK){let i=t[s];e.duration=i.duration.compact(),e.secret=i.secret,e.recipient=i.recipient.plain(),e.amount=i.mosaic.amount.compact(),e.hashType=M[i.hashType];let n=m.isNamespace(i.mosaic.id);try{if(n){let p=new r.NamespaceId(i.mosaic.id.toDTO().id),d=await m.getAssetAlias(p);e.assetId=d.toHex(),e.isSendWithNamespace=!0;let c=await m.getNamespacesName([p]);e.namespaceName=c[0].name}else{e.assetId=i.mosaic.id.toHex();let p=await m.getAssetsName([i.mosaic.id]);p[0].names.length&&(e.namespaceName=p[0].names[0].name)}e.namespaceName&&e.namespaceName===g.nativeToken.fullNamespace&&(e.namespaceName=g.nativeToken.label);let o=await m.getAssetInfo(e.assetId);o.divisibility>0&&(e.amount=m.convertToExactAmount(e.amount,o.divisibility)),e.amountIsRaw=!1}catch{}}else if(t[s].type===r.TransactionType.SECRET_PROOF){let i=t[s];e.secret=i.secret,e.recipient=i.recipient.plain(),e.hashType=M[i.hashType],e.proof=i.proof}a.push(e)}return a}async formatConfirmedSecretTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatConfirmedTransaction(t[s]),e=I.convertToSubClass(q,l);if(t[s].type===r.TransactionType.SECRET_LOCK){let i=t[s];e.duration=i.duration.compact(),e.secret=i.secret,e.recipient=i.recipient.plain(),e.amount=i.mosaic.amount.compact(),e.hashType=M[i.hashType];let n=m.isNamespace(i.mosaic.id),o=await m.getResolvedAsset(i.mosaic.id,e.block);e.assetId=o.toHex();try{if(n){e.isSendWithNamespace=!0;let d=new r.NamespaceId(i.mosaic.id.toDTO().id),c=await m.getNamespacesName([d]);e.namespaceName=c[0].name}else{let d=await m.getAssetsName([i.mosaic.id]);d[0].names.length&&(e.namespaceName=d[0].names[0].name)}e.namespaceName&&e.namespaceName===g.nativeToken.fullNamespace&&(e.namespaceName=g.nativeToken.label);let p=await m.getAssetInfo(e.assetId);p.divisibility>0&&(e.amount=m.convertToExactAmount(e.amount,p.divisibility)),e.amountIsRaw=!1}catch{}}else if(t[s].type===r.TransactionType.SECRET_PROOF){let i=t[s];e.secret=i.secret,e.recipient=i.recipient.plain(),e.hashType=M[i.hashType],e.proof=i.proof}a.push(e)}return a}async formatPartialSecretTransaction(t){let a=[];for(let s=0;s<t.length;++s){let l=await this.formatPartialTransaction(t[s]),e=v.convertToSubClass(Ce,l);if(t[s].type===r.TransactionType.SECRET_LOCK){let i=t[s];e.duration=i.duration.compact(),e.secret=i.secret,e.recipient=i.recipient.plain(),e.amount=i.mosaic.amount.compact(),e.hashType=M[i.hashType];let n=m.isNamespace(i.mosaic.id);try{if(n){let p=new r.NamespaceId(i.mosaic.id.toDTO().id),d=await m.getAssetAlias(p);e.assetId=d.toHex(),e.isSendWithNamespace=!0;let c=await m.getNamespacesName([p]);e.namespaceName=c[0].name}else{e.assetId=i.mosaic.id.toHex();let p=await m.getAssetsName([i.mosaic.id]);p[0].names.length&&(e.namespaceName=p[0].names[0].name)}e.namespaceName&&e.namespaceName===g.nativeToken.fullNamespace&&(e.namespaceName=g.nativeToken.label);let o=await m.getAssetInfo(e.assetId);o.divisibility>0&&(e.amount=m.convertToExactAmount(e.amount,o.divisibility)),e.amountIsRaw=!1}catch{}}else if(t[s].type===r.TransactionType.SECRET_PROOF){let i=t[s];e.secret=i.secret,e.recipient=i.recipient.plain(),e.hashType=M[i.hashType],e.proof=i.proof}a.push(e)}return a}async formatPartialTransaction(t){let a=t.transactionInfo,s=a instanceof r.AggregateTransactionInfo?a.aggregateHash:a.hash,l=t.signer.publicKey,e=new v(s);e.type=N.getTransactionTypeName(t.type),e.maxFee=a instanceof r.AggregateTransactionInfo?null:m.convertToExactNativeAmount(t.maxFee.compact()),e.signer=t.signer.publicKey,e.signerAddress=t.signer.address.plain();let i=null;if(a instanceof r.AggregateTransactionInfo)try{let n=await this.autoFindAggregateTransaction(s);i=n.deadline.adjustedValue.compact(),l=n.signer.publicKey}catch{}else i=t.deadline.adjustedValue.compact();if(e.deadline=i,e.initiator=l,t.type===r.TransactionType.AGGREGATE_BONDED_V1||t.type===r.TransactionType.AGGREGATE_COMPLETE_V1){let n=t;for(let o=0;o<n.cosignatures.length;++o)e.cosignedPublickKey.push(n.cosignatures[o].signer.publicKey)}return e}async formatUnconfirmedTransaction(t){let a=t.transactionInfo,s=a instanceof r.AggregateTransactionInfo?a.aggregateHash:a.hash,l=t.signer.publicKey,e=new w(s);e.type=N.getTransactionTypeName(t.type),e.maxFee=a instanceof r.AggregateTransactionInfo?null:m.convertToExactNativeAmount(t.maxFee.compact()),e.signer=t.signer.publicKey,e.signerAddress=t.signer.address.plain();let i=null;if(a instanceof r.AggregateTransactionInfo)try{let n=await this.autoFindAggregateTransaction(s);i=n.deadline.adjustedValue.compact(),l=n.signer.publicKey}catch{}else i=t.deadline.adjustedValue.compact();return e.deadline=i,e.initiator=l,e}async formatConfirmedTransaction(t){let a=t.transactionInfo,s=a instanceof r.AggregateTransactionInfo?a.aggregateHash:a.hash,l=0,e=0,i=null,n=t.signer.publicKey;if(a instanceof r.AggregateTransactionInfo)n=(await this.autoFindAggregateTransaction(s)).signer.publicKey,l=a.height.compact();else if(t.type===r.TransactionType.AGGREGATE_BONDED_V1||t.type===r.TransactionType.AGGREGATE_COMPLETE_V1){let c=t;c.innerTransactions.length===0&&(c=await this.autoFindAggregateTransaction(s)),l=c.transactionInfo.height.compact(),e=c.serialize().length/2,i=c.deadline.adjustedValue.compact()}else{l=a.height.compact();try{e=t.serialize().length/2}catch(c){console.log(c)}i=t.deadline.adjustedValue.compact()}let o=await g.chainAPI.blockAPI.getBlockByHeight(l),p=e*o.feeMultiplier,d=new I(s);return d.block=l,d.deadline=i,d.type=N.getTransactionTypeName(t.type),d.maxFee=a instanceof r.AggregateTransactionInfo?null:m.convertToExactNativeAmount(t.maxFee.compact()),d.signer=t.signer.publicKey,d.signerAddress=t.signer.address.plain(),d.initiator=n,d.fee=m.convertToExactNativeAmount(p),a instanceof r.AggregateTransactionInfo&&(d.fee=null),d.timestamp=new Date(o.timestamp.compact()+r.Deadline.timestampNemesisBlock*1e3).toISOString(),d}searchAggregateTransaction(t){let a=this.savedAggregateTxn.find(s=>s.transactionInfo.hash===t);return a||null}async autoFindAggregateTransaction(t){let a=this.searchAggregateTransaction(t);if(a)return a;let s="",l=null;for(;l===null&&s!=="confirmed"&&s!=="error";)try{switch(s=(await g.chainAPI.transactionAPI.getTransactionStatus(t)).group,s){case r.TransactionGroupType.CONFIRMED:try{l=await g.chainAPI.transactionAPI.getTransaction(t)}catch{s="error"}break;case r.TransactionGroupType.UNCONFIRMED:try{l=await g.chainAPI.transactionAPI.getUnconfirmedTransaction(t)}catch{}break;case r.TransactionGroupType.PARTIAL:try{l=await g.chainAPI.transactionAPI.getPartialTransaction(t)}catch{}break;default:s="error";break}}catch{s="error"}if(s==="error"||l===null)return null;{let e=l;return this.addAggregateTxns(e),e}}addAggregateTxns(t){return this.savedAggregateTxn.find(s=>s.transactionInfo.hash===s.transactionInfo.hash)?!1:(this.savedAggregateTxn.push(t),!0)}static applyValueChange(t,a,s){let l=r.Convert.utf8ToHex(t).length/2+s,e=r.Convert.hexToUint8(r.Convert.utf8ToHex(t)),i=r.Convert.hexToUint8(a),n=new Uint8Array(l);for(let o=0;o<n.length;++o)n[o]=e[o]^i[o];return r.Convert.decodeHexToUtf8(r.Convert.uint8ArrayToHex(n))}static async getAssetInfo(t){let a=new r.MosaicId(t);return await g.chainAPI.assetAPI.getMosaic(a)}static async getAssetName(t){let a=new r.MosaicId(t);return(await g.chainAPI.assetAPI.getMosaicsNames([a]))[0]}static async getAssetsName(t){return await g.chainAPI.assetAPI.getMosaicsNames(t)}static async getNamespacesName(t){return await g.chainAPI.namespaceAPI.getNamespacesName(t)}static async getAddressAlias(t){return await g.chainAPI.namespaceAPI.getLinkedAddress(t)}static async getAssetAlias(t){return await g.chainAPI.namespaceAPI.getLinkedMosaicId(t)}static async getAssetMetadata(t,a){let s=new r.MetadataQueryParams;s.metadataType=r.MetadataType.MOSAIC,s.scopedMetadataKey=a,s.targetId=t;let l=await g.chainAPI.metadataAPI.searchMetadatas(s);return l.metadataEntries.length?l.metadataEntries[0]:null}static async getNamespaceMetadata(t,a){let s=new r.MetadataQueryParams;s.metadataType=r.MetadataType.NAMESPACE,s.scopedMetadataKey=a,s.targetId=t;let l=await g.chainAPI.metadataAPI.searchMetadatas(s);return l.metadataEntries.length?l.metadataEntries[0]:null}static async getAccountMetadata(t,a){let s=new r.MetadataQueryParams;s.metadataType=r.MetadataType.ACCOUNT,s.scopedMetadataKey=a,s.targetKey=t;let l=await g.chainAPI.metadataAPI.searchMetadatas(s);return l.metadataEntries.length?l.metadataEntries[0]:null}static async getRecipient(t,a){let s=null;if(t.recipient instanceof r.NamespaceId){let l=await g.chainAPI.blockAPI.getBlockReceipts(a);for(let e=0;e<l.addressResolutionStatements.length;++e){let i=l.addressResolutionStatements[e].unresolved,n=l.addressResolutionStatements[e].resolutionEntries[0].resolved;if(i instanceof r.MosaicId){let o=i.toHex();if(t.recipient.toHex()!==o)continue;if(n instanceof r.AddressAlias){s=n.address;break}else continue}else continue}}else s=t.recipient;return s}static isNamespace(t){return Array.from(Oe).includes(t.toHex().toUpperCase().substring(0,1))}static async getResolvedAsset(t,a){let s=null;if(m.isNamespace(t)){let l=await g.chainAPI.blockAPI.getBlockReceipts(a);for(let e=0;e<l.mosaicResolutionStatements.length;++e){let i=l.mosaicResolutionStatements[e].unresolved,n=l.mosaicResolutionStatements[e].resolutionEntries[0].resolved;if(i instanceof r.MosaicId){let o=i.toHex();if(t.toHex()!==o)continue;if(n instanceof r.MosaicAlias){s=n.mosaicId;break}else continue}else continue}}else s=t;return s}static getRestrictionTypeName(t){let a={action:"",type:""};switch(t){case r.RestrictionType.AllowAddress:a.action="Allow",a.type="Address";break;case r.RestrictionType.BlockAddress:a.action="Block",a.type="Address";break;case r.RestrictionType.AllowMosaic:a.action="Allow",a.type="SDA";break;case r.RestrictionType.BlockMosaic:a.action="Block",a.type="SDA";break;case r.RestrictionType.AllowTransaction:a.action="Allow",a.type="Transaction Type";break;case r.RestrictionType.BlockTransaction:a.action="Block",a.type="Transaction Type";break}return a}async getAllAccountTransactions(){let t=[];for(let a=0;a<this.wallet.accounts.length;++a){let s=await m.getAccountAllTransactions(this.wallet.accounts[a]);t=t.concat(s)}for(let a=0;a<this.wallet.others.length;++a){let s=await m.getAccountAllTransactions(this.wallet.others[a]);t=t.concat(s)}return t.filter((a,s,l)=>s===l.findIndex(e=>e.transactionInfo.id===a.transactionInfo.id))}async getAllAccountUnconfirmedTransactions(){let t=[];for(let a=0;a<this.wallet.accounts.length;++a){let s=await m.getAccountAllUnconfirmedTransactions(this.wallet.accounts[a]);t=t.concat(s)}for(let a=0;a<this.wallet.others.length;++a){let s=await m.getAccountAllUnconfirmedTransactions(this.wallet.others[a]);t=t.concat(s)}return t.filter((a,s,l)=>s===l.findIndex(e=>e.transactionInfo.id===a.transactionInfo.id))}async getAllAccountPartialTransactions(){let t=[];for(let a=0;a<this.wallet.accounts.length;++a){let s=await m.getAccountAllPartialTransactions(this.wallet.accounts[a]);t=t.concat(s)}for(let a=0;a<this.wallet.others.length;++a){let s=await m.getAccountAllPartialTransactions(this.wallet.others[a]);t=t.concat(s)}return t.filter((a,s,l)=>s===l.findIndex(e=>e.transactionInfo.id===a.transactionInfo.id))}static async getAccountAllTransactions(t){let a=1,s=E.createPublicAccount(t.publicKey,g.networkType),l=[],e=new r.TransactionQueryParams;e.pageSize=100,e.pageNumber=a;let i=await N.getTransactions(s,e);for(l=l.concat(i);i.length===100;)a+=1,e.pageNumber=a,i[i.length-1].transactionInfo.id,i=await N.getTransactions(s,e),l=l.concat(i);return l}static async getAccountAllUnconfirmedTransactions(t){let a=1,s=E.createPublicAccount(t.publicKey,g.networkType),l=[],e=new r.TransactionQueryParams;e.pageSize=100,e.pageNumber=a;let i=await N.getUnconfirmedTransactions(s,e);for(l=l.concat(i);i.length===100;)a+=1,e.pageNumber=a,i[i.length-1].transactionInfo.id,i=await N.getUnconfirmedTransactions(s,e),l=l.concat(i);return l}static async getAccountAllPartialTransactions(t){let a=1,s=E.createPublicAccount(t.publicKey,g.networkType),l=[],e=new r.TransactionQueryParams;e.pageSize=100,e.pageNumber=a;let i=await N.getPartialTransactions(s,e);if(i)for(l=l.concat(i);i&&i.length===100;)a+=1,e.pageNumber=a,i[i.length-1].transactionInfo.id,i=await N.getPartialTransactions(s,e),i&&(l=l.concat(i));return l}async getAccountTransactionsCount(t){let a={confirmed:0,unconfirmed:0,partial:0},s=new r.TransactionQueryParams;s.address=t.address;let l=await g.chainAPI.transactionAPI.searchTransactions(r.TransactionGroupType.CONFIRMED,s),e=await g.chainAPI.transactionAPI.searchTransactions(r.TransactionGroupType.UNCONFIRMED,s),i=await g.chainAPI.transactionAPI.searchTransactions(r.TransactionGroupType.PARTIAL,s);return a.confirmed=l.pagination.totalEntries,a.unconfirmed=e.pagination.totalEntries,a.partial=i.pagination.totalEntries,a}convertToSwapType(t){let a=null;try{if(t){let s=JSON.parse(t);if(s.type)switch(s.type){case"Swap":a="Swap (nis1-XPX)";break;case"Swap-bsc-xpx":a="Swap (BSC-XPX)";break;case"Swap-xpx-bsc":a="Swap (XPX-BSC)";break;case"Swap-xpx-bsc-fees":a="Swap Fee (XPX-BSC)";break;default:break}}}catch{}return a}async extractConfirmedTransfer(t,a){let s=new V;s.signer=t.signer.publicKey,s.signerAddress=t.signer.address.plain(),s.type=N.getTransactionTypeName(t.type);let l=[];if(s.message=t.message.payload,s.messageType=t.message.type,s.messageType===r.MessageType.PlainMessage){let o=this.convertToSwapType(s.message);o&&(s.type=o)}switch(s.messageType){case r.MessageType.PlainMessage:s.messageTypeTitle="Plain Message";break;case r.MessageType.EncryptedMessage:s.messageTypeTitle="Encrypted Message";break;case r.MessageType.HexadecimalMessage:s.messageTypeTitle="Hexadecimal Message";break}if(t.recipient instanceof r.NamespaceId,t.recipient instanceof r.NamespaceId){s.recipientNamespaceId=t.recipient.toHex();let o=await m.getNamespacesName([t.recipient]);s.recipientNamespaceName=o[0].name}let e=await m.getRecipient(t,a);s.recipient=e.plain(),s.sender=t.signer.address.plain(),s.in_out=this.selectedAccount.address!==s.sender;for(let o=0;o<t.mosaics.length;++o){let p=t.mosaics[o].amount.compact(),d=p,c=m.isNamespace(t.mosaics[o].id),T=(await m.getResolvedAsset(t.mosaics[o].id,a)).toHex();if([g.nativeToken.assetId,O.value].includes(T)){s.amountTransfer=m.convertToExactNativeAmount(d);continue}let u={amount:p,divisibility:0,id:T,amountIsRaw:!0,sendWithNamespace:c};if(c){let h=t.mosaics[o].id;u.sendWithAlias={idHex:h.toHex(),id:h.toDTO().id}}l.push(u)}let i=l.filter(o=>o.sendWithNamespace).map(o=>E.createNamespaceId(o.sendWithAlias.id)),n=l.filter(o=>o.amountIsRaw).map(o=>E.createAssetId(o.id));if(i.length||n.length){let o=[];o=await g.chainAPI.namespaceAPI.getNamespacesName(i);let p=await g.chainAPI.assetAPI.getMosaics(n),d=await g.chainAPI.assetAPI.getMosaicsNames(n);for(let c=0;c<l.length;++c){let y=p.filter(h=>h.mosaicId.toHex()===l[c].id)[0];l[c].divisibility=y.divisibility,l[c].amount=m.convertToExactAmount(l[c].amount,y.divisibility),l[c].amountIsRaw=!1;let u=d.filter(h=>h.mosaicId.toHex()===l[c].id)[0].names;l[c].currentAlias=u.map(h=>({name:h.name,id:h.namespaceId.toDTO().id,idHex:h.namespaceId.toHex()})),l[c].sendWithAlias&&(l[c].sendWithAlias.name=o.filter(h=>h.namespaceId.toHex()===l[c].sendWithAlias.idHex).map(h=>h.name)[0])}}return s.sda=l,s}async extractUnconfirmedTransfer(t){let a=await this.extractPartialTransfer(t);if(a.messageType===r.MessageType.PlainMessage){let s=this.convertToSwapType(a.message);s&&(a.type=s)}return a}async extractPartialTransfer(t){let a=new V;a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type);let s=[];switch(a.message=t.message.payload,a.messageType=t.message.type,a.messageType){case r.MessageType.PlainMessage:a.messageTypeTitle="Plain Message";break;case r.MessageType.EncryptedMessage:a.messageTypeTitle="Encrypted Message";break;case r.MessageType.HexadecimalMessage:a.messageTypeTitle="Hexadecimal Message";break}t.recipient instanceof r.NamespaceId;let l;if(t.recipient instanceof r.NamespaceId){a.recipientNamespaceId=t.recipient.toHex(),l=await m.getAddressAlias(t.recipient);let n=await m.getNamespacesName([t.recipient]);a.recipientNamespaceName=n[0].name}else l=t.recipient;a.recipient=l.plain(),a.sender=t.signer.address.plain(),a.in_out=this.selectedAccount.address!==a.sender;for(let n=0;n<t.mosaics.length;++n){let o=t.mosaics[n].amount.compact(),p=o,d,c=m.isNamespace(t.mosaics[n].id);if(c){let u=new r.NamespaceId(t.mosaics[n].id.toDTO().id);d=await m.getAssetAlias(u)}else d=t.mosaics[n].id;let y=d.toHex();if([g.nativeToken.assetId,O.value].includes(y)){a.amountTransfer=m.convertToExactNativeAmount(p);continue}let T={amount:o,divisibility:0,id:y,amountIsRaw:!0,sendWithNamespace:c};if(c){let u=t.mosaics[n].id;T.sendWithAlias={idHex:u.toHex(),id:u.toDTO().id}}s.push(T)}let e=s.filter(n=>n.sendWithNamespace).map(n=>E.createNamespaceId(n.sendWithAlias.id)),i=s.filter(n=>n.amountIsRaw).map(n=>E.createAssetId(n.id));if(e.length||i.length){let n=[];n=await g.chainAPI.namespaceAPI.getNamespacesName(e);let o=await g.chainAPI.assetAPI.getMosaics(i),p=await g.chainAPI.assetAPI.getMosaicsNames(i);for(let d=0;d<s.length;++d){let c=o.filter(u=>u.mosaicId.toHex()===s[d].id)[0];s[d].divisibility=c.divisibility,s[d].amount=m.convertToExactAmount(s[d].amount,c.divisibility),s[d].amountIsRaw=!1;let T=p.filter(u=>u.mosaicId.toHex()===s[d].id)[0].names;s[d].currentAlias=T.map(u=>({name:u.name,id:u.namespaceId.toDTO().id,idHex:u.namespaceId.toHex()})),s[d].sendWithAlias&&(s[d].sendWithAlias.name=n.filter(u=>u.namespaceId.toHex()===s[d].sendWithAlias.idHex).map(u=>u.name)[0])}}return a.sda=s,a}async extractNonconfirmedTransfer(t,a=r.TransactionGroupType.UNCONFIRMED){return a===r.TransactionGroupType.UNCONFIRMED?await this.extractUnconfirmedTransfer(t):await this.extractPartialTransfer(t)}async extractConfirmedModifyMultisig(t){let a=new S;return a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type),a.approvalDelta=t.minApprovalDelta,a.removalDelta=t.minRemovalDelta,a.addedCosigner=t.modifications.filter(s=>s.type===r.MultisigCosignatoryModificationType.Add).map(s=>s.cosignatoryPublicAccount.publicKey),a.removedCosigner=t.modifications.filter(s=>s.type===r.MultisigCosignatoryModificationType.Remove).map(s=>s.cosignatoryPublicAccount.publicKey),a}async extractUnconfirmedModifyMultisig(t){return await this.extractPartialModifyMultisig(t)}async extractPartialModifyMultisig(t){let a=new S;a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type),a.approvalDelta=t.minApprovalDelta,a.removalDelta=t.minRemovalDelta,a.addedCosigner=t.modifications.filter(s=>s.type===r.MultisigCosignatoryModificationType.Add).map(s=>s.cosignatoryPublicAccount.publicKey),a.removedCosigner=t.modifications.filter(s=>s.type===r.MultisigCosignatoryModificationType.Remove).map(s=>s.cosignatoryPublicAccount.publicKey);try{let s=await g.chainAPI.accountAPI.getMultisigAccountInfo(t.signer.address);s&&(a.oldApprovalNumber=s.minApproval,a.oldRemovalNumber=s.minRemoval)}catch{a.oldApprovalNumber=0,a.oldRemovalNumber=0}return a}async extractModifyMultisig(t,a=r.TransactionGroupType.CONFIRMED){return a===r.TransactionGroupType.CONFIRMED?await this.extractConfirmedModifyMultisig(t):a===r.TransactionGroupType.UNCONFIRMED?await this.extractUnconfirmedModifyMultisig(t):await this.extractPartialModifyMultisig(t)}async extractAddressAlias(t){let a=new L;a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type),a.address=t.address.plain(),a.aliasType=t.actionType,a.aliasTypeName=t.actionType===r.AliasActionType.Link?"Link":"Unlink";let s=t.namespaceId;try{let l=await m.getNamespacesName([s]);a.aliasName=l[0].name}catch{}return a}async extractAssetAlias(t){let a=new L;a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type),a.assetId=t.mosaicId.toHex(),a.aliasType=t.actionType,a.aliasTypeName=t.actionType===r.AliasActionType.Link?"Link":"Unlink";let s=t.namespaceId;try{let l=await m.getNamespacesName([s]);a.aliasName=l[0].name}catch{}return a}async extractConfirmedAccountMetadata(t){let a=new x;return a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type),a.metadataType=r.MetadataType.ACCOUNT,a.metadataTypeName="Account",a.scopedMetadataKey=t.scopedMetadataKey.toHex(),a.targetPublicKey=t.targetPublicKey.publicKey,a.sizeChanged=t.valueSizeDelta,a}async extractUnconfirmedAccountMetadata(t){return await this.extractPartialAccountMetadata(t)}async extractPartialAccountMetadata(t){let a=new x;a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type),a.metadataType=r.MetadataType.ACCOUNT,a.metadataTypeName="Account",a.scopedMetadataKey=t.scopedMetadataKey.toHex(),a.targetPublicKey=t.targetPublicKey.publicKey,a.sizeChanged=t.valueSizeDelta,a.valueChange=r.Convert.uint8ArrayToHex(t.valueDifferences);try{let s=await m.getAccountMetadata(t.targetPublicKey,t.scopedMetadataKey);s?(a.oldValue=s.value,a.newValue=m.applyValueChange(a.oldValue,a.valueChange,a.sizeChanged)):a.newValue=m.applyValueChange("",a.valueChange,a.sizeChanged)}catch{}return a}async extractAccMetadata(t,a=r.TransactionGroupType.CONFIRMED){return a===r.TransactionGroupType.CONFIRMED?await this.extractConfirmedAccountMetadata(t):a===r.TransactionGroupType.UNCONFIRMED?await this.extractUnconfirmedAccountMetadata(t):await this.extractPartialAccountMetadata(t)}async extractConfirmedNamespaceMetadata(t){let a=new x;a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type);let s=t.targetNamespaceId.toHex();a.metadataType=r.MetadataType.NAMESPACE,a.metadataTypeName="Namespace",a.scopedMetadataKey=t.scopedMetadataKey.toHex(),a.targetId=s,a.targetPublicKey=t.targetPublicKey.publicKey,a.sizeChanged=t.valueSizeDelta;try{let l=await m.getNamespacesName([r.NamespaceId.createFromEncoded(s)]);l.length&&(a.targetIdName=l[0].name)}catch{}return a}async extractUnconfirmedNamespaceMetadata(t){return await this.extractPartialNamespaceMetadata(t)}async extractPartialNamespaceMetadata(t){let a=new x;a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type);let s=t.targetNamespaceId.toHex();a.metadataType=r.MetadataType.NAMESPACE,a.metadataTypeName="Namespace",a.scopedMetadataKey=t.scopedMetadataKey.toHex(),a.targetId=s,a.targetPublicKey=t.targetPublicKey.publicKey,a.sizeChanged=t.valueSizeDelta,a.valueChange=r.Convert.uint8ArrayToHex(t.valueDifferences);try{let l=await m.getNamespacesName([r.NamespaceId.createFromEncoded(s)]);l.length&&(a.targetIdName=l[0].name);let e=await m.getNamespaceMetadata(t.targetNamespaceId,t.scopedMetadataKey);e?(a.oldValue=e.value,a.newValue=m.applyValueChange(a.oldValue,a.valueChange,a.sizeChanged)):a.newValue=m.applyValueChange("",a.valueChange,a.sizeChanged)}catch{}return a}async extractNamespaceMetadata(t,a=r.TransactionGroupType.CONFIRMED){return a===r.TransactionGroupType.CONFIRMED?await this.extractConfirmedNamespaceMetadata(t):a===r.TransactionGroupType.UNCONFIRMED?await this.extractUnconfirmedNamespaceMetadata(t):await this.extractPartialNamespaceMetadata(t)}async extractConfirmedAssetMetadata(t){let a=new x;a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type);let s=t.targetMosaicId.toHex();a.metadataType=r.MetadataType.MOSAIC,a.metadataTypeName="Asset",a.scopedMetadataKey=t.scopedMetadataKey.toHex(),a.targetId=s,a.targetPublicKey=t.targetPublicKey.publicKey,a.sizeChanged=t.valueSizeDelta;try{let l=await m.getAssetName(s);l.names.length&&(a.targetIdName=l.names[0].name)}catch{}return a}async extractUnconfirmedAssetMetadata(t){return await this.extractPartialAssetMetadata(t)}async extractPartialAssetMetadata(t){let a=new x;a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type);let s=t.targetMosaicId.toHex();a.metadataType=r.MetadataType.MOSAIC,a.metadataTypeName="Asset",a.scopedMetadataKey=t.scopedMetadataKey.toHex(),a.targetId=s,a.targetPublicKey=t.targetPublicKey.publicKey,a.sizeChanged=t.valueSizeDelta,a.valueChange=r.Convert.uint8ArrayToHex(t.valueDifferences);try{let l=await m.getAssetName(s);l.names.length&&(a.targetIdName=l.names[0].name);let e=await m.getAssetMetadata(t.targetMosaicId,t.scopedMetadataKey);e?(a.oldValue=e.value,a.newValue=m.applyValueChange(a.oldValue,a.valueChange,a.sizeChanged)):a.newValue=m.applyValueChange("",a.valueChange,a.sizeChanged)}catch{}return a}async extractAssetMetadata(t,a=r.TransactionGroupType.CONFIRMED){return a===r.TransactionGroupType.CONFIRMED?await this.extractConfirmedAssetMetadata(t):a===r.TransactionGroupType.UNCONFIRMED?await this.extractUnconfirmedAssetMetadata(t):await this.extractPartialAssetMetadata(t)}extractSecretProof(t){let a=new H;return a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type),a.secret=t.secret,a.recipient=t.recipient.plain(),a.hashType=M[t.hashType],a.proof=t.proof,a}async extractConfirmedSecretLock(t,a){let s=new H;s.signer=t.signer.publicKey,s.signerAddress=t.signer.address.plain(),s.type=N.getTransactionTypeName(t.type),s.duration=t.duration.compact(),s.secret=t.secret,s.recipient=t.recipient.plain(),s.amount=t.mosaic.amount.compact(),s.hashType=M[t.hashType];let l=m.isNamespace(t.mosaic.id),e=await m.getResolvedAsset(t.mosaic.id,a);s.assetId=e.toHex();try{if(l){s.isSendWithNamespace=!0;let n=new r.NamespaceId(t.mosaic.id.toDTO().id),o=await m.getNamespacesName([n]);s.namespaceName=o[0].name}else{let n=await m.getAssetsName([t.mosaic.id]);n[0].names.length&&(s.namespaceName=n[0].names[0].name)}s.namespaceName&&s.namespaceName===g.nativeToken.fullNamespace&&(s.namespaceName=g.nativeToken.label);let i=await m.getAssetInfo(s.assetId);i.divisibility>0&&(s.amount=m.convertToExactAmount(s.amount,i.divisibility)),s.amountIsRaw=!1}catch{}return s}async extractUnconfirmedSecretLock(t){return this.extractPartialSecretLock(t)}async extractPartialSecretLock(t){let a=new H;a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type),a.duration=t.duration.compact(),a.secret=t.secret,a.recipient=t.recipient.plain(),a.amount=t.mosaic.amount.compact(),a.hashType=M[t.hashType];let s=m.isNamespace(t.mosaic.id);try{if(s){let e=new r.NamespaceId(t.mosaic.id.toDTO().id),i=await m.getAssetAlias(e);a.assetId=i.toHex(),a.isSendWithNamespace=!0;let n=await m.getNamespacesName([e]);a.namespaceName=n[0].name}else{a.assetId=t.mosaic.id.toHex();let e=await m.getAssetsName([t.mosaic.id]);e[0].names.length&&(a.namespaceName=e[0].names[0].name)}a.namespaceName&&a.namespaceName===g.nativeToken.fullNamespace&&(a.namespaceName=g.nativeToken.label);let l=await m.getAssetInfo(a.assetId);l.divisibility>0&&(a.amount=m.convertToExactAmount(a.amount,l.divisibility)),a.amountIsRaw=!1}catch{}return a}async extractNonconfirmedSecretLock(t,a=r.TransactionGroupType.UNCONFIRMED){return a===r.TransactionGroupType.UNCONFIRMED?await this.extractUnconfirmedSecretLock(t):await this.extractPartialSecretLock(t)}async extractRegisterNamespace(t){let a=new Me;if(a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type),a.namespaceName=t.namespaceName,t.namespaceType===r.NamespaceType.RootNamespace){a.duration=t.duration.compact(),a.registerType=r.NamespaceType.RootNamespace,a.registerTypeName="Root namespace";try{let s=await g.chainAPI.namespaceAPI.getNamespace(t.namespaceId);a.isExtend=!0}catch{}}else{a.registerType=r.NamespaceType.SubNamespace,a.registerTypeName="Sub namespace",a.parentId=t.parentId.toHex();let s=await m.getNamespacesName([t.parentId]);a.parentName=s[0].name}return a.namespaceId=t.namespaceId.toHex(),a}extractAssetDefinition(t){let a=new b;return a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type),a.assetId=t.mosaicId.toHex(),a.divisibility=t.mosaicProperties.divisibility,a.duration=t.mosaicProperties.duration?t.mosaicProperties.duration.compact():void 0,a.transferable=t.mosaicProperties.transferable,a.supplyMutable=t.mosaicProperties.supplyMutable,a.nonce=t.mosaicNonce.toNumber(),a}async extractAssetSupplyChange(t){let a=new b;a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type);let s=t.mosaicId.toHex();a.assetId=s,a.supplyDelta=t.delta.compact(),a.supplyDeltaIsRaw=!0,t.direction===r.MosaicSupplyType.Decrease&&(a.supplyDelta=-a.supplyDelta);try{let l=await m.getAssetInfo(s);a.supplyDelta=m.convertToExactAmount(a.supplyDelta,l.divisibility),a.supplyDeltaIsRaw=!1}catch{}return a}async extractAssetModifyLevy(t){let a=new b;a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type);let s=t.mosaicId.toHex(),l=t.mosaicLevy.mosaicId.toHex(),e=t.mosaicLevy.fee.compact();a.assetId=s,a.levyAssetId=l,a.levyAssetAmount=e,a.levyAssetAmountIsRaw=!0,a.levyType=t.mosaicLevy.type,a.levyRecipient=t.mosaicLevy.recipient.plain();try{let i=await m.getAssetName(s);i.names.length&&(a.namespaceName=i.names[0].name);let n=await m.getAssetInfo(l);a.levyAssetAmount=m.convertToExactAmount(e,n.divisibility),a.levyAssetAmountIsRaw=!1;let o=await m.getAssetName(l);o.names.length&&(a.levyAssetName=o.names[0].name)}catch{}return a}async extractAssetRemoveLevy(t){let a=new b;a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type);let s=t.mosaicId.toHex();a.assetId=s;try{let l=await m.getAssetName(s);l.names.length&&(a.namespaceName=l.names[0].name)}catch{}return a}extractAccOperationRestriction(t){let a=new k;a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type),a.restrictionTypeOutput=m.getRestrictionTypeName(t.restrictionType).action;for(let e=0;e<t.modifications.length;++e){let i=t.modifications[e],n={action:i.modificationType===r.RestrictionModificationType.Add?"Add":"Remove",value:N.getTransactionTypeNameByEnum(i.value)};a.modification.push(n)}let s=a.modification.filter(e=>e.action==="Add"),l=a.modification.filter(e=>e.action==="Remove");return a.modification=s.concat(l),a}extractAccAddressRestriction(t){let a=new k;a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type),a.restrictionTypeOutput=m.getRestrictionTypeName(t.restrictionType).action;for(let e=0;e<t.modifications.length;++e){let i=t.modifications[e],n={action:i.modificationType===r.RestrictionModificationType.Add?"Add":"Remove",value:i.value};a.modification.push(n)}let s=a.modification.filter(e=>e.action==="Add"),l=a.modification.filter(e=>e.action==="Remove");return a.modification=s.concat(l),a}async extractAccAssetRestriction(t){let a=new k;a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type),a.restrictionTypeOutput=m.getRestrictionTypeName(t.restrictionType).action;for(let e=0;e<t.modifications.length;++e){let i=t.modifications[e],n={action:i.modificationType===r.RestrictionModificationType.Add?"Add":"Remove",value:new r.MosaicId(i.value).toHex()};try{let o=n.value;if(o===g.nativeToken.assetId)n.name=g.nativeToken.label;else{let p=await m.getAssetName(o);p.names.length&&(n.name=p.names[0].name)}}catch{}a.modification.push(n)}let s=a.modification.filter(e=>e.action==="Add"),l=a.modification.filter(e=>e.action==="Remove");return a.modification=s.concat(l),a}async extractConfirmedLockHash(t){let a=new G;a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type),a.lockHash=t.hash,a.duration=t.duration.compact();let s=t.mosaic.amount.compact();a.amountLocking=g.nativeToken.divisibility?s/Math.pow(10,g.nativeToken.divisibility):s;try{let l=await g.chainAPI.transactionAPI.getTransactionStatus(t.hash);a.isRefunded=l.group===r.TransactionGroupType.CONFIRMED}catch{a.isRefunded=!1}return a}extractUnconfirmedLockHash(t){return this.extractPartialLockHash(t)}extractPartialLockHash(t){let a=new G;a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type),a.lockHash=t.hash,a.duration=t.duration.compact();let s=t.mosaic.amount.compact();return a.amountLocking=g.nativeToken.divisibility?s/Math.pow(10,g.nativeToken.divisibility):s,a}async extractLockHash(t,a=r.TransactionGroupType.CONFIRMED){return a===r.TransactionGroupType.CONFIRMED?await this.extractConfirmedLockHash(t):a===r.TransactionGroupType.UNCONFIRMED?this.extractUnconfirmedLockHash(t):this.extractPartialLockHash(t)}extractAccountLink(t){let a=new xe;return a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type),a.action=t.linkAction===r.LinkAction.Link?"Link":"Unlink",a.remotePublicKey=t.remoteAccountKey,a}extractChainUpgrade(t){let a=new U;return a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type),a.upgradePeriod=t.upgradePeriod.compact(),a.newVersion=t.newBlockchainVersion.toHex(),a}extractChainConfig(t){let a=new U;return a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type),a.applyHeightDelta=t.applyHeightDelta.compact(),a}async extractAddExchangeOffer(t){let a=new K;a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type);for(let e=0;e<t.offers.length;++e){let i=t.offers[e],n=i.mosaicId.toHex(),o=i.mosaicAmount.compact(),p={amount:o,amountIsRaw:!0,assetId:n,cost:m.convertToExactNativeAmount(i.cost.compact()),duration:i.duration.compact(),type:i.type===r.ExchangeOfferType.SELL_OFFER?"Sell":"Buy"};try{let d=await m.getAssetInfo(n);p.amountIsRaw=!1,p.amount=m.convertToExactAmount(o,d.divisibility);let c=await m.getAssetName(n);c.names.length&&(p.assetNamespace=c.names[0].name)}catch{}a.exchangeOffers.push(p)}let s=a.exchangeOffers.filter(e=>e.type==="Buy"),l=a.exchangeOffers.filter(e=>e.type==="Sell");return a.exchangeOffers=a.isTakingOffer?l.concat(s):s.concat(l),a}async extractRemoveExchangeOffer(t){let a=new K;a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type);for(let e=0;e<t.offers.length;++e){let i=t.offers[e],n=i.mosaicId.toHex(),o={assetId:n,type:i.offerType===r.ExchangeOfferType.SELL_OFFER?"Sell":"Buy"};try{let p=await m.getAssetName(n);p.names.length&&(o.assetNamespace=p.names[0].name)}catch{}a.exchangeOffers.push(o)}let s=a.exchangeOffers.filter(e=>e.type==="Buy"),l=a.exchangeOffers.filter(e=>e.type==="Sell");return a.exchangeOffers=a.isTakingOffer?l.concat(s):s.concat(l),a}async extractExchangeOffer(t){let a=new K;a.signer=t.signer.publicKey,a.signerAddress=t.signer.address.plain(),a.type=N.getTransactionTypeName(t.type),a.isTakingOffer=!0;for(let e=0;e<t.offers.length;++e){let i=t.offers[e],n=i.mosaicId.toHex(),o=i.mosaicAmount.compact(),p={amount:o,amountIsRaw:!0,assetId:n,cost:m.convertToExactNativeAmount(i.cost.compact()),owner:i.owner.publicKey,type:i.type===r.ExchangeOfferType.SELL_OFFER?"Sell":"Buy"};try{let d=await m.getAssetInfo(n);p.amountIsRaw=!1,p.amount=m.convertToExactAmount(o,d.divisibility);let c=await m.getAssetName(n);c.names.length&&(p.assetNamespace=c.names[0].name)}catch{}a.exchangeOffers.push(p)}let s=a.exchangeOffers.filter(e=>e.type==="Buy"),l=a.exchangeOffers.filter(e=>e.type==="Sell");return a.exchangeOffers=a.isTakingOffer?l.concat(s):s.concat(l),a}async extractPartialInnerTransaction(t){let a,s;switch(t.type){case r.TransactionType.ADDRESS_ALIAS:{let l=t;s=await this.extractAddressAlias(l);let e=s,i=[],n={type:0,label:"Namespace",value:e.aliasName};i.push(n);let o={type:0,label:"Action",value:e.aliasTypeName};i.push(o);let p={type:0,label:"Address",value:e.address};i.push(p),a={signer:e.signer,signerAddressPlain:e.signerAddress,signerAddressPretty:r.Address.createFromRawAddress(e.signerAddress).pretty(),infos:i,sdas:[],legendType:0,typeName:e.type}}break;case r.TransactionType.MOSAIC_ALIAS:{let l=t;s=await this.extractAssetAlias(l);let e=s,i=[],n={type:0,label:"Namespace",value:e.aliasName};i.push(n);let o={type:0,label:"Action",value:e.aliasTypeName};i.push(o);let p={type:0,label:"Asset",value:e.assetId};i.push(p),a={signer:e.signer,signerAddressPlain:e.signerAddress,signerAddressPretty:r.Address.createFromRawAddress(e.signerAddress).pretty(),infos:i,sdas:[],legendType:0,typeName:e.type}}break;case r.TransactionType.ADD_EXCHANGE_OFFER:{let l=t;s=await this.extractAddExchangeOffer(l);let e=s,i=[];for(let n=0;n<e.exchangeOffers.length;++n){let o=e.exchangeOffers[n],p=`${o.amount} ${o.assetId}`+o.assetNamespace?` (${o.assetNamespace})`:"",d=`${o.cost} ${g.nativeToken.label}`,c={type:o.type==="Buy"?1:2,value:d+" - "+p+`. Duration: ${o.duration}`};i.push(c)}a={signer:e.signer,signerAddressPlain:e.signerAddress,signerAddressPretty:r.Address.createFromRawAddress(e.signerAddress).pretty(),infos:i,sdas:[],legendType:3,typeName:e.type}}break;case r.TransactionType.EXCHANGE_OFFER:{let l=t;s=await this.extractExchangeOffer(l);let e=s,i=[];for(let n=0;n<e.exchangeOffers.length;++n){let o=e.exchangeOffers[n],p=`${o.amount} ${o.assetId}`+o.assetNamespace?` (${o.assetNamespace})`:"",d=`${o.cost} ${g.nativeToken.label}`,c=r.PublicAccount.createFromPublicKey(o.owner,g.networkType),y=this.wallet.convertAddressToName(c.address.plain()),T={type:o.type==="Buy"?2:1,value:d+" - "+p+`. From: ${y}`};i.push(T)}a={signer:e.signer,signerAddressPlain:e.signerAddress,signerAddressPretty:r.Address.createFromRawAddress(e.signerAddress).pretty(),infos:i,sdas:[],legendType:3,typeName:e.type}}break;case r.TransactionType.REMOVE_EXCHANGE_OFFER:{let l=t;s=await this.extractRemoveExchangeOffer(l);let e=s,i=[];for(let n=0;n<e.exchangeOffers.length;++n){let o=e.exchangeOffers[n],p=`${o.assetId}`+o.assetNamespace?` (${o.assetNamespace})`:"",d={type:o.type==="Buy"?1:2,value:p};i.push(d)}a={signer:e.signer,signerAddressPlain:e.signerAddress,signerAddressPretty:r.Address.createFromRawAddress(e.signerAddress).pretty(),infos:i,sdas:[],legendType:3,typeName:e.type}}break;case r.TransactionType.CHAIN_CONFIGURE:{let l=t;s=this.extractChainConfig(l);let e=s,i=[],n={type:0,label:"Apply after blocks",value:e.applyHeightDelta};i.push(n),a={signer:e.signer,signerAddressPlain:e.signerAddress,signerAddressPretty:r.Address.createFromRawAddress(e.signerAddress).pretty(),infos:i,sdas:[],legendType:0,typeName:e.type}}break;case r.TransactionType.CHAIN_UPGRADE:{let l=t;s=this.extractChainUpgrade(l);let e=s,i=[],n={type:0,label:"New Version",value:e.newVersion};i.push(n);let o={type:0,label:"Upgrade After Blocks",value:e.upgradePeriod};i.push(o),a={signer:e.signer,signerAddressPlain:e.signerAddress,signerAddressPretty:r.Address.createFromRawAddress(e.signerAddress).pretty(),infos:i,sdas:[],legendType:0,typeName:e.type}}break;case r.TransactionType.LINK_ACCOUNT:{let l=t;s=this.extractAccountLink(l);let e=s,i=[],n={type:e.action==="Link"?1:2,value:e.remotePublicKey};i.push(n),a={signer:e.signer,signerAddressPlain:e.signerAddress,signerAddressPretty:r.Address.createFromRawAddress(e.signerAddress).pretty(),infos:i,sdas:[],legendType:1,typeName:e.type}}break;case r.TransactionType.HASH_LOCK:{let l=t;s=await this.extractLockHash(l,r.TransactionGroupType.PARTIAL);let e=s,i=[],n={type:0,label:"Hash",value:e.lockHash};i.push(n);let o={type:0,label:"Action",value:e.duration};i.push(o);let p={type:0,label:"Locking Amount",value:e.amountLocking+` ${g.nativeToken.label}`};i.push(p),a={signer:e.signer,signerAddressPlain:e.signerAddress,signerAddressPretty:r.Address.createFromRawAddress(e.signerAddress).pretty(),infos:i,sdas:[],legendType:0,typeName:e.type}}break;case r.TransactionType.MODIFY_ACCOUNT_RESTRICTION_ADDRESS:{let l=t;s=this.extractAccAddressRestriction(l);let e=s,i=[],n={type:0,label:"Action",value:e.restrictionTypeOutput};i.push(n);for(let o=0;o<e.modification.length;++o){let p=e.modification[o],d={type:p.action==="Add"?1:2,value:p.value,short:this.wallet.convertAddressToName(p.value)};i.push(d)}a={signer:e.signer,signerAddressPlain:e.signerAddress,signerAddressPretty:r.Address.createFromRawAddress(e.signerAddress).pretty(),infos:i,sdas:[],legendType:4,typeName:e.type}}break;case r.TransactionType.MODIFY_ACCOUNT_RESTRICTION_MOSAIC:{let l=t;s=await this.extractAccAssetRestriction(l);let e=s,i=[],n={type:0,label:"Action",value:e.restrictionTypeOutput};i.push(n);for(let o=0;o<e.modification.length;++o){let p=e.modification[o],d={type:p.action==="Add"?1:2,value:p.value+p.name?`(${p.name})`:""};i.push(d)}a={signer:e.signer,signerAddressPlain:e.signerAddress,signerAddressPretty:r.Address.createFromRawAddress(e.signerAddress).pretty(),infos:i,sdas:[],legendType:4,typeName:e.type}}break;case r.TransactionType.MODIFY_ACCOUNT_RESTRICTION_OPERATION:{let l=t;s=this.extractAccOperationRestriction(l);let e=s,i=[],n={type:0,label:"Action",value:e.restrictionTypeOutput};i.push(n);for(let o=0;o<e.modification.length;++o){let p=e.modification[o],d={type:p.action==="Add"?1:2,value:p.value};i.push(d)}a={signer:e.signer,signerAddressPlain:e.signerAddress,signerAddressPretty:r.Address.createFromRawAddress(e.signerAddress).pretty(),infos:i,sdas:[],legendType:4,typeName:e.type}}break;case r.TransactionType.MODIFY_MULTISIG_ACCOUNT:{let l=t;s=await this.extractModifyMultisig(l,r.TransactionGroupType.PARTIAL);let e=s,i=[],n;e.approvalDelta===0?n="":e.approvalDelta>0?n=` (+${e.approvalDelta})`:n=` (${e.approvalDelta})`;let o={type:0,label:"Minimum Approval",value:e.oldApprovalNumber+n};i.push(o);let p;e.removalDelta===0?p="":e.removalDelta>0?p=` (+${e.removalDelta})`:p=` (${e.removalDelta})`;let d={type:0,label:"Minimum Removal",value:e.oldRemovalNumber+p};i.push(d);for(let c=0;c<e.addedCosigner.length;++c){let y=r.PublicAccount.createFromPublicKey(e.addedCosigner[c],g.networkType),T=this.wallet.convertAddressToName(y.address.plain()),u=T===y.address.plain()?"":T,h={type:1,value:e.addedCosigner[c],short:u};i.push(h)}for(let c=0;c<e.removedCosigner.length;++c){let y=r.PublicAccount.createFromPublicKey(e.removedCosigner[c],g.networkType),T={type:2,value:e.removedCosigner[c],short:this.wallet.convertAddressToName(y.address.plain())};i.push(T)}a={signer:e.signer,signerAddressPlain:e.signerAddress,signerAddressPretty:r.Address.createFromRawAddress(e.signerAddress).pretty(),infos:i,sdas:[],legendType:1,typeName:e.type}}break;case r.TransactionType.MOSAIC_DEFINITION:{let l=t;s=this.extractAssetDefinition(l);let e=s,i=[],n={type:0,label:"Asset",value:e.assetId};i.push(n);let o={type:3,value:`Divisibility: ${e.divisibility}`};i.push(o);let p={type:e.transferable?1:2,value:"Transferable"};i.push(p);let d={type:e.supplyMutable?1:2,value:"Supply Mutable"};if(i.push(d),e.duration){let c={type:0,label:"Duration",value:e.duration};i.push(c)}a={signer:e.signer,signerAddressPlain:e.signerAddress,signerAddressPretty:r.Address.createFromRawAddress(e.signerAddress).pretty(),infos:i,sdas:[],legendType:2,typeName:e.type}}break;case r.TransactionType.MOSAIC_SUPPLY_CHANGE:{let l=t;s=await this.extractAssetSupplyChange(l);let e=s,i=[],n={type:0,label:"Asset",value:e.assetId+(e.namespaceName?` (${e.namespaceName})`:"")};i.push(n);let o={type:0,label:"Delta",value:e.supplyDelta>0?`+${e.supplyDelta}`:e.supplyDelta};i.push(o),a={signer:e.signer,signerAddressPlain:e.signerAddress,signerAddressPretty:r.Address.createFromRawAddress(e.signerAddress).pretty(),infos:i,sdas:[],legendType:0,typeName:e.type}}break;case r.TransactionType.MODIFY_MOSAIC_LEVY:{let l=t;s=await this.extractAssetModifyLevy(l);let e=s,i=[],n={type:0,label:"Asset",value:e.assetId+e.namespaceName?` (${e.namespaceName})`:""};i.push(n);let o={type:0,label:"Levy Asset",value:e.levyAssetAmount+" "+e.levyAssetId+e.levyAssetName?` (${e.levyAssetName})`:""};i.push(o);let p={type:0,label:"Levy Recipient",value:e.levyRecipient,short:this.wallet.convertAddressToName(e.levyRecipient)};i.push(p),a={signer:e.signer,signerAddressPlain:e.signerAddress,signerAddressPretty:r.Address.createFromRawAddress(e.signerAddress).pretty(),infos:i,sdas:[],legendType:0,typeName:e.type}}break;case r.TransactionType.REMOVE_MOSAIC_LEVY:{let l=t;s=await this.extractAssetRemoveLevy(l);let e=s,i=[],n={type:0,label:"Asset",value:e.assetId+e.namespaceName?` (${e.namespaceName})`:""};i.push(n),a={signer:e.signer,signerAddressPlain:e.signerAddress,signerAddressPretty:r.Address.createFromRawAddress(e.signerAddress).pretty(),infos:i,sdas:[],legendType:0,typeName:e.type}}break;case r.TransactionType.REGISTER_NAMESPACE:{let l=t;s=await this.extractRegisterNamespace(l);let e=s,i=[],n={type:0,label:"Type",value:e.registerTypeName+(e.isExtend?" (Extend)":" (Register)")};i.push(n);let o={type:0,label:"Name",value:e.namespaceName};if(i.push(o),e.parentName){let p={type:0,label:"Parent Name",value:e.parentName};i.push(p)}if(e.duration){let p={type:0,label:"Duration",value:e.duration.toString()};i.push(p)}a={signer:e.signer,signerAddressPlain:e.signerAddress,signerAddressPretty:r.Address.createFromRawAddress(e.signerAddress).pretty(),infos:i,sdas:[],legendType:0,typeName:e.type}}break;case r.TransactionType.SECRET_LOCK:{let l=t;s=await this.extractNonconfirmedSecretLock(l,r.TransactionGroupType.PARTIAL);let e=s,i=[],n=[],o=`${e.amount} ${e.assetId}`+e.namespaceName?` (${e.namespaceName})`:"";n.push(o);let p={type:0,label:"Recipient",value:e.recipient,short:this.wallet.convertAddressToName(e.recipient)};i.push(p);let d={type:0,label:"Hash Type",value:e.hashType};i.push(d);let c={type:0,label:"Secret",value:e.secret};i.push(c);let y={type:0,label:"Duration",value:e.duration};i.push(y),a={signer:e.signer,signerAddressPlain:e.signerAddress,signerAddressPretty:r.Address.createFromRawAddress(e.signerAddress).pretty(),infos:i,sdas:n,legendType:0,typeName:e.type}}break;case r.TransactionType.SECRET_PROOF:{let l=t;s=this.extractSecretProof(l);let e=s,i=[],n={type:0,label:"Recipient",value:e.recipient,short:this.wallet.convertAddressToName(e.recipient)};i.push(n);let o={type:0,label:"Hash Type",value:e.hashType};i.push(o);let p={type:0,label:"Secret",value:e.secret};i.push(p);let d={type:0,label:"Proof",value:e.proof};i.push(d),a={signer:e.signer,signerAddressPlain:e.signerAddress,signerAddressPretty:r.Address.createFromRawAddress(e.signerAddress).pretty(),infos:i,sdas:[],legendType:0,typeName:e.type}}break;case r.TransactionType.TRANSFER:{let l=t;s=await this.extractNonconfirmedTransfer(l,r.TransactionGroupType.PARTIAL);let e=s,i=[],n=[],o=this.wallet.convertAddressToName(e.recipient);o===e.recipient&&e.recipientNamespaceName?o=e.recipientNamespaceName:o===e.recipient&&(o="");let p={type:0,label:"Recipient",value:r.Address.createFromRawAddress(e.recipient).pretty(),short:o};if(n.push(p),e.message){let d={type:0,label:e.messageTypeTitle,value:e.messageType===r.MessageType.EncryptedMessage?"xxxxxx":e.message};n.push(d)}e.amountTransfer&&i.push(`${e.amountTransfer} ${g.nativeToken.label}`);for(let d=0;d<e.sda.length;++d){let c=e.sda[d],y="";c.currentAlias&&c.currentAlias.length?y=c.amount+` ${c.id} (${c.currentAlias[0].name})`:y=c.amount+" "+c.id,i.push(y)}a={signer:e.signer,signerAddressPlain:e.signerAddress,signerAddressPretty:r.Address.createFromRawAddress(e.signerAddress).pretty(),infos:n,sdas:i,legendType:0,typeName:e.type}}break;case r.TransactionType.ACCOUNT_METADATA_V2:{let l=t;s=await this.extractAccMetadata(l,r.TransactionGroupType.PARTIAL);let e=s,i=[],n=r.PublicAccount.createFromPublicKey(e.targetPublicKey,g.networkType),o=n.address.plain(),p={type:0,label:"Account",value:n.address.plain(),short:this.wallet.convertAddressToName(o)};i.push(p);let d={type:0,label:"Scoped Metadata Key",value:e.scopedMetadataKey};if(i.push(d),e.oldValue){let y={type:0,label:"Current Value",value:e.oldValue};i.push(y)}let c={type:0,label:"New Value",value:e.newValue};i.push(c),a={signer:e.signer,signerAddressPlain:e.signerAddress,signerAddressPretty:r.Address.createFromRawAddress(e.signerAddress).pretty(),infos:i,sdas:[],legendType:0,typeName:e.type}}break;case r.TransactionType.NAMESPACE_METADATA_V2:{let l=t;s=await this.extractNamespaceMetadata(l,r.TransactionGroupType.PARTIAL);let e=s,i=[],n={type:0,label:"Namespace",value:e.targetIdName?e.targetIdName:e.targetId};i.push(n);let o={type:0,label:"Scoped Metadata Key",value:e.scopedMetadataKey};if(i.push(o),e.oldValue){let d={type:0,label:"Current Value",value:e.oldValue};i.push(d)}let p={type:0,label:"New Value",value:e.newValue};i.push(p),a={signer:e.signer,signerAddressPlain:e.signerAddress,signerAddressPretty:r.Address.createFromRawAddress(e.signerAddress).pretty(),infos:i,sdas:[],legendType:0,typeName:e.type}}break;case r.TransactionType.MOSAIC_METADATA_V2:{let l=t;s=await this.extractAssetMetadata(l,r.TransactionGroupType.PARTIAL);let e=s,i=[],n={type:0,label:"Asset",value:e.targetIdName?e.targetIdName:e.targetId};i.push(n);let o={type:0,label:"Scoped Metadata Key",value:e.scopedMetadataKey};if(i.push(o),e.oldValue){let d={type:0,label:"Current Value",value:e.oldValue};i.push(d)}let p={type:0,label:"New Value",value:e.newValue};i.push(p),a={signer:e.signer,signerAddressPlain:e.signerAddress,signerAddressPretty:r.Address.createFromRawAddress(e.signerAddress).pretty(),infos:i,sdas:[],legendType:0,typeName:e.type}}break}return a}addressConvertToName(t){let a=this.wallet.convertAddressToName(t);return a===t?r.Address.createFromRawAddress(a).pretty():a}publickKeyConvertToName(t){let a=r.PublicAccount.createFromPublicKey(t,g.networkType).address.plain(),s=this.wallet.convertAddressToName(a);return s===a?t:s}static convertToExactNativeAmount(t){return g.nativeToken.divisibility===0?t:t>0?t/Math.pow(10,g.nativeToken.divisibility):0}static convertToExactAmount(t,a){return a===0?t:t/Math.pow(10,a)}}export{m as D,He as I,be as M};
