import{d as N}from"./tsjs-xpx-chain-sdk-84426b6a.js";import{r as P,A as f,m as w,n as b,w as d,l as v,W as y,f as T}from"./index-71c561bd.js";const a=class a{static async getLinkedMosaic(t,n){return await new P(n).namespaceAPI.getLinkedMosaicId(t)}static async getLinkedAddress(t,n){return await new P(n).namespaceAPI.getLinkedAddress(t)}static getCosignerList(t){const n=d.currentLoggedInWallet.accounts.find(l=>l.address==t),c=d.currentLoggedInWallet.others.find(l=>l.address==t);let o=n?n.getDirectParentMultisig():[],i=c?c.getDirectParentMultisig():[];if(o.length>0||i.length>0){const l=d.currentLoggedInWallet.accounts.filter(r=>{if(o.indexOf(r.publicKey)>=0||i.indexOf(r.publicKey)>=0)return!0});let u=[];return l.length>0&&l.forEach(r=>{u.push({name:r.name,address:r.address,balance:r.balance})}),{list:u}}else return{list:[]}}};a.rootNamespaceTransaction=(t,n)=>f.buildTxn.registerRootNamespace(t,N.UInt64.fromUint(a.calculateDuration(n))),a.subNamespaceTransaction=(t,n)=>f.buildTxn.registersubNamespace(t,n),a.getRootNamespaceTransactionFee=t=>a.rootNamespaceTransaction(t,10).maxFee.compact(),a.getSubNamespaceTransactionFee=(t,n)=>a.subNamespaceTransaction(n,t).maxFee.compact(),a.calculateDuration=t=>{let n=new w(b.chainNetworkName);n.init();let c=parseInt(n.blockGenerationTargetTime),o=60*60*24/c;return Math.floor(t*o)},a.listNamespaces=t=>{const n=d.currentLoggedInWallet.accounts.find(e=>e.address===t),c=n?n.namespaces.filter(e=>e.active===!0):[],o=d.currentLoggedInWallet.others.find(e=>e.address===t),i=o?o.namespaces.filter(e=>e.active===!0):[],l=c.length,u=i.length;let r=[];return l+u>0&&(l>0&&c.forEach(e=>{const s=e.name.split(".");let g;if(s.length>2?g=!0:g=!1,typeof e.endHeight=="string"){r.push({value:e.name,label:e.name,disabled:g,level:s});return}e.endHeight-f.readBlockHeight>0&&r.push({value:e.name,label:e.name,disabled:g,level:s})}),u>0&&i.forEach(e=>{const s=e.name.split(".");let g;if(s.length>2?g=!0:g=!1,typeof e.endHeight=="string"){r.push({value:e.name,label:e.name,disabled:g,level:s});return}e.endHeight-v.currentBlock>0&&r.push({value:e.name,label:e.name,disabled:g,level:s})}),r.sort((e,s)=>e.label>s.label?1:e.label<s.label?-1:0),r.sort((e,s)=>e.level>s.level?1:e.level<s.level?-1:0)),r},a.listRootNamespaces=t=>{const n=d.currentLoggedInWallet.accounts.find(e=>e.address===t),c=n?n.namespaces.filter(e=>e.active===!0):[],o=d.currentLoggedInWallet.others.find(e=>e.address===t),i=o?o.namespaces.filter(e=>e.active===!0):[],l=c.length,u=i.length;let r=[];return l+u>0&&(l>0&&c.forEach(e=>{const s=e.name.split(".");let g=!1;s.length==1&&r.push({value:e.name,label:e.name,disabled:g,level:s})}),u>0&&i.forEach(e=>{const s=e.name.split(".");let g=!1;s.length==1&&r.push({value:e.name,label:e.name,disabled:g,level:s})}),r.sort((e,s)=>e.label>s.label?1:e.label<s.label?-1:0)),r},a.getSenderAccount=(t,n)=>{const c=N.Address.createFromRawAddress(t),o=d.currentLoggedInWallet.accounts.find(r=>r.address==c.plain()),i=y.createPassword(n);let l=y.decryptPrivateKey(i,o.encrypted,o.iv);return N.Account.createFromPrivateKey(l,f.networkType,1)},a.createRootNamespace=(t,n,c,o)=>{let i=a.rootNamespaceTransaction(c,o),u=a.getSenderAccount(t,n).preV2Sign(i,b.currentNetworkProfile.generationHash);return T.announceTransaction(u),u.hash},a.createSubNamespace=(t,n,c,o)=>{let i=a.subNamespaceTransaction(o,c),u=a.getSenderAccount(t,n).preV2Sign(i,b.currentNetworkProfile.generationHash);T.announceTransaction(u)},a.createRootNamespaceMultisig=(t,n,c,o,i)=>{let l=f.buildTxn,u=a.rootNamespaceTransaction(c,o);const r=a.getSenderAccount(t,n),e=d.currentLoggedInWallet.accounts.find(h=>h.address===i),s=d.currentLoggedInWallet.others.find(h=>h.address===i),g=e?e.publicKey:s.publicKey,m=N.PublicAccount.createFromPublicKey(g,f.networkType),A=[u.toAggregateV1(m)],k=l.aggregateBonded(A),p=r.preV2Sign(k,b.currentNetworkProfile.generationHash);let S=T.lockFundTx(p),x=r.preV2Sign(S,b.currentNetworkProfile.generationHash);T.announceLF_AND_addAutoAnnounceABT(x,p)},a.createSubNamespaceMultisig=(t,n,c,o,i)=>{let l=f.buildTxn,u=a.subNamespaceTransaction(o,c);const r=a.getSenderAccount(t,n),e=d.currentLoggedInWallet.accounts.find(h=>h.address===i),s=d.currentLoggedInWallet.others.find(h=>h.address===i),g=e?e.publicKey:s.publicKey,m=N.PublicAccount.createFromPublicKey(g,f.networkType),A=[u.toAggregateV1(m)],k=l.aggregateBonded(A),p=r.preV2Sign(k,b.currentNetworkProfile.generationHash);let S=T.lockFundTx(p),x=r.preV2Sign(S,b.currentNetworkProfile.generationHash);T.announceLF_AND_addAutoAnnounceABT(x,p)},a.extendNamespace=(t,n,c,o)=>{let i=a.rootNamespaceTransaction(c,o),u=a.getSenderAccount(t,n).preV2Sign(i,b.currentNetworkProfile.generationHash);T.announceTransaction(u)},a.extendNamespaceMultisig=(t,n,c,o,i)=>{let l=f.buildTxn,u=a.rootNamespaceTransaction(c,o);const r=a.getSenderAccount(t,n),e=d.currentLoggedInWallet.accounts.find(h=>h.address===i),s=d.currentLoggedInWallet.others.find(h=>h.address===i),g=e?e.publicKey:s.publicKey,m=N.PublicAccount.createFromPublicKey(g,f.networkType),A=[u.toAggregateV1(m)],k=l.aggregateBonded(A),p=r.preV2Sign(k,b.currentNetworkProfile.generationHash);let S=T.lockFundTx(p),x=r.preV2Sign(S,b.currentNetworkProfile.generationHash);T.announceLF_AND_addAutoAnnounceABT(x,p)};let L=a;export{L as N};
